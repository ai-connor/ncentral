/*
N-central API-Service

<h3>API Access</h3> <p>In order to use the API-Service endpoints, ensure the following prerequisites are met:</p> <ol>     <li>User is created in N-central with appropriate permissions and configuration         (roles, access groups, MFA disabled, 2FA disabled).</li>     <li>API access is set up in N-central by having a JWT         (Json Web Token, referred to as \"N-central User-API Token\") generated,         acting as the permanent secret solely used for fetching access and refresh tokens.</li> </ol> <p>To access the API-Service endpoints, the JWT must first be exchanged with access and refresh tokens:</p> <ul>     <li>         <p><b>Using Swagger UI:</b></p>         <ol>             <li>Click on the <b>\"Authorize\"</b> button and enter the JWT into the value field                 under <b>\"N-central User-API Token (JWT)\"</b>, then navigate to                 the <code>/api/auth/authenticate</code> endpoint, click <b>\"Try it out\"</b>                 and then <b>\"Execute\"</b>.                 <br/>The new “Access Token” and “Refresh Token” fields will be available in the “Server Response”                 section below. Note that the expiry is 3600s ( 1h ). Copy the value of the access token.</li>             <li>Click on the <b>lock icon</b> to the right of any endpoint                 (or the <b>\"Authorize\"</b> button at the top), enter the access token in the                 <b>\"API-Access Token\"</b> field and click <b>\"Authorize\"</b>.</li>             <li>To call an API-Service endpoint, navigate to it, click <b>\"Try it out\"</b> button and             then <b>\"Execute\"</b>. If the steps above were successful, the access token is included in requests             automatically.</li>         </ol>     </li>     <li>         <p><b>Using a different HTTP client:</b></p>         <ol>             <li>Call the <code>/api/auth/authenticate</code> endpoint.                 The JWT token must be specified under the <code>Authorization</code> header,                 in the form <code>Bearer &lt;YOUR_JWT&gt;\"</code>.                 <br/>The access and refresh tokens are present in the response.</li>             <li>When calling API-Service endpoints, make sure to specify the <b>access token</b> in             the <code>Authorization</code> header as <code>Bearer &lt;ACCESS_TOKEN&gt;</code>.</li>         </ol>     </li> </ul> <h3>API Pagination & Sorting</h3> <p>Certain API-Service query endpoints support pagination and sorting through the use of query parameters.</p> <p><b>Pagination query parameters:</b></p> <ul>     <li>pageSize: number between 1 and 1000 specifying how many items to return for each page (if available).         If unspecified, the default is 50.</li>     <li>pageNumber: number specifying what page of data to retrieve, starting from 1 as the first page.         If unspecified, the default is 1.</li> </ul> <p>A paginated response contains several related fields, such as pageSize, pageNumber, itemCount, totalItems,     totalPages, _links (first, last, previous and next pages) and _warning (containing any warning messages,     if present).</p> <p><b>Sorting query parameters:</b></p> <ul>     <li>sortBy: the name of the field to sort the results by. If unspecified, no sorting is applied.</li>     <li>sortOrder: the case insensitive sorting direction supporting ASC/ASCENDING/NATURAL and         DESC/DESCENDING/REVERSE. If unspecified, the default is ASC.</li> </ul> <h3>API Rate Limiting</h3> <p>The API-Service endpoints are rate limited to ensure the stability, availability and performance of     the overall system.</p> <p>Upon reaching such a rate limit, the endpoints return HTTP Status 429 - Too Many Requests.</p> <p>The system will accept further requests once existing in-flight requests are completed.</p> 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncentral

import (
	"encoding/json"
)

// checks if the DefaultDeviceCustomProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultDeviceCustomProperty{}

// DefaultDeviceCustomProperty Response for default custom property.
type DefaultDeviceCustomProperty struct {
	PropertyId *int32 `json:"propertyId,omitempty"`
	CustomerId *int32 `json:"customerId,omitempty"`
	PropertyName *string `json:"propertyName,omitempty"`
	PropertyLevel *string `json:"propertyLevel,omitempty"`
	PropertyType *string `json:"propertyType,omitempty"`
	Value *string `json:"value,omitempty"`
	EnumeratedValues []DeviceCustomPropertyEnumeratedValue `json:"enumeratedValues,omitempty"`
	DeviceClasses []string `json:"deviceClasses,omitempty"`
	SupportedOs []string `json:"supportedOs,omitempty"`
}

// NewDefaultDeviceCustomProperty instantiates a new DefaultDeviceCustomProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultDeviceCustomProperty() *DefaultDeviceCustomProperty {
	this := DefaultDeviceCustomProperty{}
	return &this
}

// NewDefaultDeviceCustomPropertyWithDefaults instantiates a new DefaultDeviceCustomProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultDeviceCustomPropertyWithDefaults() *DefaultDeviceCustomProperty {
	this := DefaultDeviceCustomProperty{}
	return &this
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *DefaultDeviceCustomProperty) GetPropertyId() int32 {
	if o == nil || IsNil(o.PropertyId) {
		var ret int32
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeviceCustomProperty) GetPropertyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PropertyId) {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *DefaultDeviceCustomProperty) HasPropertyId() bool {
	if o != nil && !IsNil(o.PropertyId) {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given int32 and assigns it to the PropertyId field.
func (o *DefaultDeviceCustomProperty) SetPropertyId(v int32) {
	o.PropertyId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *DefaultDeviceCustomProperty) GetCustomerId() int32 {
	if o == nil || IsNil(o.CustomerId) {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeviceCustomProperty) GetCustomerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *DefaultDeviceCustomProperty) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *DefaultDeviceCustomProperty) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetPropertyName returns the PropertyName field value if set, zero value otherwise.
func (o *DefaultDeviceCustomProperty) GetPropertyName() string {
	if o == nil || IsNil(o.PropertyName) {
		var ret string
		return ret
	}
	return *o.PropertyName
}

// GetPropertyNameOk returns a tuple with the PropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeviceCustomProperty) GetPropertyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyName) {
		return nil, false
	}
	return o.PropertyName, true
}

// HasPropertyName returns a boolean if a field has been set.
func (o *DefaultDeviceCustomProperty) HasPropertyName() bool {
	if o != nil && !IsNil(o.PropertyName) {
		return true
	}

	return false
}

// SetPropertyName gets a reference to the given string and assigns it to the PropertyName field.
func (o *DefaultDeviceCustomProperty) SetPropertyName(v string) {
	o.PropertyName = &v
}

// GetPropertyLevel returns the PropertyLevel field value if set, zero value otherwise.
func (o *DefaultDeviceCustomProperty) GetPropertyLevel() string {
	if o == nil || IsNil(o.PropertyLevel) {
		var ret string
		return ret
	}
	return *o.PropertyLevel
}

// GetPropertyLevelOk returns a tuple with the PropertyLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeviceCustomProperty) GetPropertyLevelOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyLevel) {
		return nil, false
	}
	return o.PropertyLevel, true
}

// HasPropertyLevel returns a boolean if a field has been set.
func (o *DefaultDeviceCustomProperty) HasPropertyLevel() bool {
	if o != nil && !IsNil(o.PropertyLevel) {
		return true
	}

	return false
}

// SetPropertyLevel gets a reference to the given string and assigns it to the PropertyLevel field.
func (o *DefaultDeviceCustomProperty) SetPropertyLevel(v string) {
	o.PropertyLevel = &v
}

// GetPropertyType returns the PropertyType field value if set, zero value otherwise.
func (o *DefaultDeviceCustomProperty) GetPropertyType() string {
	if o == nil || IsNil(o.PropertyType) {
		var ret string
		return ret
	}
	return *o.PropertyType
}

// GetPropertyTypeOk returns a tuple with the PropertyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeviceCustomProperty) GetPropertyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyType) {
		return nil, false
	}
	return o.PropertyType, true
}

// HasPropertyType returns a boolean if a field has been set.
func (o *DefaultDeviceCustomProperty) HasPropertyType() bool {
	if o != nil && !IsNil(o.PropertyType) {
		return true
	}

	return false
}

// SetPropertyType gets a reference to the given string and assigns it to the PropertyType field.
func (o *DefaultDeviceCustomProperty) SetPropertyType(v string) {
	o.PropertyType = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DefaultDeviceCustomProperty) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeviceCustomProperty) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DefaultDeviceCustomProperty) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *DefaultDeviceCustomProperty) SetValue(v string) {
	o.Value = &v
}

// GetEnumeratedValues returns the EnumeratedValues field value if set, zero value otherwise.
func (o *DefaultDeviceCustomProperty) GetEnumeratedValues() []DeviceCustomPropertyEnumeratedValue {
	if o == nil || IsNil(o.EnumeratedValues) {
		var ret []DeviceCustomPropertyEnumeratedValue
		return ret
	}
	return o.EnumeratedValues
}

// GetEnumeratedValuesOk returns a tuple with the EnumeratedValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeviceCustomProperty) GetEnumeratedValuesOk() ([]DeviceCustomPropertyEnumeratedValue, bool) {
	if o == nil || IsNil(o.EnumeratedValues) {
		return nil, false
	}
	return o.EnumeratedValues, true
}

// HasEnumeratedValues returns a boolean if a field has been set.
func (o *DefaultDeviceCustomProperty) HasEnumeratedValues() bool {
	if o != nil && !IsNil(o.EnumeratedValues) {
		return true
	}

	return false
}

// SetEnumeratedValues gets a reference to the given []DeviceCustomPropertyEnumeratedValue and assigns it to the EnumeratedValues field.
func (o *DefaultDeviceCustomProperty) SetEnumeratedValues(v []DeviceCustomPropertyEnumeratedValue) {
	o.EnumeratedValues = v
}

// GetDeviceClasses returns the DeviceClasses field value if set, zero value otherwise.
func (o *DefaultDeviceCustomProperty) GetDeviceClasses() []string {
	if o == nil || IsNil(o.DeviceClasses) {
		var ret []string
		return ret
	}
	return o.DeviceClasses
}

// GetDeviceClassesOk returns a tuple with the DeviceClasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeviceCustomProperty) GetDeviceClassesOk() ([]string, bool) {
	if o == nil || IsNil(o.DeviceClasses) {
		return nil, false
	}
	return o.DeviceClasses, true
}

// HasDeviceClasses returns a boolean if a field has been set.
func (o *DefaultDeviceCustomProperty) HasDeviceClasses() bool {
	if o != nil && !IsNil(o.DeviceClasses) {
		return true
	}

	return false
}

// SetDeviceClasses gets a reference to the given []string and assigns it to the DeviceClasses field.
func (o *DefaultDeviceCustomProperty) SetDeviceClasses(v []string) {
	o.DeviceClasses = v
}

// GetSupportedOs returns the SupportedOs field value if set, zero value otherwise.
func (o *DefaultDeviceCustomProperty) GetSupportedOs() []string {
	if o == nil || IsNil(o.SupportedOs) {
		var ret []string
		return ret
	}
	return o.SupportedOs
}

// GetSupportedOsOk returns a tuple with the SupportedOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeviceCustomProperty) GetSupportedOsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedOs) {
		return nil, false
	}
	return o.SupportedOs, true
}

// HasSupportedOs returns a boolean if a field has been set.
func (o *DefaultDeviceCustomProperty) HasSupportedOs() bool {
	if o != nil && !IsNil(o.SupportedOs) {
		return true
	}

	return false
}

// SetSupportedOs gets a reference to the given []string and assigns it to the SupportedOs field.
func (o *DefaultDeviceCustomProperty) SetSupportedOs(v []string) {
	o.SupportedOs = v
}

func (o DefaultDeviceCustomProperty) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultDeviceCustomProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PropertyId) {
		toSerialize["propertyId"] = o.PropertyId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.PropertyName) {
		toSerialize["propertyName"] = o.PropertyName
	}
	if !IsNil(o.PropertyLevel) {
		toSerialize["propertyLevel"] = o.PropertyLevel
	}
	if !IsNil(o.PropertyType) {
		toSerialize["propertyType"] = o.PropertyType
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.EnumeratedValues) {
		toSerialize["enumeratedValues"] = o.EnumeratedValues
	}
	if !IsNil(o.DeviceClasses) {
		toSerialize["deviceClasses"] = o.DeviceClasses
	}
	if !IsNil(o.SupportedOs) {
		toSerialize["supportedOs"] = o.SupportedOs
	}
	return toSerialize, nil
}

type NullableDefaultDeviceCustomProperty struct {
	value *DefaultDeviceCustomProperty
	isSet bool
}

func (v NullableDefaultDeviceCustomProperty) Get() *DefaultDeviceCustomProperty {
	return v.value
}

func (v *NullableDefaultDeviceCustomProperty) Set(val *DefaultDeviceCustomProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultDeviceCustomProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultDeviceCustomProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultDeviceCustomProperty(val *DefaultDeviceCustomProperty) *NullableDefaultDeviceCustomProperty {
	return &NullableDefaultDeviceCustomProperty{value: val, isSet: true}
}

func (v NullableDefaultDeviceCustomProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultDeviceCustomProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


