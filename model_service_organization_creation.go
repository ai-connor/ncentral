/*
N-central API-Service

<h3>API Access</h3> <p>In order to use the API-Service endpoints, ensure the following prerequisites are met:</p> <ol>     <li>User is created in N-central with appropriate permissions and configuration         (roles, access groups, MFA disabled, 2FA disabled).</li>     <li>API access is set up in N-central by having a JWT         (Json Web Token, referred to as \"N-central User-API Token\") generated,         acting as the permanent secret solely used for fetching access and refresh tokens.</li> </ol> <p>To access the API-Service endpoints, the JWT must first be exchanged with access and refresh tokens:</p> <ul>     <li>         <p><b>Using Swagger UI:</b></p>         <ol>             <li>Click on the <b>\"Authorize\"</b> button and enter the JWT into the value field                 under <b>\"N-central User-API Token (JWT)\"</b>, then navigate to                 the <code>/api/auth/authenticate</code> endpoint, click <b>\"Try it out\"</b>                 and then <b>\"Execute\"</b>.                 <br/>The new “Access Token” and “Refresh Token” fields will be available in the “Server Response”                 section below. Note that the expiry is 3600s ( 1h ). Copy the value of the access token.</li>             <li>Click on the <b>lock icon</b> to the right of any endpoint                 (or the <b>\"Authorize\"</b> button at the top), enter the access token in the                 <b>\"API-Access Token\"</b> field and click <b>\"Authorize\"</b>.</li>             <li>To call an API-Service endpoint, navigate to it, click <b>\"Try it out\"</b> button and             then <b>\"Execute\"</b>. If the steps above were successful, the access token is included in requests             automatically.</li>         </ol>     </li>     <li>         <p><b>Using a different HTTP client:</b></p>         <ol>             <li>Call the <code>/api/auth/authenticate</code> endpoint.                 The JWT token must be specified under the <code>Authorization</code> header,                 in the form <code>Bearer &lt;YOUR_JWT&gt;\"</code>.                 <br/>The access and refresh tokens are present in the response.</li>             <li>When calling API-Service endpoints, make sure to specify the <b>access token</b> in             the <code>Authorization</code> header as <code>Bearer &lt;ACCESS_TOKEN&gt;</code>.</li>         </ol>     </li> </ul> <h3>API Pagination & Sorting</h3> <p>Certain API-Service query endpoints support pagination and sorting through the use of query parameters.</p> <p><b>Pagination query parameters:</b></p> <ul>     <li>pageSize: number between 1 and 1000 specifying how many items to return for each page (if available).         If unspecified, the default is 50.</li>     <li>pageNumber: number specifying what page of data to retrieve, starting from 1 as the first page.         If unspecified, the default is 1.</li> </ul> <p>A paginated response contains several related fields, such as pageSize, pageNumber, itemCount, totalItems,     totalPages, _links (first, last, previous and next pages) and _warning (containing any warning messages,     if present).</p> <p><b>Sorting query parameters:</b></p> <ul>     <li>sortBy: the name of the field to sort the results by. If unspecified, no sorting is applied.</li>     <li>sortOrder: the case insensitive sorting direction supporting ASC/ASCENDING/NATURAL and         DESC/DESCENDING/REVERSE. If unspecified, the default is ASC.</li> </ul> <h3>API Rate Limiting</h3> <p>The API-Service endpoints are rate limited to ensure the stability, availability and performance of     the overall system.</p> <p>Upon reaching such a rate limit, the endpoints return HTTP Status 429 - Too Many Requests.</p> <p>The system will accept further requests once existing in-flight requests are completed.</p> 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncentral

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceOrganizationCreation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceOrganizationCreation{}

// ServiceOrganizationCreation Data object for organization unit.
type ServiceOrganizationCreation struct {
	// First name of the contact for the organization unit.
	ContactFirstName string `json:"contactFirstName"`
	// Last name of the contact for the organization unit.
	ContactLastName string `json:"contactLastName"`
	// The external ID of the organization unit.
	ExternalId *string `json:"externalId,omitempty"`
	// Telephone of the contact for the organization unit.
	Phone *string `json:"phone,omitempty"`
	// Title of the contact for the organization unit.
	ContactTitle *string `json:"contactTitle,omitempty"`
	// Contact email for the organization unit.
	ContactEmail *string `json:"contactEmail,omitempty"`
	// Telephone of the contact for the organization unit.
	ContactPhone *string `json:"contactPhone,omitempty"`
	// Telephone extension of the contact for the organization unit.
	ContactPhoneExt *string `json:"contactPhoneExt,omitempty"`
	// Department of the contact for the organization unit.
	ContactDepartment *string `json:"contactDepartment,omitempty"`
	// First line of street address for the organization unit.
	Street1 *string `json:"street1,omitempty"`
	// Second line of street address for the organization unit.
	Street2 *string `json:"street2,omitempty"`
	// City where the organization unit is located.
	City *string `json:"city,omitempty"`
	// State or province where the organization unit is located.
	StateProv *string `json:"stateProv,omitempty"`
	// Country where the organization unit is located. Must be two characters country code, see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
	Country *string `json:"country,omitempty"`
	// Postal code of the organization unit location.
	PostalCode *string `json:"postalCode,omitempty"`
	// Name of the service organization.
	SoName string `json:"soName"`
}

type _ServiceOrganizationCreation ServiceOrganizationCreation

// NewServiceOrganizationCreation instantiates a new ServiceOrganizationCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceOrganizationCreation(contactFirstName string, contactLastName string, soName string) *ServiceOrganizationCreation {
	this := ServiceOrganizationCreation{}
	this.ContactFirstName = contactFirstName
	this.ContactLastName = contactLastName
	this.SoName = soName
	return &this
}

// NewServiceOrganizationCreationWithDefaults instantiates a new ServiceOrganizationCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceOrganizationCreationWithDefaults() *ServiceOrganizationCreation {
	this := ServiceOrganizationCreation{}
	return &this
}

// GetContactFirstName returns the ContactFirstName field value
func (o *ServiceOrganizationCreation) GetContactFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContactFirstName
}

// GetContactFirstNameOk returns a tuple with the ContactFirstName field value
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetContactFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContactFirstName, true
}

// SetContactFirstName sets field value
func (o *ServiceOrganizationCreation) SetContactFirstName(v string) {
	o.ContactFirstName = v
}

// GetContactLastName returns the ContactLastName field value
func (o *ServiceOrganizationCreation) GetContactLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContactLastName
}

// GetContactLastNameOk returns a tuple with the ContactLastName field value
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetContactLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContactLastName, true
}

// SetContactLastName sets field value
func (o *ServiceOrganizationCreation) SetContactLastName(v string) {
	o.ContactLastName = v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *ServiceOrganizationCreation) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *ServiceOrganizationCreation) SetPhone(v string) {
	o.Phone = &v
}

// GetContactTitle returns the ContactTitle field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetContactTitle() string {
	if o == nil || IsNil(o.ContactTitle) {
		var ret string
		return ret
	}
	return *o.ContactTitle
}

// GetContactTitleOk returns a tuple with the ContactTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetContactTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ContactTitle) {
		return nil, false
	}
	return o.ContactTitle, true
}

// HasContactTitle returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasContactTitle() bool {
	if o != nil && !IsNil(o.ContactTitle) {
		return true
	}

	return false
}

// SetContactTitle gets a reference to the given string and assigns it to the ContactTitle field.
func (o *ServiceOrganizationCreation) SetContactTitle(v string) {
	o.ContactTitle = &v
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetContactEmail() string {
	if o == nil || IsNil(o.ContactEmail) {
		var ret string
		return ret
	}
	return *o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ContactEmail) {
		return nil, false
	}
	return o.ContactEmail, true
}

// HasContactEmail returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasContactEmail() bool {
	if o != nil && !IsNil(o.ContactEmail) {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given string and assigns it to the ContactEmail field.
func (o *ServiceOrganizationCreation) SetContactEmail(v string) {
	o.ContactEmail = &v
}

// GetContactPhone returns the ContactPhone field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetContactPhone() string {
	if o == nil || IsNil(o.ContactPhone) {
		var ret string
		return ret
	}
	return *o.ContactPhone
}

// GetContactPhoneOk returns a tuple with the ContactPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetContactPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.ContactPhone) {
		return nil, false
	}
	return o.ContactPhone, true
}

// HasContactPhone returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasContactPhone() bool {
	if o != nil && !IsNil(o.ContactPhone) {
		return true
	}

	return false
}

// SetContactPhone gets a reference to the given string and assigns it to the ContactPhone field.
func (o *ServiceOrganizationCreation) SetContactPhone(v string) {
	o.ContactPhone = &v
}

// GetContactPhoneExt returns the ContactPhoneExt field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetContactPhoneExt() string {
	if o == nil || IsNil(o.ContactPhoneExt) {
		var ret string
		return ret
	}
	return *o.ContactPhoneExt
}

// GetContactPhoneExtOk returns a tuple with the ContactPhoneExt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetContactPhoneExtOk() (*string, bool) {
	if o == nil || IsNil(o.ContactPhoneExt) {
		return nil, false
	}
	return o.ContactPhoneExt, true
}

// HasContactPhoneExt returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasContactPhoneExt() bool {
	if o != nil && !IsNil(o.ContactPhoneExt) {
		return true
	}

	return false
}

// SetContactPhoneExt gets a reference to the given string and assigns it to the ContactPhoneExt field.
func (o *ServiceOrganizationCreation) SetContactPhoneExt(v string) {
	o.ContactPhoneExt = &v
}

// GetContactDepartment returns the ContactDepartment field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetContactDepartment() string {
	if o == nil || IsNil(o.ContactDepartment) {
		var ret string
		return ret
	}
	return *o.ContactDepartment
}

// GetContactDepartmentOk returns a tuple with the ContactDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetContactDepartmentOk() (*string, bool) {
	if o == nil || IsNil(o.ContactDepartment) {
		return nil, false
	}
	return o.ContactDepartment, true
}

// HasContactDepartment returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasContactDepartment() bool {
	if o != nil && !IsNil(o.ContactDepartment) {
		return true
	}

	return false
}

// SetContactDepartment gets a reference to the given string and assigns it to the ContactDepartment field.
func (o *ServiceOrganizationCreation) SetContactDepartment(v string) {
	o.ContactDepartment = &v
}

// GetStreet1 returns the Street1 field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetStreet1() string {
	if o == nil || IsNil(o.Street1) {
		var ret string
		return ret
	}
	return *o.Street1
}

// GetStreet1Ok returns a tuple with the Street1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetStreet1Ok() (*string, bool) {
	if o == nil || IsNil(o.Street1) {
		return nil, false
	}
	return o.Street1, true
}

// HasStreet1 returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasStreet1() bool {
	if o != nil && !IsNil(o.Street1) {
		return true
	}

	return false
}

// SetStreet1 gets a reference to the given string and assigns it to the Street1 field.
func (o *ServiceOrganizationCreation) SetStreet1(v string) {
	o.Street1 = &v
}

// GetStreet2 returns the Street2 field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetStreet2() string {
	if o == nil || IsNil(o.Street2) {
		var ret string
		return ret
	}
	return *o.Street2
}

// GetStreet2Ok returns a tuple with the Street2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetStreet2Ok() (*string, bool) {
	if o == nil || IsNil(o.Street2) {
		return nil, false
	}
	return o.Street2, true
}

// HasStreet2 returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasStreet2() bool {
	if o != nil && !IsNil(o.Street2) {
		return true
	}

	return false
}

// SetStreet2 gets a reference to the given string and assigns it to the Street2 field.
func (o *ServiceOrganizationCreation) SetStreet2(v string) {
	o.Street2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *ServiceOrganizationCreation) SetCity(v string) {
	o.City = &v
}

// GetStateProv returns the StateProv field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetStateProv() string {
	if o == nil || IsNil(o.StateProv) {
		var ret string
		return ret
	}
	return *o.StateProv
}

// GetStateProvOk returns a tuple with the StateProv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetStateProvOk() (*string, bool) {
	if o == nil || IsNil(o.StateProv) {
		return nil, false
	}
	return o.StateProv, true
}

// HasStateProv returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasStateProv() bool {
	if o != nil && !IsNil(o.StateProv) {
		return true
	}

	return false
}

// SetStateProv gets a reference to the given string and assigns it to the StateProv field.
func (o *ServiceOrganizationCreation) SetStateProv(v string) {
	o.StateProv = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *ServiceOrganizationCreation) SetCountry(v string) {
	o.Country = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *ServiceOrganizationCreation) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *ServiceOrganizationCreation) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *ServiceOrganizationCreation) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetSoName returns the SoName field value
func (o *ServiceOrganizationCreation) GetSoName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SoName
}

// GetSoNameOk returns a tuple with the SoName field value
// and a boolean to check if the value has been set.
func (o *ServiceOrganizationCreation) GetSoNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SoName, true
}

// SetSoName sets field value
func (o *ServiceOrganizationCreation) SetSoName(v string) {
	o.SoName = v
}

func (o ServiceOrganizationCreation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceOrganizationCreation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contactFirstName"] = o.ContactFirstName
	toSerialize["contactLastName"] = o.ContactLastName
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.ContactTitle) {
		toSerialize["contactTitle"] = o.ContactTitle
	}
	if !IsNil(o.ContactEmail) {
		toSerialize["contactEmail"] = o.ContactEmail
	}
	if !IsNil(o.ContactPhone) {
		toSerialize["contactPhone"] = o.ContactPhone
	}
	if !IsNil(o.ContactPhoneExt) {
		toSerialize["contactPhoneExt"] = o.ContactPhoneExt
	}
	if !IsNil(o.ContactDepartment) {
		toSerialize["contactDepartment"] = o.ContactDepartment
	}
	if !IsNil(o.Street1) {
		toSerialize["street1"] = o.Street1
	}
	if !IsNil(o.Street2) {
		toSerialize["street2"] = o.Street2
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.StateProv) {
		toSerialize["stateProv"] = o.StateProv
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	toSerialize["soName"] = o.SoName
	return toSerialize, nil
}

func (o *ServiceOrganizationCreation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contactFirstName",
		"contactLastName",
		"soName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceOrganizationCreation := _ServiceOrganizationCreation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceOrganizationCreation)

	if err != nil {
		return err
	}

	*o = ServiceOrganizationCreation(varServiceOrganizationCreation)

	return err
}

type NullableServiceOrganizationCreation struct {
	value *ServiceOrganizationCreation
	isSet bool
}

func (v NullableServiceOrganizationCreation) Get() *ServiceOrganizationCreation {
	return v.value
}

func (v *NullableServiceOrganizationCreation) Set(val *ServiceOrganizationCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceOrganizationCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceOrganizationCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceOrganizationCreation(val *ServiceOrganizationCreation) *NullableServiceOrganizationCreation {
	return &NullableServiceOrganizationCreation{value: val, isSet: true}
}

func (v NullableServiceOrganizationCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceOrganizationCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


