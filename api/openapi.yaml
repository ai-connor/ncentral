openapi: 3.0.1
info:
  description: |
    <h3>API Access</h3>
    <p>In order to use the API-Service endpoints, ensure the following prerequisites are met:</p>
    <ol>
        <li>User is created in N-central with appropriate permissions and configuration
            (roles, access groups, MFA disabled, 2FA disabled).</li>
        <li>API access is set up in N-central by having a JWT
            (Json Web Token, referred to as "N-central User-API Token") generated,
            acting as the permanent secret solely used for fetching access and refresh tokens.</li>
    </ol>
    <p>To access the API-Service endpoints, the JWT must first be exchanged with access and refresh tokens:</p>
    <ul>
        <li>
            <p><b>Using Swagger UI:</b></p>
            <ol>
                <li>Click on the <b>"Authorize"</b> button and enter the JWT into the value field
                    under <b>"N-central User-API Token (JWT)"</b>, then navigate to
                    the <code>/api/auth/authenticate</code> endpoint, click <b>"Try it out"</b>
                    and then <b>"Execute"</b>.
                    <br/>The new “Access Token” and “Refresh Token” fields will be available in the “Server Response”
                    section below. Note that the expiry is 3600s ( 1h ). Copy the value of the access token.</li>
                <li>Click on the <b>lock icon</b> to the right of any endpoint
                    (or the <b>"Authorize"</b> button at the top), enter the access token in the
                    <b>"API-Access Token"</b> field and click <b>"Authorize"</b>.</li>
                <li>To call an API-Service endpoint, navigate to it, click <b>"Try it out"</b> button and
                then <b>"Execute"</b>. If the steps above were successful, the access token is included in requests
                automatically.</li>
            </ol>
        </li>
        <li>
            <p><b>Using a different HTTP client:</b></p>
            <ol>
                <li>Call the <code>/api/auth/authenticate</code> endpoint.
                    The JWT token must be specified under the <code>Authorization</code> header,
                    in the form <code>Bearer &lt;YOUR_JWT&gt;"</code>.
                    <br/>The access and refresh tokens are present in the response.</li>
                <li>When calling API-Service endpoints, make sure to specify the <b>access token</b> in
                the <code>Authorization</code> header as <code>Bearer &lt;ACCESS_TOKEN&gt;</code>.</li>
            </ol>
        </li>
    </ul>
    <h3>API Pagination & Sorting</h3>
    <p>Certain API-Service query endpoints support pagination and sorting through the use of query parameters.</p>
    <p><b>Pagination query parameters:</b></p>
    <ul>
        <li>pageSize: number between 1 and 1000 specifying how many items to return for each page (if available).
            If unspecified, the default is 50.</li>
        <li>pageNumber: number specifying what page of data to retrieve, starting from 1 as the first page.
            If unspecified, the default is 1.</li>
    </ul>
    <p>A paginated response contains several related fields, such as pageSize, pageNumber, itemCount, totalItems,
        totalPages, _links (first, last, previous and next pages) and _warning (containing any warning messages,
        if present).</p>
    <p><b>Sorting query parameters:</b></p>
    <ul>
        <li>sortBy: the name of the field to sort the results by. If unspecified, no sorting is applied.</li>
        <li>sortOrder: the case insensitive sorting direction supporting ASC/ASCENDING/NATURAL and
            DESC/DESCENDING/REVERSE. If unspecified, the default is ASC.</li>
    </ul>
    <h3>API Rate Limiting</h3>
    <p>The API-Service endpoints are rate limited to ensure the stability, availability and performance of
        the overall system.</p>
    <p>Upon reaching such a rate limit, the endpoints return HTTP Status 429 - Too Many Requests.</p>
    <p>The system will accept further requests once existing in-flight requests are completed.</p>
  title: N-central API-Service
  version: "1.0"
servers:
- description: Default Server URL
  url: /
security:
- N-central User-API Token (JWT): []
- API-Access Token: []
tags:
- description: Maintenance Window CRUD operations
  name: Maintenance Windows
- description: PSA operations
  name: PSA
- description: User operations
  name: Users
- description: Access Group operations
  name: Access Groups
- description: Job Status operations
  name: Job Statuses
- description: Device operations
  name: Devices
- description: Custom-Properties operations. These include both those associated with
    organization units and devices.
  name: Custom Properties
- description: Active Issue operations
  name: Active Issues
- description: Device filter operations
  name: Device Filters
- description: User role operations.
  name: User Roles
- description: Scheduled tasks operations
  name: Scheduled Tasks
- description: "Authentication operations used to obtain, refresh and validate API-Access\
    \ tokens"
  name: Authentication
- description: Registration-token operations. These include getting the token for
    customers and sites.
  name: Registration Tokens
- description: Informative API operations
  name: API-Service
- description: "Organization-Unit operations. These include customers, sites and service\
    \ organizations."
  name: Organization Units
- description: Operations related to retrieving and managing tasks for a device
  name: Device Tasks
paths:
  /api/org-units/{orgUnitId}/org-custom-property-defaults:
    put:
      description: Update the default organization unit custom property for the given
        organization unit id and property id.
      operationId: modifyDefaultOrganizationUnitProperty
      parameters:
      - description: The organization unit id.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              propagate: false
              propertyId: 186156786
              propertyName: Prop Name 1
              orgUnitId: 209
              propagationType: SITE_ONLY
              value: http://www.example.com
              selectedOrgUnitIds:
              - 209
              - 210
            schema:
              $ref: '#/components/schemas/DefaultCustomPropertyModifyRequest'
        description: The request body for default custom property (DEVICE/ORGANIZATION_UNIT).
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid organization unit id or property id.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Custom Property not found.
        "204":
          description: The default organization unit custom property has been updated.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Update the default organization unit custom property."
      tags:
      - Custom Properties
  /api/org-units/{orgUnitId}/custom-properties/{propertyId}:
    get:
      description: Get the organization unit custom property for the given organization
        unit id and property id.
      operationId: getOrganizationUnitProperty
      parameters:
      - description: The organization unit id.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The property id.
        explode: false
        in: path
        name: propertyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid organization unit id or property id.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Custom Property not found.
        "200":
          content:
            application/json:
              example:
                propertyId: 1624300373
                propertyName: ORG_01-0620
                propertyType: TEXT
                value: ORG_01-0620 VALUE
              schema:
                $ref: '#/components/schemas/OrganizationCustomProperty'
          description: The organization unit custom property.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Get the organization unit custom property."
      tags:
      - Custom Properties
    put:
      description: Update the organization unit custom property for the given organization
        unit id and property id.
      operationId: modifyOrganizationUnitPropertyValue
      parameters:
      - description: The organization unit id.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The property id.
        explode: false
        in: path
        name: propertyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              value: ORG_01-0620 VALUE
            schema:
              $ref: '#/components/schemas/OrgUnitCustomPropertyModification'
        description: The request body for custom property.
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid organization unit id or property id.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Custom Property not found.
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationPropertyUpdated'
          description: The organization unit custom property has been updated.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationPropertyUpdated'
          description: OK
      security:
      - API-Access Token: []
      summary: "PREVIEW: Update the organization unit custom property."
      tags:
      - Custom Properties
  /api/devices/{deviceId}/custom-properties/{propertyId}:
    get:
      description: Get the device custom property for the given device id and property
        id.<br/><b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: getDeviceCustomProperty
      parameters:
      - description: The device id.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The property id.
        explode: false
        in: path
        name: propertyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid device id or property id.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Custom Property not found.
        "200":
          content:
            application/json:
              example:
                propertyId: 1624300373
                propertyName: ORG_01-0620
                propertyType: TEXT
                value: ORG_01-0620 VALUE
              schema:
                $ref: '#/components/schemas/OrganizationCustomProperty'
          description: Successful retrieval of the device custom property.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Get the device custom property."
      tags:
      - Custom Properties
    put:
      description: Modifies one custom property for a device.<br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: modifyDeviceProperty
      parameters:
      - description: Device ID to update property for.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      - description: Custom property ID that is associated with the device.
        explode: false
        in: path
        name: propertyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              value: ORG_01-0620 VALUE
            schema:
              $ref: '#/components/schemas/DeviceCustomPropertyModification'
        description: The request body for device custom property.
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device or Device Custom Property Not Found.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePropertyUpdated'
          description: Request was successful.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Modify Device Custom Property"
      tags:
      - Custom Properties
  /api/devices/{deviceId}/assets/lifecycle-info:
    get:
      description: Retrieves a device asset lifecycle information with a specific
        id.
      operationId: getDeviceWarrantyInfo
      parameters:
      - description: ID of the device for which information needs to be fetched.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssetLifecycleDetails'
          description: Successful retrieval of device information.
      security:
      - API-Access Token: []
      summary: Retrieve a device asset lifecycle information by Device ID.
      tags:
      - Devices
    patch:
      description: Modifies the Asset Lifecycle Information for a device with a specific
        id.Please note that updateWarrantyError is read only.
      operationId: patchAssetLifecycleInfo
      parameters:
      - description: ID of the device for which information needs to be modified.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetLifecyclePatchRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "204":
          description: Successful modification of device lifecycle information.
      security:
      - API-Access Token: []
      summary: Modifies the Asset Lifecycle Information by Device Id.
      tags:
      - Devices
    put:
      description: Modifies the Asset Lifecycle Information for a device with a specific
        id.Please note that updateWarrantyError is read only.
      operationId: putAssetLifecycleInfo
      parameters:
      - description: ID of the device for which information needs to be modified.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetLifecyclePutRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "204":
          description: Successful modification of device lifecycle information.
      security:
      - API-Access Token: []
      summary: Modifies the Asset Lifecycle Information by Device Id.
      tags:
      - Devices
  /api/standard-psa/{psaType}/credential:
    post:
      description: Validates the credentials for the standard PSA system and returns
        a response indicating the validity. The only supported standard PSA integration
        to use with this endpoint is 3 (Tigerpaw)<br/><b>NOTE:</b> This endpoint is
        currently in a preview stage.
      operationId: validatePsaCredentials
      parameters:
      - description: The type of the PSA system for which credentials are being validated.
        explode: false
        in: path
        name: psaType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsaCredentialRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                example: "{\"status\":500,\"message\":\"[ID=abcd] INTERNAL SERVER\
                  \ ERROR: UnexpectedDmsResponseException: Unexpected response from\
                  \ DMS: The DMS response indicates a non-success status code : 500.\"\
                  }"
                type: string
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                example: "{\"status\":401,\"message\":\"[ID=abcd] UNAUTHORIZED: UnauthorizedException:\
                  \ Missing authorization header bearer.\"}"
                type: string
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                example: "{\"status\":400,\"message\":\"BAD REQUEST: BAD REQUEST:\
                  \ BadRequestException: PSA username must not be empty.\"}"
                type: string
          description: "Missing required information[psaType, psaUsername, psaPassword]."
        "404":
          content:
            application/json:
              schema:
                example: "{\"status\":404,\"message\":\"[ID=abcd]NOT FOUND: ResourceNotFoundException:\
                  \ Psa with type 5.0 was not found!\"}"
                type: string
          description: Not Found.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardPsaCredentialsValidateGetResponse'
          description: Successful validation of the PSA credentials.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Validate Standard PSA Credentials."
      tags:
      - PSA
  /api/service-orgs:
    get:
      description: Returns a list of all service organizations.
      operationId: listServiceOrganizations
      parameters:
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseServiceOrganization'
          description: Successful retrieval of ervice organizations.
      security:
      - API-Access Token: []
      summary: Retrieve a list of all service organizations.
      tags:
      - Organization Units
    post:
      description: Creates a new service organization with the specified details.<br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: createServiceOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrganizationCreation'
        description: The information for the service organization (SO) to be created.
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                example: "{\"status\":500,\"message\":\"[ID=abcd] INTERNAL SERVER\
                  \ ERROR: UnexpectedDmsResponseException: Unexpected response from\
                  \ DMS: The DMS response indicates a non-success status code.\"}"
                type: string
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                example: "{\"status\":401,\"message\":\"[ID=abcd] UNAUTHORIZED: UnauthorizedException:\
                  \ Missing authorization header bearer.\"}"
                type: string
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                example: "{\"status\":400,\"message\":\"[ID=abcd] BAD REQUEST: SO\
                  \ Create -- Service Organization name is required and cannot be\
                  \ blank: SO Name: '%s'\"}"
                type: string
          description: Invalid resource format.
        "404":
          content:
            application/json:
              schema:
                example: "{\"status\":404,\"message\":\"[ID=abcd] NOT FOUND: ResourceNotFoundException:\
                  \ Org Unit not found: '555'.\"}"
                type: string
          description: Not Found.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrganizationCreated'
          description: Request was successful.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Creates a new service organization (SO)."
      tags:
      - Organization Units
  /api/service-orgs/{soId}/customers:
    get:
      description: Returns a list of all customers under a service organization.<br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: listCustomers
      parameters:
      - description: The ID of the a service organization.
        explode: false
        in: path
        name: soId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseCustomer'
          description: Successful retrieval of customers.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a list of all customers under a service organization."
      tags:
      - Organization Units
    post:
      description: Creates a new customer with the specified details.<br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: createCustomer
      parameters:
      - explode: false
        in: path
        name: soId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreation'
        description: The information for the customer to be created.
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                example: "{\"status\":500,\"message\":\"[ID=abcd] INTERNAL SERVER\
                  \ ERROR: UnexpectedDmsResponseException: Unexpected response from\
                  \ DMS: The DMS response indicates a non-success status code.\"}"
                type: string
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                example: "{\"status\":401,\"message\":\"[ID=abcd] UNAUTHORIZED: UnauthorizedException:\
                  \ Missing authorization header bearer.\"}"
                type: string
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                example: "{\"status\":400,\"message\":\"[ID=abcd] BAD REQUEST: Customer\
                  \ Create -- Name is required and cannot be blank: Name: '%s'\"}"
                type: string
          description: Invalid resource format.
        "404":
          content:
            application/json:
              schema:
                example: "{\"status\":404,\"message\":\"[ID=abcd] NOT FOUND: ResourceNotFoundException:\
                  \ Org Unit not found: '555'.\"}"
                type: string
          description: Not Found.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCreation'
          description: Request was successful.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Creates a customer."
      tags:
      - Organization Units
  /api/server-info/extra/authenticated:
    post:
      description: Get extra information about the version of different systems in
        N-central using credentials.<br/><b>NOTE:</b>This endpoint is currently in
        a preview stage.
      operationId: apiExtraAuthenticated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionInfoAuthenticatedRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input format.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VersionInfoResponse'
          description: The versions of the systems when authenticated.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Get extra information about the version of different systems\
        \ in N-central using credentials."
      tags:
      - API-Service
  /api/scheduled-tasks/direct:
    post:
      description: |
        Create a direct-support schedule task against a specific device.
        As a direct-support schedule task, the task will be executed immediately against a single device.
        For more information about the request payload,
        please review below the schema of the relevant data type:
            <a href="#model-DirectSupportTask">DirectSupportTask</a>,
            <a href="#model-ScheduledTaskCredential">ScheduledTaskCredential</a>, and
            <a href="#model-ScheduledTaskParameter">ScheduledTaskParameter</a>.
      operationId: createRemoteExecutionTaskDirect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectSupportTask'
        description: The task to be created.
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledTaskCreateResponse'
          description: Successful creation of direct support task.
      security:
      - API-Access Token: []
      summary: Create a direct-support schedule task.
      tags:
      - Scheduled Tasks
  /api/org-units/{orgUnitId}/user-roles:
    get:
      description: Returns a list of user roles for a given organization unit.<br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: listUserRoles
      parameters:
      - description: ID of the organization unit for which user roles information
          needs to be fetched.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the result will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResponseUserRole'
          description: Successful retrieval of user roles.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a list of user roles for a given organization unit."
      tags:
      - User Roles
    post:
      description: Add a new user role for a organization unit and return the role
        id.<br/><br/><b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: addUserRole
      parameters:
      - description: ID of the organization unit for which new role needs to be added.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRoleRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateUserRoleResponse'
          description: Successful creation of user role.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Add a new user role for a given organization unit."
      tags:
      - User Roles
  /api/org-units/{orgUnitId}/device-access-groups:
    post:
      description: "Creates a new device type access group with the specified details.<br/><b>NOTE:\
        \ </b>This endpoint is currently in a preview stage."
      operationId: createDeviceAccessGroup
      parameters:
      - explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAccessGroupCreateRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                example: "{\"status\":500,\"message\":\"[ID=abcd] INTERNAL SERVER\
                  \ ERROR: UnexpectedDmsResponseException: Unexpected response from\
                  \ DMS: The DMS response indicates a non-success status code.\"}"
                type: string
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                example: "{\"status\":401,\"message\":\"[ID=abcd] UNAUTHORIZED: UnauthorizedException:\
                  \ Missing authorization header bearer.\"}"
                type: string
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                example: "{\"status\":400,\"message\":\"[ID=abcd] BAD REQUEST: InvalidAccessGroupCreateRequestException:\
                  \ Invalid orgUnitId format: 'test'.\"}"
                type: string
          description: Invalid resource format.
        "404":
          content:
            application/json:
              schema:
                example: "{\"status\":404,\"message\":\"[ID=abcd] NOT FOUND: ResourceNotFoundException:\
                  \ Org Unit not found: '555'.\"}"
                type: string
          description: Not Found.
        "204":
          description: Request was successful.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Creates a new device type access group."
      tags:
      - Access Groups
  /api/org-units/{orgUnitId}/access-groups:
    get:
      description: Retrieves access group information for an organization unit with
        a specific id.<br/><b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: listAccessGroups
      parameters:
      - description: ID of the organization unit for which access groups information
          needs to be fetched.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the result will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                example: "{\"status\":500,\"message\":\"[ID=abcd] INTERNAL SERVER\
                  \ ERROR: UnexpectedDmsResponseException: Unexpected response from\
                  \ DMS: The DMS response indicates a non-success status code : 500.\"\
                  }"
                type: string
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                example: "{\"status\":401,\"message\":\"[ID=abcd] UNAUTHORIZED: UnauthorizedException:\
                  \ Missing authorization header bearer.\"}"
                type: string
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                example: "{\"status\":400,\"message\":\"[ID=abcd] BAD REQUEST: InvalidInputFormatException:\
                  \ Invalid orgUnitId format: someString.\"}"
                type: string
          description: Bad Request.
        "404":
          content:
            application/json:
              schema:
                example: "{\"status\":404,\"message\":\"[ID=abcd] NOT FOUND: ResourceNotFoundException:\
                  \ Org Unit not found: '999'.\"}"
                type: string
          description: Not Found.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
          description: "Successful retrieval of access groups information. If access\
            \ group id is a negative number, the response will be empty."
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve Access Groups Information for an Org Unit by ID."
      tags:
      - Access Groups
    post:
      description: "Creates a new organization unit type access group with the specified\
        \ details.<br/><b>NOTE: </b>This endpoint is currently in a preview stage."
      operationId: createOrgUnitAccessGroup
      parameters:
      - explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgUnitTypeAccessGroupCreateRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                example: "{\"status\":500,\"message\":\"[ID=abcd] INTERNAL SERVER\
                  \ ERROR: UnexpectedDmsResponseException: Unexpected response from\
                  \ DMS: The DMS response indicates a non-success status code.\"}"
                type: string
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                example: "{\"status\":401,\"message\":\"[ID=abcd] UNAUTHORIZED: UnauthorizedException:\
                  \ Missing authorization header bearer.\"}"
                type: string
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                example: "{\"status\":400,\"message\":\"[ID=abcd] BAD REQUEST: InvalidAccessGroupCreateRequestException:\
                  \ Invalid orgUnitId format: 'test'.\"}"
                type: string
          description: Invalid resource format.
        "404":
          content:
            application/json:
              schema:
                example: "{\"status\":404,\"message\":\"[ID=abcd] NOT FOUND: ResourceNotFoundException:\
                  \ Org Unit not found: '555'.\"}"
                type: string
          description: Not Found.
        "204":
          description: Request was successful.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Creates a new organization unit type access group."
      tags:
      - Access Groups
  /api/devices/maintenance-windows:
    delete:
      description: "Deletes patch maintenance windows by given list of Schedule Ids.\
        \  Currently only supports Patch maintenance windows.  And only windows created\
        \ at the device level can be deleted.<br/><br/><b>NOTE: </b>This endpoint\
        \ is currently in a preview stage.<br/><br/>"
      operationId: deleteMaintenanceWindowsByScheduleIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceWindowsDeleteRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Schedule Id not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MaintenanceWindowResponse'
          description: 'Successfully deleted window/s. '
      security:
      - API-Access Token: []
      summary: "PREVIEW : Deletes device patch maintenance windows by given list of\
        \ Schedule Ids."
      tags:
      - Maintenance Windows
    post:
      description: "Adds set of maintenance windows for a given device.<br/><br/><b>NOTE:\
        \ </b>This endpoint is currently in a preview stage.<br/><br/>The provided\
        \ list of maintenance windows, will be applied to every device in the list."
      operationId: addMaintenanceWindowsByDeviceIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceWindowsRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindowResponse'
          description: Successfully added maintenance window/s.
      security:
      - API-Access Token: []
      summary: "PREVIEW : Adds set of maintenance windows for a list of given devices."
      tags:
      - Maintenance Windows
  /api/customers/{customerId}/sites:
    get:
      description: Returns a list of all sites under a customer.<br/><br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: listSites_1
      parameters:
      - description: The ID of the a customer.
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Customer of the ID is not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseSite'
          description: Successful retrieval of sites.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a list of sites under a customer."
      tags:
      - Organization Units
    post:
      description: Creates a new site with the specified details.<br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: createSite
      parameters:
      - explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteCreation'
        description: The information for the customer to be created.
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                example: "{\"status\":500,\"message\":\"[ID=abcd] INTERNAL SERVER\
                  \ ERROR: UnexpectedDmsResponseException: Unexpected response from\
                  \ DMS: The DMS response indicates a non-success status code.\"}"
                type: string
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                example: "{\"status\":401,\"message\":\"[ID=abcd] UNAUTHORIZED: UnauthorizedException:\
                  \ Missing authorization header bearer.\"}"
                type: string
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                example: "{\"status\":400,\"message\":\"[ID=abcd] BAD REQUEST: Site\
                  \ Create -- Name is required and cannot be blank: Name: '%s'\"}"
                type: string
          description: Invalid resource format.
        "404":
          content:
            application/json:
              schema:
                example: "{\"status\":404,\"message\":\"[ID=abcd] NOT FOUND: ResourceNotFoundException:\
                  \ Org Unit not found: '555'.\"}"
                type: string
          description: Not Found.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteCreated'
          description: Request was successful.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Creates a site."
      tags:
      - Organization Units
  /api/custom-psa/tickets/{customPsaTicketId}:
    post:
      description: "Retrieves detailed information for a specific Custom PSA Ticket.\
        \ The endpoint is exclusive to CUSTOM PSA Integrations, NOT for ConnectWise,\
        \ AutoTask, TigerPaw or other managed PSAs.<br/><b>NOTE:</b>This endpoint\
        \ is currently in a preview stage."
      operationId: getCustomTicketInfo
      parameters:
      - description: The unique identifier of the Custom PSA ticket to retrieve.
        explode: false
        in: path
        name: customPsaTicketId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsaCredentialRequest'
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                example: "{\"status\":500,\"message\":\"[ID=abcd] INTERNAL SERVER\
                  \ ERROR: UnexpectedDmsResponseException: Unexpected response from\
                  \ DMS: The DMS response indicates a non-success status code : 500.\"\
                  }"
                type: string
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                example: "{\"status\":401,\"message\":\"[ID=abcd] UNAUTHORIZED: UnauthorizedException:\
                  \ Missing authorization header bearer.\"}"
                type: string
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                example: "{\"status\":400,\"message\":\"BAD REQUEST: InvalidInputFormatException:\
                  \ Invalid customPsaTicketId format: string.\"}"
                type: string
          description: Invalid psaTicketId format.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPsaTicketGetResponse'
          description: Successful retrieval of the Custom PSA ticket information.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve detailed information for a specific Custom PSA Ticket\
        \ by ID."
      tags:
      - PSA
  /api/auth/refresh:
    post:
      description: |
        <p>
        In order to refresh the API-Access token, you must first authenticate to obtain a valid "refresh token"
        and include it in the request body.
        </p>
      operationId: refresh
      parameters:
      - explode: false
        in: header
        name: X-ACCESS-EXPIRY-OVERRIDE
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-REFRESH-EXPIRY-OVERRIDE
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: Refresh token.
        required: true
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthRefreshResponse'
          description: Refreshed authentication.
      summary: Obtains a new API-Access token using a valid refresh token.
      tags:
      - Authentication
  /api/auth/authenticate:
    post:
      description: |
        <p>
        This method essentially uses the HTTP <a href="https://swagger.io/docs/specification/authentication/bearer-authentication/">bearer authentication</a>.
        To obtain the "N-central User-API Token (JWT)", visit the <a href="/">N-central UI</a>.
        Then navigate to Administration → User Management → Users → Click on user → API Access → GENERATE JSON WEB TOKEN.
        </p>
      operationId: authenticate
      parameters:
      - description: "Override the access-expiry. Format: (time)(unit). For example:\
          \ 120s for 120 seconds. The unit can be 's' for second, 'm' for minute and\
          \ 'h' for hour. NOTE: The specifed time cannot be longer than the system-wide\
          \ setting (default to 1h)."
        explode: false
        in: header
        name: X-ACCESS-EXPIRY-OVERRIDE
        required: false
        schema:
          type: string
        style: simple
      - description: "Override the refresh-expiry. Format: (time)(unit). For example:\
          \ 120s for 120 seconds. The unit can be 's' for second, 'm' for minute and\
          \ 'h' for hour. NOTE: The specifed time cannot be longer than the system-wide\
          \ setting (default to 25h)."
        explode: false
        in: header
        name: X-REFRESH-EXPIRY-OVERRIDE
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticateResponse'
          description: Authentication is successful.
      security:
      - N-central User-API Token (JWT): []
      summary: Obtains access and refresh tokens using an N-central User-API Token
        (JWT).
      tags:
      - Authentication
  /api:
    get:
      operationId: apiRoot
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                _links:
                  root: /api
                  server-info: /api/server-info
                  health: /api/health
                  auth: /api/auth
                  customers: /api/customers
                  devices: /api/devices
                  scheduled-tasks: /api/scheduled-tasks
              schema:
                $ref: '#/components/schemas/LinksResponse'
          description: Successful.
      summary: List links to other endpoints.
      tags:
      - API-Service
  /api/users:
    get:
      description: User List.<br/><b>NOTE:</b>This endpoint is currently in a preview
        stage.
      operationId: userRoot
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                _links:
                  user-list - GET: "/api/org-units/{orgUnitId}/users"
              schema:
                $ref: '#/components/schemas/LinksResponse'
          description: Successful.
      summary: "PREVIEW: List the user related links."
      tags:
      - Users
  /api/standard-psa:
    get:
      description: <b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: standardPsaRoot
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                _links:
                  standard-psa-validate-credential: "/api/standard-psa/{psaType}/credential"
              schema:
                $ref: '#/components/schemas/LinksResponse'
          description: Successful.
      summary: "PREVIEW: List the standard psa related links."
      tags:
      - PSA
  /api/sites:
    get:
      description: Returns a list of all sites.
      operationId: listSites
      parameters:
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseSite'
          description: Successful retrieval of sites.
      security:
      - API-Access Token: []
      summary: Retrieve a list of all sites.
      tags:
      - Organization Units
  /api/sites/{siteId}:
    get:
      description: Returns a site.<br/><br/><b>NOTE:</b>This endpoint is currently
        in a preview stage.
      operationId: getSite
      parameters:
      - description: The ID of the a site.
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Site of the ID is not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Site'
          description: Successful retrieval of the site.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a site."
      tags:
      - Organization Units
  /api/sites/{siteId}/registration-token:
    get:
      description: Returns a site registration token.<br/><br/><b>NOTE:</b>This endpoint
        is currently in a preview stage.
      operationId: getSiteRegistrationToken
      parameters:
      - explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Site of the ID is not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RegistrationTokenGetResponse'
          description: Successful retrieval of the site registration token.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a site registration token."
      tags:
      - Registration Tokens
  /api/service-orgs/{soId}:
    get:
      description: Returns a service organization.<br/><br/><b>NOTE:</b>This endpoint
        is currently in a preview stage.
      operationId: getServiceOrganization
      parameters:
      - description: The ID of the a service organization.
        explode: false
        in: path
        name: soId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Organization of the ID is not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceOrganization'
          description: Successful retrieval of the service organization.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a service organization."
      tags:
      - Organization Units
  /api/server-info:
    get:
      operationId: apiRoot_1
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                jvmVersion: 17.0.9
                version: 3.1.0
                ncentral: null
              schema:
                $ref: '#/components/schemas/AuthValidateResponse'
          description: Successful.
      security:
      - API-Access Token: []
      summary: Return version information of the running API-Service.
      tags:
      - API-Service
  /api/server-info/extra:
    get:
      description: Get extra information about the version of different systems in
        N-central.<br/><b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: apiExtra
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input format.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VersionInfoResponse'
          description: The versions of the systems.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Get information about the version of different systems in\
        \ N-central."
      tags:
      - API-Service
  /api/scheduled-tasks:
    get:
      operationId: taskRoot
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                _links:
                  direct-support-task: /api/scheduled-tasks/direct
              schema:
                $ref: '#/components/schemas/LinksResponse'
          description: Successful.
      summary: List the task-related links.
      tags:
      - Scheduled Tasks
  /api/scheduled-tasks/{taskId}:
    get:
      description: Retrieves general information for a given task using the task ID.
      operationId: getTask
      parameters:
      - description: ID of the task for which information is to be retrieved.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledTaskInfoResponse'
          description: Successful retrieval of information.
      security:
      - API-Access Token: []
      summary: Retrieves general information for a given task.
      tags:
      - Scheduled Tasks
  /api/scheduled-tasks/{taskId}/status:
    get:
      description: Retrieves the aggregated status associated with a given task using
        the task ID.
      operationId: getTaskStatus
      parameters:
      - description: ID of the task for which aggregated status needs to be fetched.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledTaskAggregatedStatusResponse'
          description: Successful retrieval of aggregated status.
      security:
      - API-Access Token: []
      summary: Retrieves aggregated status for a given task.
      tags:
      - Scheduled Tasks
  /api/scheduled-tasks/{taskId}/status/details:
    get:
      description: Retrieve a list of detailed statuses for each device associated
        with the given task using the task ID.
      operationId: listTaskStatusDetails
      parameters:
      - description: ID of the task for which detailed status needs to be fetched.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseDetailsResponse'
          description: Successful retrieval of status details.
      security:
      - API-Access Token: []
      summary: Retrieves detailed status per device for a given task.
      tags:
      - Scheduled Tasks
  /api/org-units:
    get:
      description: Returns a list of all organization units.
      operationId: listOrganizationUnits
      parameters:
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseOrganizationUnit'
          description: Successful retrieval of organization units.
      security:
      - API-Access Token: []
      summary: Retrieve a list of all organization units.
      tags:
      - Organization Units
  /api/org-units/{orgUnitId}:
    get:
      description: Returns an organization unit.<br/><br/><b>NOTE:</b>This endpoint
        is currently in a preview stage.
      operationId: getOrganizationUnit
      parameters:
      - description: The ID of the organization unit.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Organization Unit of the ID is not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationUnit'
          description: Successful retrieval of the organization unit.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve an organization unit."
      tags:
      - Organization Units
  /api/org-units/{orgUnitId}/users:
    get:
      description: Retrieves the list of users within a specified org unit.<br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: listUsers
      parameters:
      - description: The ID of the org unit for which to retrieve the users.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The size of each page. Use -1 for unlimited size, which retrieves\
          \ all users."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          enum:
          - lastName
          - name
          - username
          - description
          - accountstatus
          - enabled
          - isenabled
          - locked
          - isLocked
          - currentssoprovider
          - ssoproviders
          - ldap
          - isldap
          - accessgroups
          - roles
          - twofactorenabled
          - apionlyuser
          - soname
          - customername
          - sitename
          type: string
        style: form
      - description: "The sort order, defaulting to ASC if unspecified."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - desc
          - descending
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponseUser'
          description: Successful retrieval of user list.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve the list of users."
      tags:
      - Users
  /api/org-units/{orgUnitId}/user-roles/{userRoleId}:
    get:
      description: Returns a user role for a given organization unit and user role
        id.<br/><br/><b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: getUserRole
      parameters:
      - description: ID of the organization unit for which role is retrieved. The
          organization unit id is used to determine if role is modifiable at this
          level or not.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the user role id for which user roles information needs
          to be fetched.
        explode: false
        in: path
        name: userRoleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRoleDetailsResponse'
          description: Successful retrieval of user role.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a user role for a given organization unit and user\
        \ role id."
      tags:
      - User Roles
  /api/org-units/{orgUnitId}/registration-token:
    get:
      description: Returns a organization unit registration token.<br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: getOrganizationUnitRegistrationToken
      parameters:
      - description: The ID of the a organization unit.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Getting registration token using this API is not allowed (only
            CUSTOMER and SITE are allowed).
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Organization of the ID is not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RegistrationTokenGetResponse'
          description: Successful retrieval of the customer registration token.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a organization unit registration token."
      tags:
      - Registration Tokens
  /api/org-units/{orgUnitId}/org-custom-property-defaults/{propertyId}:
    get:
      description: Get the organization unit  custom property for the given organization
        unit id and property id.
      operationId: getCustomProperty
      parameters:
      - description: The organization unit id.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The property id.
        explode: false
        in: path
        name: propertyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid organization unit id or property id.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Custom Property not found.
        "200":
          content:
            application/json:
              example:
                propertyId: 1624300373
                propertyName: ORG_01-0620
                orgUnitId: 11090
                propertyType: TEXT
                value: ORG_01-0620 VALUE
                selectedOrgUnitIds:
                - 11089
                - 11090
              schema:
                $ref: '#/components/schemas/DefaultCustomProperty'
          description: The organization unit  custom property.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Get the organization unit custom property."
      tags:
      - Custom Properties
  /api/org-units/{orgUnitId}/job-statuses:
    get:
      description: Fetch a list of job statuses for the given organization unit.<br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: listJobStatuses
      parameters:
      - explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input format.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Organization unit not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponse'
          description: The list of job statuses.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Fetch job statuses"
      tags:
      - Job Statuses
  /api/org-units/{orgUnitId}/devices:
    get:
      description: |-
        Retrieves the list of devices from N-central for the logged in user.
        NOTE: This endpoint is in the preview stage.
      operationId: listDevicesByOrgUnitId
      parameters:
      - description: ID of the organization unit for which information needs to be
          fetched.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the filter to apply for this device list. Leave empty
          or unset to retrieve the unfiltered list.
        explode: true
        in: query
        name: filterId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Set to -1 to retrieve the maximum-size items (deployment settings)Use
          50 if the maximum-size is set to -1.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResponseDevice'
          description: Successful retrieval of device list.
      security:
      - API-Access Token: []
      summary: "PREVIEW : Retrieve the list of devices by org unit id."
      tags:
      - Devices
  /api/org-units/{orgUnitId}/custom-properties:
    get:
      description: Get the list of organization unit custom properties for the given
        organization unit id.
      operationId: listCustomerProperties
      parameters:
      - description: The organization unit id.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid organization unit id.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseOrganizationCustomProperty'
          description: The list of organization unit custom properties.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Get the list of organization custom properties."
      tags:
      - Custom Properties
  /api/org-units/{orgUnitId}/custom-properties/device-custom-property-defaults/{propertyId}:
    get:
      description: Retrieves default custom properties information<br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: getDeviceDefaultCustomProperty
      parameters:
      - description: ID of the organization unit for which information needs to be
          fetched
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the property for which information needs to be fetched
        explode: false
        in: path
        name: propertyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Organization Unit or Property Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceCustomPropertyResponse'
          description: Successful retrieval of property information
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve Device Default Custom Property information by organization\
        \ unit id and property id"
      tags:
      - Custom Properties
  /api/org-units/{orgUnitId}/children:
    get:
      description: Returns a list of all organization units under the specific organization
        unit.<br/><br/><b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: listOrganizationUnitChildren
      parameters:
      - description: "PREVIEW: The ID of the parent organization unit.If specified,\
          \ only the children of the specified organization unit are retrieved.Leave\
          \ empty or unset to retrieve the unfiltered list."
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseOrganizationUnit'
          description: Successful retrieval of organization units.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a list of all organization units children."
      tags:
      - Organization Units
  /api/org-units/{orgUnitId}/active-issues:
    get:
      description: Fetch a list of active issues for the given organization unit.<br/><b>NOTE:</b>Only
        organization units that are customers or sites are currently supported.<br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: listActiveIssues
      parameters:
      - description: ID of the organization unit for which active issues needs to
          be fetched.
        explode: false
        in: path
        name: orgUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Must be positive number.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the result will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input format.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResponseActiveIssue'
          description: The list of active issues.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Fetch active issues"
      tags:
      - Active Issues
  /api/health:
    get:
      operationId: health
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Health'
          description: Successful.
      summary: Return the start and current time of the server. This indicates that
        the server is running.
      tags:
      - API-Service
  /api/devices:
    get:
      description: Retrieves the list of devices from N-central for the logged in
        user.
      operationId: listDevices
      parameters:
      - description: The ID of the filter to apply for this device list. Leave empty
          or unset to retrieve the unfiltered list.
        explode: true
        in: query
        name: filterId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Set to -1 to retrieve the maximum-size items (deployment settings)Use
          50 if the maximum-size is set to -1.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResponseDevice'
          description: Successful retrieval of device list.
      security:
      - API-Access Token: []
      summary: Retrieve the list of devices.
      tags:
      - Devices
  /api/devices/{deviceId}:
    get:
      description: Retrieves a device with a specific id.
      operationId: getDeviceById
      parameters:
      - description: ID of the device for which information needs to be fetched.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceResponse'
          description: Successful retrieval of device information.
      security:
      - API-Access Token: []
      summary: Retrieve a device by ID.
      tags:
      - Devices
  /api/devices/{deviceId}/service-monitor-status:
    get:
      description: "Retrieves the status of the service monitoring tasks for a given\
        \ device.<br/><br/><b>NOTE: </b>This endpoint is currently in a preview stage."
      operationId: getDeviceStatus
      parameters:
      - description: ID of the device for which information needs to be fetched.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseDeviceServiceMonitoringStatus'
          description: Successful retrieval of monitoring task status information.
      security:
      - API-Access Token: []
      summary: "PREVIEW : Retrieves the status of the service monitoring tasks for\
        \ a given device."
      tags:
      - Devices
  /api/devices/{deviceId}/scheduled-tasks:
    get:
      description: Retrieves a list of tasks associated with a specified device using
        the device ID.
      operationId: listTasksForDevice
      parameters:
      - description: ID of the device for which the tasks need to be fetched.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseTaskStatusResponse'
          description: Successful retrieval of tasks.
      security:
      - API-Access Token: []
      summary: Retrieve tasks for a specific device.
      tags:
      - Device Tasks
  /api/devices/{deviceId}/maintenance-windows:
    get:
      description: "Retrieves all maintenance windows for a given device.<br/><br/><b>NOTE:\
        \ </b>This endpoint is currently in a preview stage."
      operationId: getMaintenanceWindowsByDeviceId
      parameters:
      - description: ID of the device for which information needs to be fetched.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseMaintenanceWindowGetResponse'
          description: Successful retrieval of maintenance window information.
      security:
      - API-Access Token: []
      summary: "PREVIEW : Retrieves all maintenance windows for a device."
      tags:
      - Maintenance Windows
  /api/devices/{deviceId}/custom-properties:
    get:
      description: Retrieves custom properties list for a device.<br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: listDeviceCustomProperties
      parameters:
      - description: ID of the device for which information needs to be fetched
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseDeviceCustomProperty'
          description: Successful retrieval of list of device's custom properties
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve Device Custom Properties by device id"
      tags:
      - Custom Properties
  /api/devices/{deviceId}/assets:
    get:
      description: 'Retrieves complete asset information for a device with a specific
        id.<br/><br/><b>Also See:<b> <a href="#model-DeviceAssetInfoResponse">DeviceAssetInfoResponse</a> '
      operationId: getAssetInfo
      parameters:
      - description: ID of the device for which asset information needs to be fetched.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceAssetInfoResponse'
          description: Successful retrieval of device asset information.
      security:
      - API-Access Token: []
      summary: Retrieve Asset Information for a device by ID.
      tags:
      - Devices
  /api/device-filters:
    get:
      description: Retrieves the list of filters from N-central for the logged in
        user.<br/><br/><b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: listFilters
      parameters:
      - description: Scope of the filters. Defaults to 'ALL'.
        explode: true
        in: query
        name: viewScope
        required: false
        schema:
          enum:
          - ALL
          - OWN_AND_USED
          type: string
        style: form
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseFilter'
          description: Successful retrieval of filter list.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve the list of filters."
      tags:
      - Device Filters
  /api/customers:
    get:
      description: Returns a list of all customers.
      operationId: listCustomers_1
      parameters:
      - description: "The page number to retrieve. Starts at 1. If not provided, defaults\
          \ to the first page."
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The number of items to retrieve per page. Set to -1 to retrieve
          all items without pagination (if enabled).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The select expression.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: The name of a field to sort the result by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order in which the order will follow -- case insensitive
          and default to ASC.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASC
          enum:
          - asc
          - ascending
          - natural
          - desc
          - descending
          - reverse
          type: string
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseCustomer'
          description: Successful retrieval of customers.
      security:
      - API-Access Token: []
      summary: Retrieve a list of all customers.
      tags:
      - Organization Units
  /api/customers/{customerId}:
    get:
      description: Returns a customer.<br/><br/><b>NOTE:</b>This endpoint is currently
        in a preview stage.
      operationId: getCustomer
      parameters:
      - description: The ID of the a customer.
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Customer of the ID is not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
          description: Successful retrieval of the customer.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a customer."
      tags:
      - Organization Units
  /api/customers/{customerId}/registration-token:
    get:
      description: Returns a customer registration token.<br/><br/><b>NOTE:</b>This
        endpoint is currently in a preview stage.
      operationId: getCustomerRegistrationToken
      parameters:
      - description: The ID of the a customer.
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Customer of the ID is not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RegistrationTokenGetResponse'
          description: Successful retrieval of the customer registration token.
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve a customer registration token."
      tags:
      - Registration Tokens
  /api/custom-psa:
    get:
      description: <b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: customPsaRoot
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                _links:
                  custom-psa-ticket-info: "/api/custom-psa/tickets/{customPsaTicketId}"
                  custom-psa-tickets: /api/custom-psa/tickets
              schema:
                $ref: '#/components/schemas/LinksResponse'
          description: Successful.
      summary: "PREVIEW: List the custom psa related links."
      tags:
      - PSA
  /api/custom-psa/tickets:
    get:
      description: <b>NOTE:</b>This endpoint is currently in a preview stage.
      operationId: customPsaTicketsRoot
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                _links:
                  custom-psa-ticket-info: "/api/custom-psa/tickets/{customPsaTicketId}"
              schema:
                $ref: '#/components/schemas/LinksResponse'
          description: Successful.
      summary: "PREVIEW: List the custom psa tickets related links."
      tags:
      - PSA
  /api/auth:
    get:
      operationId: authRoot
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                authenticate: /api/auth/authenticate
                refresh: /api/auth/refresh
                validate: /api/auth/validate
              schema:
                $ref: '#/components/schemas/LinksResponse'
          description: Successful.
      security:
      - N-central User-API Token (JWT): []
      summary: List the authentication-related links.
      tags:
      - Authentication
  /api/auth/validate:
    get:
      description: |
        <p>
        In order to validate the API-Access token, you must first authenticate to obtain the API-Access token.
        </p>
      operationId: validate
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                message: The token is valid.
              schema:
                $ref: '#/components/schemas/AuthValidateResponse'
          description: Authentication is successful.
      security:
      - API-Access Token: []
      summary: Check the validity of the API-Access token.
      tags:
      - Authentication
  /api/appliance-tasks/{taskId}:
    get:
      description: "Retrieves the appliance-task information for a given taskId.<br/><br/><b>NOTE:\
        \ </b>This endpoint is currently in a preview stage."
      operationId: getApplianceTaskInformationDetails
      parameters:
      - description: ID of the appliance-task for which information needs to be fetched.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication Failure.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Device Id not found.
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplianceTaskInformation'
          description: Successful retrieval of appliance-task information.
      security:
      - API-Access Token: []
      summary: "PREVIEW : Retrieves the appliance-task information."
      tags:
      - Devices
  /api/access-groups:
    get:
      operationId: accessGroupRoot
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "200":
          content:
            application/json:
              example:
                _links:
                  access-group-list - GET: "/api/org-units/{orgUnitId}/access-groups"
                  access-group-info - GET: "/api/access-groups/{accessGroupId}"
                  org-unit-access-group-create - POST: "/api/org-units/{orgUnitId}/access-groups"
                  device-access-group-create - POST: "/api/org-units/{orgUnitId}/device-access-groups"
              schema:
                $ref: '#/components/schemas/LinksResponse'
          description: Successful.
      summary: "PREVIEW: List the access group related links."
      tags:
      - Access Groups
  /api/access-groups/{accessGroupId}:
    get:
      description: "Retrieves detailed information for a specific Access Group, including\
        \ its name, type, and associated devices or users.<br/><b>NOTE:</b>This endpoint\
        \ is currently in a preview stage."
      operationId: getAccessGroup
      parameters:
      - description: The unique identifier of the access group for which information
          is being requested.
        explode: false
        in: path
        name: accessGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                example: "{\"status\":500,\"message\":\"[ID=abcd] INTERNAL SERVER\
                  \ ERROR: UnexpectedDmsResponseException: Unexpected response from\
                  \ DMS: The DMS response indicates a non-success status code : 500.\"\
                  }"
                type: string
          description: Internal Server Error.
        "401":
          content:
            application/json:
              schema:
                example: "{\"status\":401,\"message\":\"[ID=abcd] UNAUTHORIZED: UnauthorizedException:\
                  \ Missing authorization header bearer.\"}"
                type: string
          description: Authentication Failure.
        "400":
          content:
            application/json:
              schema:
                example: "{\"status\":400,\"message\":\"[ID=abcd] BAD REQUEST: InvalidInputFormatException:\
                  \ Invalid orgUnitId format: stringValue.\"}"
                type: string
          description: Invalid Access Group Id format.
        "404":
          content:
            application/json:
              schema:
                example: "{\"status\":404,\"message\":\"[ID=abcd] NOT FOUND: ResourceNotFoundException:\
                  \ Access group was not found. Id: '999'.\"}"
                type: string
          description: Not Found.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroupGetResponse'
          description: "Successful retrieval of the access group information. If the\
            \ access group is not found (or a negative number is provided), the response\
            \ will be empty."
      security:
      - API-Access Token: []
      summary: "PREVIEW: Retrieve detailed information for a specific Access Group\
        \ by ID."
      tags:
      - Access Groups
components:
  schemas:
    ErrorResponse:
      description: Error response
      example:
        status: 400
        message: "[ID=2b85998f-26a3-467a] BAD REQUEST: InvalidInputFormatException:\
          \ Invalid customerId format: 'null'."
      properties:
        status:
          format: int32
          type: integer
        message:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      type: object
    ValidationError:
      properties:
        field:
          type: string
        message:
          type: string
      type: object
    DefaultCustomPropertyModifyRequest:
      description: The request body for default custom property (DEVICE/ORGANIZATION_UNIT).
      example:
        propagate: false
        propertyId: 186156786
        propertyName: Prop Name 1
        orgUnitId: 209
        propagationType: SITE_ONLY
        defaultValue: http://www.example.com
        selectedOrgUnitIds:
        - 209
        - 210
      properties:
        propagate:
          description: A boolean flag to specify whether to propagate changes to children
            Organization Units.
          type: boolean
        propertyId:
          description: The property id.
          format: int32
          type: integer
        propertyName:
          description: The property name.
          type: string
        propagationType:
          description: The way how the property value changes are propagated down
            the organization unit hierarchy.
          enum:
          - NO_PROPAGATION
          - SERVICE_ORGANIZATION_ONLY
          - SERVICE_ORGANIZATION_AND_CUSTOMER_AND_SITE
          - SERVICE_ORGANIZATION_AND_CUSTOMER
          - SERVICE_ORGANIZATION_AND_SITE
          - CUSTOMER_AND_SITE
          - CUSTOMER_ONLY
          - SITE_ONLY
          - NO_PROPAGATION
          - SERVICE_ORGANIZATION_ONLY
          - SERVICE_AND_ORGANIZATION
          - SERVICE_AND_ORGANIZATION_AND_DEVICE
          - SERVICE_AND_DEVICE
          - ORGANIZATION_AND_DEVICE
          - ORGANIZATION_ONLY
          - DEVICE_ONLY
          type: string
        defaultValue:
          description: The default value of the property.
          type: string
        selectedOrgUnitIds:
          description: The entire list of organization unit IDs to which the custom
            property is applicable. The list includes the 'Home' organization unit
            and all its child organization units.
          items:
            description: The entire list of organization unit IDs to which the custom
              property is applicable. The list includes the 'Home' organization unit
              and all its child organization units.
            format: int32
            type: integer
          type: array
        enumeratedValueList:
          description: "The list of allowed values for the property, if the property\
            \ type is ENUMERATED."
          items:
            description: "The list of allowed values for the property, if the property\
              \ type is ENUMERATED."
            type: string
          type: array
      type: object
    OrgUnitCustomPropertyModification:
      description: The custom property (DEVICE/ORGANIZATION_UNIT).
      example:
        propertyId: 1624300373
        propertyName: ORG_01-0620
        propertyType: TEXT
        value: ORG_01-0620 VALUE
      properties:
        propertyId:
          description: The property id.
          readOnly: true
          type: string
        propertyName:
          description: The property name.
          readOnly: true
          type: string
        propertyType:
          description: The property type.
          enum:
          - HTML_LINK
          - TEXT
          - DATE
          - ENUMERATED
          - PASSWORD
          readOnly: true
          type: string
        value:
          description: The property value.
          type: string
        enumeratedValueList:
          description: The possible value of the property.
          items:
            description: The possible value of the property.
            readOnly: true
            type: string
          readOnly: true
          type: array
      type: object
    OrganizationPropertyUpdated:
      description: The organization property update result.
      example:
        _warnings:
        - Property Type is ignored during update.
      properties:
        _warnings:
          description: The list of warnings.
          items:
            description: The list of warnings.
            type: string
          type: array
      type: object
    DeviceCustomPropertyModification:
      description: The custom property (DEVICE/ORGANIZATION_UNIT).
      example:
        propertyId: 1624300373
        propertyName: ORG_01-0620
        propertyType: TEXT
        value: ORG_01-0620 VALUE
      properties:
        propertyId:
          description: The property id.
          readOnly: true
          type: string
        propertyName:
          description: The property name.
          readOnly: true
          type: string
        propertyType:
          description: The property type.
          enum:
          - HTML_LINK
          - TEXT
          - DATE
          - ENUMERATED
          - PASSWORD
          readOnly: true
          type: string
        value:
          description: The property value.
          type: string
        enumeratedValueList:
          description: The possible value of the property.
          items:
            description: The possible value of the property.
            readOnly: true
            type: string
          readOnly: true
          type: array
      type: object
    DevicePropertyUpdated:
      description: The device property update result.
      example:
        _warnings:
        - Property Type is ignored during update.
      properties:
        _warnings:
          description: The list of warnings.
          items:
            description: The list of warnings.
            type: string
          type: array
      type: object
    AssetLifecyclePutRequest:
      description: Asset Lifecycle details
      example:
        warrantyExpiryDate: 2022-12-31
        leaseExpiryDate: 2022-12-31
        expectedReplacementDate: 2022-12-31
        purchaseDate: 2022-12-31
        cost: 0
        location: location
        assetTag: assetTag
        description: description
        updateWarrantyError: updateWarrantyError
      properties:
        warrantyExpiryDate:
          pattern: "(\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}:\\d{2}(\\.\\d{1,9})?)?)?"
          type: string
        leaseExpiryDate:
          pattern: "(\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}:\\d{2}(\\.\\d{1,9})?)?)?"
          type: string
        expectedReplacementDate:
          pattern: "(\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}:\\d{2}(\\.\\d{1,9})?)?)?"
          type: string
        purchaseDate:
          pattern: "(\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}:\\d{2}(\\.\\d{1,9})?)?)?"
          type: string
        cost:
          type: number
        location:
          type: string
        assetTag:
          type: string
        description:
          maxLength: 255
          minLength: 0
          type: string
        updateWarrantyError:
          description: This field is Read Only
          readOnly: true
          type: string
        allNull:
          type: boolean
      required:
      - assetTag
      - cost
      - description
      - expectedReplacementDate
      - leaseExpiryDate
      - location
      - purchaseDate
      - warrantyExpiryDate
      type: object
    Data:
      properties:
        isPsaCredentialsValid:
          description: Contains the results of the PSA credentials validation.
          type: boolean
      type: object
    StandardPsaCredentialsValidateGetResponse:
      description: |
        Represents the response for validating PSA credentials.
        The validation result is encapsulated under the "_extra" field.
      example:
        data:
          isPsaCredentialsValid: true
        _links: {}
      properties:
        data:
          $ref: '#/components/schemas/Data'
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    PsaCredentialRequest:
      description: Representation of PSA credentials.
      example:
        username: username@domain.com
        password: myPassword!
      properties:
        username:
          type: string
        password:
          type: string
      type: object
    ServiceOrganizationCreation:
      description: Data object for organization unit.
      example:
        soName: New SO name
        contactFirstName: first name
        contactLastName: last name
        externalId: extId
        phone: phone
        contactTitle: contact title
        contactEmail: contact@email.com
        contactPhone: (123)456-7890
        contactPhoneExt: null
        contactDepartment: Support
        street1: One Street
        street2: ""
        city: Ottawa
        stateProv: Ontario
        country: CA
        postalCode: A1A 1A1
      properties:
        contactFirstName:
          description: First name of the contact for the organization unit.
          type: string
        contactLastName:
          description: Last name of the contact for the organization unit.
          type: string
        externalId:
          description: The external ID of the organization unit.
          type: string
        phone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactTitle:
          description: Title of the contact for the organization unit.
          type: string
        contactEmail:
          description: Contact email for the organization unit.
          type: string
        contactPhone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactPhoneExt:
          description: Telephone extension of the contact for the organization unit.
          type: string
        contactDepartment:
          description: Department of the contact for the organization unit.
          type: string
        street1:
          description: First line of street address for the organization unit.
          type: string
        street2:
          description: Second line of street address for the organization unit.
          type: string
        city:
          description: City where the organization unit is located.
          type: string
        stateProv:
          description: State or province where the organization unit is located.
          type: string
        country:
          description: "Country where the organization unit is located. Must be two\
            \ characters country code, see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."
          type: string
        postalCode:
          description: Postal code of the organization unit location.
          type: string
        soName:
          description: Name of the service organization.
          type: string
      required:
      - contactFirstName
      - contactLastName
      - soName
      type: object
    ServiceOrganizationCreated:
      description: |
        Represents the response of creating a new service organization and contains its ID.
      example:
        data:
          soId: 123
      properties:
        soId:
          description: Id of the created service organization.
          format: int32
          type: integer
      type: object
    CustomerCreation:
      description: Data object for customer.
      example:
        customerName: New customer name
        contactFirstName: first name
        contactLastName: last name
        licenseType: Professional
        externalId: extId
        phone: phone
        contactTitle: contact title
        contactEmail: contact@email.com
        contactPhone: (123)456-7890
        contactPhoneExt: null
        contactDepartment: Support
        street1: One Street
        street2: ""
        city: Ottawa
        stateProv: Ontario
        country: CA
        postalCode: A1A 1A1
      properties:
        contactFirstName:
          description: First name of the contact for the organization unit.
          type: string
        contactLastName:
          description: Last name of the contact for the organization unit.
          type: string
        externalId:
          description: The external ID of the organization unit.
          type: string
        phone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactTitle:
          description: Title of the contact for the organization unit.
          type: string
        contactEmail:
          description: Contact email for the organization unit.
          type: string
        contactPhone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactPhoneExt:
          description: Telephone extension of the contact for the organization unit.
          type: string
        contactDepartment:
          description: Department of the contact for the organization unit.
          type: string
        street1:
          description: First line of street address for the organization unit.
          type: string
        street2:
          description: Second line of street address for the organization unit.
          type: string
        city:
          description: City where the organization unit is located.
          type: string
        stateProv:
          description: State or province where the organization unit is located.
          type: string
        country:
          description: "Country where the organization unit is located. Must be two\
            \ characters country code, see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."
          type: string
        postalCode:
          description: Postal code of the organization unit location.
          type: string
        customerName:
          description: Name of the customer.
          type: string
        licenseType:
          default: Professional
          description: License type of the customer.
          type: string
      required:
      - contactFirstName
      - contactLastName
      - customerName
      type: object
    VersionInfoResponse:
      description: |
        Represents the response for version info extra. It provides details about each system and its value
        such as and others.
      example:
        data:
          _extra:
            Activation Mechanism: ActServer
            'Fusion: mTLS Provisioning Server Response Timeout (seconds)': "30"
            'Installation: Deployment Type': N-central
            N-able Hosted Platform: "false"
            'Fusion: Unified Agent Maint Customer Handler Start Delay (milliseconds)': "900000"
            'Installation: Deployment Product Version': 2024.1.0.11
            'Lightweight Integration: Max LWT Complete Attempts Initial': "3"
            'Installation: Servlet API Version': 2.0.nable
            'UI: Branding Profile': default/nable
            'Fusion: Unified Agent Maint Customer Handler Repeat Rate (milliseconds)': "30000"
            'Installation: UI Product Version': 2024.1.0.11
            'Lightweight Integration: Max LWT Deploy Attempts Initial': "3"
            'Lightweight Integration: LWT Complete Interval Initial (Minutes)': "5"
            Max RemoteExecution Data Size (Byte): "500"
            'Fusion: Unified Agent Maint Revoke Token Repeat Rate (milliseconds)': "3600000"
            Google Tags Enabled: "false"
            SSLEnabled: "true"
            'Fusion: Unified Agent mTLS Provisioning API URL': ""
            'Fusion: Unified Agent mTLS Provisioning Config URL': ""
            'Fusion: mTLS Provisioning Server Read Timeout (seconds)': "20"
            'LiveChat API Server: Host': https://c.la2-c1cs-iad.salesforceliveagent.com/content/g/js/41.0/deployment.js
            'Maint: Renew SSL Certificate Before Expiry (Hours)': "24"
            PatchApprovalPerformanceImprovements: "true"
            'Fusion: Maint Delete Expired Token Frequency (Milliseconds)': "21600000"
            'Fusion: Unified Agent Configuration Type Signature Delay (seconds)': "10"
            'Fusion: Maint Retry Keybox (Milliseconds)': "900000"
            License Key Expiry: 2026-09-30 00:00:00.000 -0400
            'Lightweight Integration: LWT Complete Interval Retry (Minutes)': "60"
            'Maint: Renew EventDistributorUser Certificate Before Expiry (Hours)': "72"
            'Lightweight Integration: Max LWT Deploy Attempts Total': "10"
            'Fusion: mTLS Provisioning Server Connect Timeout (milliseconds)': "20000"
            Prevent Sensitive Data In URL: "false"
            'MDM: N-Central UUID': ""
            'Lightweight Integration: Max LWT Complete Attempts Total': "10"
            'NVISION: Licensed': "true"
        _links: {}
      properties:
        data:
          additionalProperties:
            description: The data containing version info extra details.
            type: object
          description: The data containing version info extra details.
          type: object
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    VersionInfoAuthenticatedRequest:
      description: Representation of credentials.
      example:
        username: my.username@n-able.com
        password: myPassword!
      properties:
        username:
          type: string
        password:
          type: string
      type: object
    DirectSupportTask:
      description: '''Direct support'' scheduled task.'
      example:
        name: Test Task
        itemId: 1
        taskType: Script
        customerId: 100
        deviceId: 987654321
        credential:
          type: LocalSystem
          username: null
          password: null
        parameters:
        - name: CommandLine
          value: killprocess.vbs /process:33022
      properties:
        name:
          description: The name of the task. This value must be unique.
          type: string
        itemId:
          description: The ID of the remote execution item. The item ID can be found
            in the N-central UI ("Configuration" -> "Scheduled Tasks" -> "Script/software
            Repository") and it must have "Enable API" flag "ON" (see in the N-central
            UI).
          format: int32
          type: integer
        taskType:
          description: "The type of the task. Supported values: AutomationPolicy,\
            \ Script or MacScript."
          enum:
          - AutomationPolicy
          - Script
          - MacScript
          type: string
        customerId:
          description: The ID of the customer. The customer ID can be obtained using
            the <a href="#operations-Customers-listCustomers">'GET /api/customers'</a>
            endpoint.
          format: int32
          type: integer
        deviceId:
          description: The ID of the device. The device ID can be obtained using the
            <a href="#operations-Devices-getDeviceById">'GET /api/devices'</a> endpoint.
          format: int32
          type: integer
        credential:
          $ref: '#/components/schemas/ScheduledTaskCredential'
        parameters:
          description: |
            The credential setting for the task.
            For more information about the fields of <a href="#model-ScheduledTaskParameter">ScheduledTaskParameter</a>,
                please review its schema below.
          items:
            $ref: '#/components/schemas/ScheduledTaskParameter'
          type: array
      required:
      - credential
      - customerId
      - deviceId
      - itemId
      - name
      - taskType
      type: object
    ScheduledTaskCredential:
      description: Credentials for a remote execution task.
      example:
        type: CustomCredentials
        username: admin
        password: pass
      properties:
        type:
          description: "The credential type. Supported values: LocalSystem, DeviceCredentials\
            \ and CustomCredentials."
          enum:
          - LocalSystem
          - DeviceCredentials
          - CustomCredentials
          type: string
        username:
          description: The username (used with 'CustomCredentials' type).
          type: string
        password:
          description: The password (used with 'CustomCredentials' type).
          type: string
      required:
      - type
      type: object
    ScheduledTaskParameter:
      description: |
        Input Parameters of the task to be executed, whether it is an Automation Policy, a script, a MAC script, etc.
        Parameters for an automation policy are defined according to the script repository item associated with
        a given scheduled task.
        For a script or a MAC script, the whole command line can be specified using the parameter "CommandLine".
      example: |2
           {
             "name": "CommandLine",
             "value": "killprocess.vbs /process:33022",
             "description": "Command line to execute",
             "type": "string",
           }
      properties:
        name:
          description: The parameter name. The value must not be empty.
          type: string
        value:
          description: The parameter value.
          type: string
        description:
          description: The parameter name. The value must not be empty.
          type: string
        type:
          description: "The parameter type. Supported values: string, integer, boolean,\
            \ text, dword."
          enum:
          - string
          - integer
          - boolean
          - text
          - dword
          type: string
      required:
      - description
      - name
      - type
      type: object
    ScheduledTaskCreateResponse:
      description: Response for a task-creation request
      example:
        data:
          taskId: 1985975
        _links:
          task: "/api/scheduled-tasks/{1985975}"
      properties:
        data:
          $ref: '#/components/schemas/TaskCreate'
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    TaskCreate:
      description: Information about a newly created task
      example:
        taskId: 1985975
      properties:
        taskId:
          format: int32
          type: integer
      type: object
    CreateUserRoleRequest:
      description: Request Payload for adding a new user role.
      example:
        roleName: Admin
        description: Admin role
        permissionIds:
        - "1"
        - "2"
        - "3"
        userIds:
        - "1"
        - "2"
        - "3"
      properties:
        roleName:
          description: The name of the role
          example: Admin
          type: string
        description:
          description: The description of the role
          example: Admin role
          maxLength: 255
          minLength: 0
          type: string
        permissionIds:
          description: The list of permissions
          example:
          - 1
          - 2
          - 3
          items:
            description: The list of permissions
            example: "[1,2,3]"
            type: string
          type: array
        userIds:
          description: The list of user IDs
          example:
          - 1
          - 2
          - 3
          items:
            description: The list of user IDs
            example: "[1,2,3]"
            type: string
          type: array
      required:
      - description
      - permissionIds
      - roleName
      type: object
    CreateUserRoleResponse:
      description: |
        Represents the response of creating a new role and contains the role ID for a newly created role.
      example:
        data:
          roleId: 123
        _links: []
      properties:
        data:
          $ref: '#/components/schemas/Data'
        links:
          items:
            type: string
          type: array
      type: object
    DeviceAccessGroupCreateRequest:
      description: Request for creating a device type access group.
      example:
        groupName: Example Group Name
        groupDescription: A sample access group for demonstration purposes
        deviceIds:
        - "1001"
        - "1002"
        userIds:
        - "5001"
        - "5002"
      properties:
        groupName:
          description: Name of the access group.
          type: string
        groupDescription:
          description: Description of the access group.
          type: string
        deviceIds:
          description: List of device IDs to attach to the access group.
          items:
            description: List of device IDs to attach to the access group.
            type: string
          type: array
        userIds:
          description: List of user IDs to be associated with the access group.
          items:
            description: List of user IDs to be associated with the access group.
            type: string
          type: array
      required:
      - groupDescription
      - groupName
      type: object
    OrgUnitTypeAccessGroupCreateRequest:
      description: Request for creating an org unit type access group.
      example:
        groupName: Example Group Name
        groupDescription: A sample access group for demonstration purposes
        orgUnitIds:
        - "1001"
        - "1002"
        userIds:
        - "5001"
        - "5002"
        autoIncludeNewOrgUnits: "true"
      properties:
        groupName:
          description: Name of the access group.
          type: string
        groupDescription:
          description: Description of the access group.
          type: string
        orgUnitIds:
          description: List of orgUnit IDs to attach to the access group.
          items:
            description: List of orgUnit IDs to attach to the access group.
            type: string
          type: array
        userIds:
          description: List of user IDs to be associated with the access group.
          items:
            description: List of user IDs to be associated with the access group.
            type: string
          type: array
        autoIncludeNewOrgUnits:
          description: "Flag indicating whether new org units should be automatically\
            \ included. Default or invalid: false"
          type: string
      required:
      - groupDescription
      - groupName
      type: object
    MaintenanceWindowResponse:
      description: General Response for maintenance window action.
      example:
        success: true
      properties:
        success:
          type: boolean
      type: object
    Action:
      description: Response for Maintenance Window Action.
      example: |2
                     {
                        "key": "Install",
                        "value": "871a0782-be12-a5c4-c57f-1bd6d9f7144e",
                      }
      properties:
        Key:
          type: string
        Value:
          type: string
      type: object
    ApplicableAction:
      description: Request/Response for Maintenance Window ApplicableAction.
      example: |2
                    {
                        "type": "Patch",
                        "actions": [
                            {
                                "key": "Install",
                                "value": "871a0782-be12-a5c4-c57f-1bd6d9f7144e",
                            }
                        ]
                    }
      properties:
        type:
          type: string
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
      type: object
    MaintenanceWindowRequest:
      description: Represents a single maintenance Window.
      example:
        applicableAction:
        - type: Patch
          actions:
          - Key: detect
            Value: null
        name: Test Maintenance Window
        type: action
        cron: "0 0 0 ? 2 1,4 *"
        duration: 60
        enabled: true
        maxDowntime: 0
        rebootMethod: allowUserToPostpone
        rebootDelay: 0
        downtimeOnAction: false
        userMessageEnabled: false
        userMessage: null
        messageSenderEnabled: false
        messageSender: null
        preserveStateEnabled: false
      properties:
        applicableAction:
          description: Actions Applicable To Window
          items:
            $ref: '#/components/schemas/ApplicableAction'
          type: array
        cron:
          description: Schedule represented as Cron
          type: string
        duration:
          description: Maintenance Window should last for
          format: int32
          type: integer
        enabled:
          description: Maintenance Window should last for
          type: boolean
        name:
          description: Name of Maintenance Window
          type: string
        type:
          description: Type of Maintenance Window (only allowed type is currently
            'action')
          type: string
        downtimeOnAction:
          description: Place Device in Downtime During Reboot (Reboot Window)
          type: boolean
        maxDowntime:
          description: Force Device out of Downtime After (Reboot Window) - used when
            'downtimeOnAction' is true
          format: int32
          type: integer
        rebootMethod:
          description: "Reboot Method (Reboot Window), must be one of: ['allowUserToPostpone',\
            \ 'forceUserToReboot', 'forceRebootWithoutNotification', 'onlyAcceptedReboot']"
          type: string
        rebootDelay:
          description: Minutes before continuing with reboot. (Reboot Window)
          format: int32
          type: integer
        userMessageEnabled:
          description: Display Custom Message To User (Reboot Window)
          type: boolean
        userMessage:
          description: Custom message to display to user when 'userMessageEnabled'
            is true (Reboot Window)
          type: string
        messageSenderEnabled:
          description: Enable Custom Message Sender (Reboot Window)
          type: boolean
        messageSender:
          description: Message from when 'messageSenderEnabled' is true (Reboot Window)
          type: string
        preserveStateEnabled:
          description: Preserve State of Device During Reboot (/g flag) (Reboot Window)
          type: boolean
      required:
      - applicableAction
      - cron
      - duration
      - enabled
      - name
      - type
      type: object
    MaintenanceWindowsRequest:
      description: Request for creating a set of maintenance Windows to a list of
        devices.
      example:
        deviceIDs:
        - 123456789
        - 234567890
        - 345678901
        maintenanceWindows:
        - applicableAction:
          - type: Patch
            actions:
            - Key: detect
              Value: null
          name: Test Maintenance Window
          type: action
          cron: "0 0 0 ? 2 1,4 *"
          duration: 60
          enabled: true
          maxDowntime: 0
          rebootMethod: allowUserToPostpone
          rebootDelay: 0
          downtimeOnAction: false
          userMessageEnabled: false
          userMessage: null
          messageSenderEnabled: false
          messageSender: null
          preserveStateEnabled: false
      properties:
        deviceIDs:
          items:
            format: int32
            type: integer
          type: array
        maintenanceWindows:
          items:
            $ref: '#/components/schemas/MaintenanceWindowRequest'
          type: array
      type: object
    SiteCreation:
      description: Data object for site.
      example:
        siteName: New site name
        contactFirstName: first name
        contactLastName: last name
        licenseType: Professional
        externalId: extId
        phone: phone
        contactTitle: contact title
        contactEmail: contact@email.com
        contactPhone: (123)456-7890
        contactPhoneExt: null
        contactDepartment: Support
        street1: One Street
        street2: ""
        city: Ottawa
        stateProv: Ontario
        country: CA
        postalCode: A1A 1A1
      properties:
        contactFirstName:
          description: First name of the contact for the organization unit.
          type: string
        contactLastName:
          description: Last name of the contact for the organization unit.
          type: string
        externalId:
          description: The external ID of the organization unit.
          type: string
        phone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactTitle:
          description: Title of the contact for the organization unit.
          type: string
        contactEmail:
          description: Contact email for the organization unit.
          type: string
        contactPhone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactPhoneExt:
          description: Telephone extension of the contact for the organization unit.
          type: string
        contactDepartment:
          description: Department of the contact for the organization unit.
          type: string
        street1:
          description: First line of street address for the organization unit.
          type: string
        street2:
          description: Second line of street address for the organization unit.
          type: string
        city:
          description: City where the organization unit is located.
          type: string
        stateProv:
          description: State or province where the organization unit is located.
          type: string
        country:
          description: "Country where the organization unit is located. Must be two\
            \ characters country code, see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."
          type: string
        postalCode:
          description: Postal code of the organization unit location.
          type: string
        siteName:
          description: Name of the site.
          type: string
        licenseType:
          default: Professional
          description: License type of the site.
          type: string
      required:
      - contactFirstName
      - contactLastName
      - siteName
      type: object
    SiteCreated:
      example:
        siteId: 0
      properties:
        siteId:
          description: Id of the created site.
          format: int32
          type: integer
      type: object
    CustomPsaTicketGetResponse:
      description: |
        Represents the response for fetching details of a specific Custom PSA ticket.
      example:
        data:
          ticketId: "1142285696"
          ticketTitle: "Foo bar ticket #1"
          ticketDetails: For testing PSA ticketing
          ticketStatus: CREATE_TICKET_CREATED_IN_NCENTRAL
          creationDate: "2024-02-21T06:28:10.624-05:00[America/New_York]"
        _links: {}
      properties:
        data:
          $ref: '#/components/schemas/CustomPsaTicketInfo'
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    CustomPsaTicketInfo:
      description: Represents the response for fetching details of a specific Custom
        PSA ticket.
      properties:
        ticketId:
          description: The ID of the Custom PSA ticket.
          type: string
        ticketTitle:
          description: The title of the Custom PSA ticket.
          type: string
        ticketDetails:
          description: The details of the Custom PSA ticket.
          type: string
        ticketStatus:
          description: The status of the Custom PSA ticket.
          type: string
        creationDate:
          description: The creation date of the Custom PSA ticket.
          type: string
      type: object
    AuthRefreshResponse:
      description: Response for the refresh of authentication tokens.
      example:
        tokens:
          access:
            token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI1MjZjMTjI0M30.try6YwSXhu1qh1iyBPonWVfxLexlNavXkRqQaeY2uzo
            type: Bearer
            expirySeconds: 3600
          refresh:
            token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI1I2OTQ0M30.T_yn88Xg258liJa5AwLq011-TWDMWMKVVyR5AYOM3os
            type: Body
            expirySeconds: 90000
        refresh: /api/auth/refresh
        validate: /api/auth/validate
      properties:
        tokens:
          $ref: '#/components/schemas/AuthTokens'
        refresh:
          type: string
        validate:
          type: string
      type: object
    AuthToken:
      description: Authentication token (access or refresh).
      example:
        token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI1MjZjMTjI0M30.try6YwSXhu1qh1iyBPonWVfxLexlNavXkRqQaeY2uzo
        type: Bearer
        expirySeconds: 3600
      properties:
        token:
          description: The JWT token.
          type: string
        type:
          description: "The token type: bearer or body."
          type: string
        expirySeconds:
          description: The expiry in seconds.
          format: int64
          type: integer
      required:
      - token
      - type
      type: object
    AuthTokens:
      description: Authentication tokens (access and refresh).
      example:
        access:
          token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI1MjZjMTjI0M30.try6YwSXhu1qh1iyBPonWVfxLexlNavXkRqQaeY2uzo
          type: Bearer
          expirySeconds: 3600
        refresh:
          token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI1I2OTQ0M30.T_yn88Xg258liJa5AwLq011-TWDMWMKVVyR5AYOM3os
          type: Body
          expirySeconds: 90000
      properties:
        access:
          $ref: '#/components/schemas/AuthToken'
        refresh:
          $ref: '#/components/schemas/AuthToken'
      required:
      - access
      - refresh
      type: object
    AuthenticateResponse:
      description: Response for obtaining the authentication tokens.
      example:
        tokens:
          access:
            token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI1MjZjMTjI0M30.try6YwSXhu1qh1iyBPonWVfxLexlNavXkRqQaeY2uzo
            type: Bearer
            expirySeconds: 3600
          refresh:
            token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI1I2OTQ0M30.T_yn88Xg258liJa5AwLq011-TWDMWMKVVyR5AYOM3os
            type: Body
            expirySeconds: 90000
        refresh: /api/auth/refresh
        validate: /api/auth/validate
      properties:
        tokens:
          $ref: '#/components/schemas/AuthTokens'
        refresh:
          type: string
        validate:
          type: string
      type: object
    AssetLifecyclePatchRequest:
      description: Asset Lifecycle Patch Request details
      example:
        warrantyExpiryDate: 2022-12-31
        leaseExpiryDate: 2022-12-31
        expectedReplacementDate: 2022-12-31
        purchaseDate: 2022-12-31
        cost: 0
        location: location
        assetTag: assetTag
        description: description
        updateWarrantyError: updateWarrantyError
      properties:
        warrantyExpiryDate:
          pattern: "(\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}:\\d{2}(\\.\\d{1,9})?)?)?"
          type: string
        leaseExpiryDate:
          pattern: "(\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}:\\d{2}(\\.\\d{1,9})?)?)?"
          type: string
        expectedReplacementDate:
          pattern: "(\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}:\\d{2}(\\.\\d{1,9})?)?)?"
          type: string
        purchaseDate:
          pattern: "(\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}:\\d{2}(\\.\\d{1,9})?)?)?"
          type: string
        cost:
          type: number
        location:
          type: string
        assetTag:
          type: string
        description:
          type: string
        updateWarrantyError:
          type: string
      type: object
    LinksResponse:
      example:
        _links:
          key: _links
      properties:
        _links:
          additionalProperties:
            type: string
          type: object
      type: object
    ListResponseSite:
      example:
        totalItems: 0
        data:
        - siteId: "100"
          siteName: N-able
          orgUnitType: SO
          parentId: "50"
          externalId: extId
          externalId2: extId2
          phone: phone
          contactTitle: contact title
          contactFirstName: contact first name
          contactLastName: contact last name
          contactEmail: contact@email.com
          contactPhone: (123)456-7890
          contactPhoneExt: null
          contactDepartment: Support
          street1: One Street
          street2: ""
          city: Ottawa
          stateProv: Ontario
          country: CA
          county: null
          postalCode: A1A 1A1
        - siteId: "100"
          siteName: N-able
          orgUnitType: SO
          parentId: "50"
          externalId: extId
          externalId2: extId2
          phone: phone
          contactTitle: contact title
          contactFirstName: contact first name
          contactLastName: contact last name
          contactEmail: contact@email.com
          contactPhone: (123)456-7890
          contactPhoneExt: null
          contactDepartment: Support
          street1: One Street
          street2: ""
          city: Ottawa
          stateProv: Ontario
          country: CA
          county: null
          postalCode: A1A 1A1
      properties:
        data:
          items:
            $ref: '#/components/schemas/Site'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    Site:
      description: Data object for service organiztion organization.
      example:
        siteId: "100"
        siteName: N-able
        orgUnitType: SO
        parentId: "50"
        externalId: extId
        externalId2: extId2
        phone: phone
        contactTitle: contact title
        contactFirstName: contact first name
        contactLastName: contact last name
        contactEmail: contact@email.com
        contactPhone: (123)456-7890
        contactPhoneExt: null
        contactDepartment: Support
        street1: One Street
        street2: ""
        city: Ottawa
        stateProv: Ontario
        country: CA
        county: null
        postalCode: A1A 1A1
      properties:
        siteId:
          description: The ID of the organization unit.
          type: string
        siteName:
          description: The name of the organization unit.
          type: string
        orgUnitType:
          description: "The type of the organization unit (SYSTEM, SO, CUSTOMER or\
            \ SITE)."
          type: string
        parentId:
          description: The ID of the parent organization unit.
          type: string
        externalId:
          description: The external ID of the organization unit.
          type: string
        externalId2:
          description: The external ID 2 of the organization unit.
          type: string
        contactFirstName:
          description: First name of the contact for the organization unit.
          type: string
        contactLastName:
          description: Last name of the contact for the organization unit.
          type: string
        phone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactTitle:
          description: Title of the contact for the organization unit.
          type: string
        contactEmail:
          description: Contact email for the organization unit.
          type: string
        contactPhone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactPhoneExt:
          description: Telephone extension of the contact for the organization unit.
          type: string
        contactDepartment:
          description: Department of the contact for the organization unit.
          type: string
        street1:
          description: First line of street address for the organization unit.
          type: string
        street2:
          description: Second line of street address for the organization unit.
          type: string
        city:
          description: City where the organization unit is located.
          type: string
        stateProv:
          description: State or province where the organization unit is located.
          type: string
        country:
          description: "Country where the organization unit is located. Must be two\
            \ characters country code, see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."
          type: string
        postalCode:
          description: Postal code of the organization unit location.
          type: string
        isSystem:
          type: boolean
        isServiceOrg:
          type: boolean
      required:
      - contactFirstName
      - contactLastName
      type: object
    RegistrationToken:
      description: Represents the response for a registration token (GET endpoint).
      example:
        registrationToken: 2f64ee5e-7c37-dce7-ffd2-d32912609623
        registrationTokenExpiryDate: "2024-05-01T23:59:00-04:00[America/New_York]"
      properties:
        registrationToken:
          description: The registration-token date.
          example: 2f64ee5e-7c37-dce7-ffd2-d32912609623
          type: string
        registrationTokenExpiryDate:
          description: The registration-token expiry date.
          example: "2024-05-01T23:59:00-04:00[America/New_York]"
          type: string
      type: object
    RegistrationTokenGetResponse:
      example:
        data:
          registrationToken: 2f64ee5e-7c37-dce7-ffd2-d32912609623
          registrationTokenExpiryDate: "2024-05-01T23:59:00-04:00[America/New_York]"
      properties:
        data:
          $ref: '#/components/schemas/RegistrationToken'
      type: object
    ListResponseServiceOrganization:
      example:
        totalItems: 0
        data:
        - soId: "100"
          soName: N-able
          orgUnitType: SO
          parentId: "50"
          externalId: extId
          externalId2: extId2
          phone: phone
          contactTitle: contact title
          contactFirstName: contact first name
          contactLastName: contact last name
          contactEmail: contact@email.com
          contactPhone: (123)456-7890
          contactPhoneExt: null
          contactDepartment: Support
          street1: One Street
          street2: ""
          city: Ottawa
          stateProv: Ontario
          country: CA
          county: null
          postalCode: A1A 1A1
        - soId: "100"
          soName: N-able
          orgUnitType: SO
          parentId: "50"
          externalId: extId
          externalId2: extId2
          phone: phone
          contactTitle: contact title
          contactFirstName: contact first name
          contactLastName: contact last name
          contactEmail: contact@email.com
          contactPhone: (123)456-7890
          contactPhoneExt: null
          contactDepartment: Support
          street1: One Street
          street2: ""
          city: Ottawa
          stateProv: Ontario
          country: CA
          county: null
          postalCode: A1A 1A1
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceOrganization'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    ServiceOrganization:
      description: Data object for service organization.
      example:
        soId: "100"
        soName: N-able
        orgUnitType: SO
        parentId: "50"
        externalId: extId
        externalId2: extId2
        phone: phone
        contactTitle: contact title
        contactFirstName: contact first name
        contactLastName: contact last name
        contactEmail: contact@email.com
        contactPhone: (123)456-7890
        contactPhoneExt: null
        contactDepartment: Support
        street1: One Street
        street2: ""
        city: Ottawa
        stateProv: Ontario
        country: CA
        county: null
        postalCode: A1A 1A1
      properties:
        soId:
          description: The ID of the organization unit.
          type: string
        soName:
          description: The name of the organization unit.
          type: string
        orgUnitType:
          description: "The type of the organization unit (SYSTEM, SO, CUSTOMER or\
            \ SITE)."
          type: string
        parentId:
          description: The ID of the parent organization unit.
          type: string
        externalId:
          description: The external ID of the organization unit.
          type: string
        externalId2:
          description: The external ID 2 of the organization unit.
          type: string
        contactFirstName:
          description: First name of the contact for the organization unit.
          type: string
        contactLastName:
          description: Last name of the contact for the organization unit.
          type: string
        phone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactTitle:
          description: Title of the contact for the organization unit.
          type: string
        contactEmail:
          description: Contact email for the organization unit.
          type: string
        contactPhone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactPhoneExt:
          description: Telephone extension of the contact for the organization unit.
          type: string
        contactDepartment:
          description: Department of the contact for the organization unit.
          type: string
        street1:
          description: First line of street address for the organization unit.
          type: string
        street2:
          description: Second line of street address for the organization unit.
          type: string
        city:
          description: City where the organization unit is located.
          type: string
        stateProv:
          description: State or province where the organization unit is located.
          type: string
        country:
          description: "Country where the organization unit is located. Must be two\
            \ characters country code, see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."
          type: string
        postalCode:
          description: Postal code of the organization unit location.
          type: string
        isSystem:
          type: boolean
        isServiceOrg:
          type: boolean
      required:
      - contactFirstName
      - contactLastName
      type: object
    Customer:
      description: Data object for service customer.
      example:
        customerId: "100"
        customerName: N-able
        orgUnitType: SO
        parentId: "50"
        externalId: extId
        externalId2: extId2
        phone: phone
        contactTitle: contact title
        contactFirstName: contact first name
        contactLastName: contact last name
        contactEmail: contact@email.com
        contactPhone: (123)456-7890
        contactPhoneExt: null
        contactDepartment: Support
        street1: One Street
        street2: ""
        city: Ottawa
        stateProv: Ontario
        country: CA
        county: null
        postalCode: A1A 1A1
      properties:
        customerId:
          description: The ID of the organization unit.
          type: string
        customerName:
          description: The name of the organization unit.
          type: string
        orgUnitType:
          description: "The type of the organization unit (SYSTEM, SO, CUSTOMER or\
            \ SITE)."
          type: string
        parentId:
          description: The ID of the parent organization unit.
          type: string
        externalId:
          description: The external ID of the organization unit.
          type: string
        externalId2:
          description: The external ID 2 of the organization unit.
          type: string
        contactFirstName:
          description: First name of the contact for the organization unit.
          type: string
        contactLastName:
          description: Last name of the contact for the organization unit.
          type: string
        phone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactTitle:
          description: Title of the contact for the organization unit.
          type: string
        contactEmail:
          description: Contact email for the organization unit.
          type: string
        contactPhone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactPhoneExt:
          description: Telephone extension of the contact for the organization unit.
          type: string
        contactDepartment:
          description: Department of the contact for the organization unit.
          type: string
        street1:
          description: First line of street address for the organization unit.
          type: string
        street2:
          description: Second line of street address for the organization unit.
          type: string
        city:
          description: City where the organization unit is located.
          type: string
        stateProv:
          description: State or province where the organization unit is located.
          type: string
        country:
          description: "Country where the organization unit is located. Must be two\
            \ characters country code, see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."
          type: string
        postalCode:
          description: Postal code of the organization unit location.
          type: string
        county:
          description: "DEPRECATED: County where the organization unit is located."
          type: string
        isSystem:
          type: boolean
        isServiceOrg:
          type: boolean
      required:
      - contactFirstName
      - contactLastName
      type: object
    ListResponseCustomer:
      example:
        totalItems: 0
        data:
        - customerId: "100"
          customerName: N-able
          orgUnitType: SO
          parentId: "50"
          externalId: extId
          externalId2: extId2
          phone: phone
          contactTitle: contact title
          contactFirstName: contact first name
          contactLastName: contact last name
          contactEmail: contact@email.com
          contactPhone: (123)456-7890
          contactPhoneExt: null
          contactDepartment: Support
          street1: One Street
          street2: ""
          city: Ottawa
          stateProv: Ontario
          country: CA
          county: null
          postalCode: A1A 1A1
        - customerId: "100"
          customerName: N-able
          orgUnitType: SO
          parentId: "50"
          externalId: extId
          externalId2: extId2
          phone: phone
          contactTitle: contact title
          contactFirstName: contact first name
          contactLastName: contact last name
          contactEmail: contact@email.com
          contactPhone: (123)456-7890
          contactPhoneExt: null
          contactDepartment: Support
          street1: One Street
          street2: ""
          city: Ottawa
          stateProv: Ontario
          country: CA
          county: null
          postalCode: A1A 1A1
      properties:
        data:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    AuthValidateResponse:
      description: Response for validating the authentication access token.
      example:
        message: The token is valid.
      properties:
        message:
          type: string
      type: object
    ScheduledTaskInfoResponse:
      description: Task information response.
      example:
        data:
          taskId: 905592865
          parentId: 120
          name: Name
          itemId: 2
          type: Script
          orgUnitId: 100
          soId: 50
          siteId: null
          applianceId: 1258095675
          isReactive: false
          isEnabled: true
          deviceIds:
          - "1234567890"
        _links:
          status: /api/scheduled-tasks/905592865/status
      properties:
        data:
          $ref: '#/components/schemas/TaskInfo'
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    TaskInfo:
      description: Task information response.
      example:
        taskId: 905592865
        parentId: 120
        name: Name
        taskName: Name
        itemId: 2
        type: Script
        orgUnitId: 100
        soId: 50
        customerId: 100
        siteId: null
        applianceId: 1258095675
        isReactive: false
        isEnabled: true
        deviceIds:
        - "1234567890"
      properties:
        taskId:
          description: Id of the task.
          format: int32
          type: integer
        parentId:
          description: "The unique identifier of the parent task (if applicable),\
            \ or null if there is no parent task."
          format: int32
          type: integer
        name:
          description: The name of the task (same with taskName).
          type: string
        taskName:
          description: The name of the task (same with name).
          type: string
        itemId:
          description: The unique identifier for the item associated with the task.
          format: int32
          type: integer
        type:
          description: The type of the task.
          type: string
        orgUnitId:
          description: The unique identifier of the organization associated with the
            task.
          format: int32
          type: integer
        soId:
          description: The unique identifier of the SO associated with the task.
          format: int32
          type: integer
        customerId:
          description: The unique identifier of the customer associated with the task.
          format: int32
          type: integer
        siteId:
          description: The unique identifier of the site associated with the task.
          format: int32
          type: integer
        applianceId:
          description: The unique identifier of the appliance related to the task.
          format: int32
          type: integer
        isReactive:
          description: Indicates whether the task is reactive (true) or not (false).
          type: boolean
        isEnabled:
          description: Indicates whether the task is enabled (true) or disabled (false).
          type: boolean
        deviceIds:
          description: List of device IDs that this task is run on.
          items:
            description: List of device IDs that this task is run on.
            type: string
          type: array
      type: object
    ScheduledTaskAggregatedStatusResponse:
      description: Aggregated status response.
      example:
        data:
          taskName: Task Name
          statusCounts:
            Completed: 3
            In Pending: 2
        _links:
          details: "/api/scheduled-tasks/{taskId}/status/details"
      properties:
        data:
          $ref: '#/components/schemas/TaskAggregatedStatus'
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    TaskAggregatedStatus:
      description: Aggregated status response.
      example:
        taskName: Task Name
        statusCounts:
          Completed: 3
          In Pending: 2
      properties:
        taskName:
          description: Name of the task.
          type: string
        statusCounts:
          additionalProperties:
            description: Map of status counts where keys are status names and values
              are status counts.
            format: int32
            type: integer
          description: Map of status counts where keys are status names and values
            are status counts.
          type: object
      type: object
    DetailsResponse:
      description: Details response for a task.
      example:
        taskId: 9712342
        deviceId: 2071979267
        deviceName: Device 1
        taskName: Create log file
        status: Success
        output: Task did not produce any output.
        message: Successful execution on remote device.
      properties:
        taskId:
          description: ID of the task.
          format: int32
          type: integer
        deviceId:
          description: ID of the device.
          format: int32
          type: integer
        deviceName:
          description: Name of the device.
          type: string
        taskName:
          description: Name of the task.
          type: string
        status:
          description: Status of the task.
          type: string
        output:
          description: Output of the task.
          type: string
        message:
          description: Message of the task.
          type: string
        outputFileName:
          description: Output file name.
          type: string
      type: object
    ListResponseDetailsResponse:
      example:
        totalItems: 0
        data:
        - taskId: 9712342
          deviceId: 2071979267
          deviceName: Device 1
          taskName: Create log file
          status: Success
          output: Task did not produce any output.
          message: Successful execution on remote device.
        - taskId: 9712342
          deviceId: 2071979267
          deviceName: Device 1
          taskName: Create log file
          status: Success
          output: Task did not produce any output.
          message: Successful execution on remote device.
      properties:
        data:
          items:
            $ref: '#/components/schemas/DetailsResponse'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    ListResponseOrganizationUnit:
      example:
        totalItems: 0
        data:
        - orgUnitId: "100"
          orgUnitName: N-able
          orgUnitType: CUSTOMER
          parentId: "50"
          externalId: extId
          externalId2: extId2
          phone: phone
          contactTitle: contact title
          contactFirstName: contact first name
          contactLastName: contact last name
          contactEmail: admin@n-able.com
          contactPhone: (123)456-7890
          contactPhoneExt: null
          contactDepartment: Support
          street1: One Street
          street2: ""
          city: Ottawa
          stateProv: Ontario
          country: CA
          county: null
          postalCode: A1A 1A1
        - orgUnitId: "100"
          orgUnitName: N-able
          orgUnitType: CUSTOMER
          parentId: "50"
          externalId: extId
          externalId2: extId2
          phone: phone
          contactTitle: contact title
          contactFirstName: contact first name
          contactLastName: contact last name
          contactEmail: admin@n-able.com
          contactPhone: (123)456-7890
          contactPhoneExt: null
          contactDepartment: Support
          street1: One Street
          street2: ""
          city: Ottawa
          stateProv: Ontario
          country: CA
          county: null
          postalCode: A1A 1A1
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrganizationUnit'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    OrganizationUnit:
      description: Data object for organization unit.
      example:
        orgUnitId: "100"
        orgUnitName: N-able
        orgUnitType: CUSTOMER
        parentId: "50"
        externalId: extId
        externalId2: extId2
        phone: phone
        contactTitle: contact title
        contactFirstName: contact first name
        contactLastName: contact last name
        contactEmail: admin@n-able.com
        contactPhone: (123)456-7890
        contactPhoneExt: null
        contactDepartment: Support
        street1: One Street
        street2: ""
        city: Ottawa
        stateProv: Ontario
        country: CA
        county: null
        postalCode: A1A 1A1
      properties:
        orgUnitId:
          description: The ID of the organization unit.
          type: string
        orgUnitName:
          description: The name of the organization unit.
          type: string
        orgUnitType:
          description: "The type of the organization unit (SYSTEM, SO, CUSTOMER or\
            \ SITE)."
          type: string
        parentId:
          description: The ID of the parent organization unit.
          type: string
        externalId:
          description: The external ID of the organization unit.
          type: string
        externalId2:
          description: The external ID 2 of the organization unit.
          type: string
        contactFirstName:
          description: First name of the contact for the organization unit.
          type: string
        contactLastName:
          description: Last name of the contact for the organization unit.
          type: string
        phone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactTitle:
          description: Title of the contact for the organization unit.
          type: string
        contactEmail:
          description: Contact email for the organization unit.
          type: string
        contactPhone:
          description: Telephone of the contact for the organization unit.
          type: string
        contactPhoneExt:
          description: Telephone extension of the contact for the organization unit.
          type: string
        contactDepartment:
          description: Department of the contact for the organization unit.
          type: string
        street1:
          description: First line of street address for the organization unit.
          type: string
        street2:
          description: Second line of street address for the organization unit.
          type: string
        city:
          description: City where the organization unit is located.
          type: string
        stateProv:
          description: State or province where the organization unit is located.
          type: string
        country:
          description: "Country where the organization unit is located. Must be two\
            \ characters country code, see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."
          type: string
        postalCode:
          description: Postal code of the organization unit location.
          type: string
      required:
      - contactFirstName
      - contactLastName
      type: object
    Links:
      example:
        previousPage: previousPage
        firstPage: firstPage
        lastPage: lastPage
        nextPage: nextPage
      properties:
        firstPage:
          type: string
        previousPage:
          type: string
        nextPage:
          type: string
        lastPage:
          type: string
      type: object
    QueryResponseUser:
      example:
        totalItems: 5
        pageNumber: 0
        data:
        - firstName: John
          lastName: Doe
          apiOnlyUser: false
          description: Test description
          isEnabled: true
          isLdap: false
          isLocked: false
          loggedInUser: false
          readOnly: false
          supportUser: false
          userId: 1234567890
          userName: johndoe@example.com
          accessGroupIds:
          - 1
          - 2
          - 3
          currentSsoProvider: None
          customerTree:
          - System
          - John's SO
          - Customer 1
          fullName: John Doe
          roleIds:
          - 12
          - 13
          - 14
          twoFactorEnabled: false
        - firstName: John
          lastName: Doe
          apiOnlyUser: false
          description: Test description
          isEnabled: true
          isLdap: false
          isLocked: false
          loggedInUser: false
          readOnly: false
          supportUser: false
          userId: 1234567890
          userName: johndoe@example.com
          accessGroupIds:
          - 1
          - 2
          - 3
          currentSsoProvider: None
          customerTree:
          - System
          - John's SO
          - Customer 1
          fullName: John Doe
          roleIds:
          - 12
          - 13
          - 14
          twoFactorEnabled: false
        _links:
          previousPage: previousPage
          firstPage: firstPage
          lastPage: lastPage
          nextPage: nextPage
        totalPages: 5
        _warning: _warning
        pageSize: 6
        itemCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        itemCount:
          format: int32
          type: integer
        totalItems:
          format: int32
          type: integer
        totalPages:
          format: int32
          type: integer
        _links:
          $ref: '#/components/schemas/Links'
        _warning:
          type: string
      required:
      - _links
      type: object
    User:
      description: Represents the response for a user inside user list endpoint. It
        provides details about the user.
      example:
        firstName: John
        lastName: Doe
        apiOnlyUser: false
        description: Test description
        isEnabled: true
        isLdap: false
        isLocked: false
        loggedInUser: false
        readOnly: false
        supportUser: false
        userId: 1234567890
        userName: johndoe@example.com
        accessGroupIds:
        - 1
        - 2
        - 3
        currentSsoProvider: None
        customerTree:
        - System
        - John's SO
        - Customer 1
        fullName: John Doe
        roleIds:
        - 12
        - 13
        - 14
        twoFactorEnabled: false
      properties:
        firstName:
          description: The first name of the user.
          example: John
          type: string
        lastName:
          description: The last name of the user.
          example: Doe
          type: string
        apiOnlyUser:
          description: Indicates if the user is API only.
          example: false
          type: boolean
        description:
          description: A description of the user.
          example: Test description
          type: string
        isEnabled:
          description: Indicates if the user is enabled.
          example: true
          type: boolean
        isLdap:
          description: Indicates if the user is managed through LDAP.
          example: false
          type: boolean
        isLocked:
          description: Indicates if the user's account is locked.
          example: false
          type: boolean
        loggedInUser:
          description: Indicates if the user is currently logged in.
          example: false
          type: boolean
        readOnly:
          description: Indicates if the user has read-only access.
          example: false
          type: boolean
        supportUser:
          description: Indicates if the user is a support user.
          example: false
          type: boolean
        userId:
          description: The unique identifier of the user.
          example: 1234567890
          format: int32
          type: integer
        userName:
          description: The email address or username of the user.
          example: johndoe@example.com
          type: string
        accessGroupIds:
          description: A list of access group ids associated with the user.
          items:
            description: A list of access group ids associated with the user.
            format: int32
            type: integer
          type: array
        currentSsoProvider:
          description: "The current Single Sign-On provider for the user, if any."
          example: None
          type: string
        customerTree:
          description: The hierarchy of customer units associated with the user.
          items:
            description: The hierarchy of customer units associated with the user.
            type: string
          type: array
        fullName:
          description: The full name of the user.
          example: John Doe
          type: string
        roleIds:
          description: A list of role ids assigned to the user.
          items:
            description: A list of role ids assigned to the user.
            format: int32
            type: integer
          type: array
        twoFactorEnabled:
          description: Indicates if two-factor authentication is enabled for the user.
          example: false
          type: boolean
      type: object
    QueryResponseUserRole:
      example:
        totalItems: 5
        pageNumber: 0
        data:
        - roleId: 1001
          roleName: Default Dashboard Role
          roleDescription: "Grants users read-only access to Dashboards, and the ability\
            \ to view service details."
          _extra:
            cloneable: true
            readonly: true
            usernames:
            - User 1 One
            - User Server Room
            - User 2 Two
            permissions:
            - DASHBOARDS_VIEW
            - SERVICE_VIEW
        - roleId: 1001
          roleName: Default Dashboard Role
          roleDescription: "Grants users read-only access to Dashboards, and the ability\
            \ to view service details."
          _extra:
            cloneable: true
            readonly: true
            usernames:
            - User 1 One
            - User Server Room
            - User 2 Two
            permissions:
            - DASHBOARDS_VIEW
            - SERVICE_VIEW
        _links:
          previousPage: previousPage
          firstPage: firstPage
          lastPage: lastPage
          nextPage: nextPage
        totalPages: 5
        _warning: _warning
        pageSize: 6
        itemCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserRole'
          type: array
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        itemCount:
          format: int32
          type: integer
        totalItems:
          format: int32
          type: integer
        totalPages:
          format: int32
          type: integer
        _links:
          $ref: '#/components/schemas/Links'
        _warning:
          type: string
      required:
      - _links
      type: object
    UserRole:
      description: |
        Represents the response for a user role. It provides details about the role id, role name and description,
         as well as extra information.
      example:
        roleId: 1001
        roleName: Default Dashboard Role
        roleDescription: "Grants users read-only access to Dashboards, and the ability\
          \ to view service details."
        _extra:
          cloneable: true
          readonly: true
          usernames:
          - User 1 One
          - User Server Room
          - User 2 Two
          permissions:
          - DASHBOARDS_VIEW
          - SERVICE_VIEW
      properties:
        roleId:
          description: The user role id.
          format: int32
          type: integer
        roleName:
          description: The user role name.
          type: string
        roleDescription:
          description: The description of a user role.
          type: string
        _extra:
          additionalProperties:
            description: The extra information.
            type: object
          description: The extra information.
          type: object
      type: object
    UserRoleDetails:
      description: |
        Represents the response for a user role. It provides details about the role id, role name and description,
         as well as extra information.
      example:
        roleId: 1001
        orgUnitId: 1
        roleName: Default Dashboard Role
        roleDescription: "Grants users read-only access to Dashboards, and the ability\
          \ to view service details."
        userIds:
        - 111333683
        - 444512252
        - 1210074793
        _extra:
          cloneable: true
          readonly: true
          permissions:
          - DASHBOARDS_VIEW
          - SERVICE_VIEW
      properties:
        roleId:
          description: The user role id.
          format: int32
          type: integer
        orgUnitId:
          description: The organization unit id where the role is defined.
          format: int32
          type: integer
        roleName:
          description: The user role name.
          type: string
        roleDescription:
          description: The description of a user role.
          type: string
        userIds:
          description: The user ids assigned to role.
          items:
            description: The user ids assigned to role.
            format: int32
            type: integer
          type: array
        _extra:
          additionalProperties:
            description: Extra information.
            type: object
          description: Extra information.
          type: object
      type: object
    UserRoleDetailsResponse:
      example:
        data:
          roleId: 1001
          orgUnitId: 1
          roleName: Default Dashboard Role
          roleDescription: "Grants users read-only access to Dashboards, and the ability\
            \ to view service details."
          userIds:
          - 111333683
          - 444512252
          - 1210074793
          _extra:
            cloneable: true
            readonly: true
            permissions:
            - DASHBOARDS_VIEW
            - SERVICE_VIEW
        _links:
          key: _links
      properties:
        data:
          $ref: '#/components/schemas/UserRoleDetails'
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    DefaultCustomProperty:
      description: The default custom property (DEVICE/ORGANIZATION_UNIT).
      example:
        propertyId: 1624300373
        propertyName: ORG_01-0620
        orgUnitId: 11090
        level: ORGANIZATION_UNIT
        propertyType: TEXT
        value: ORG_01-0620 VALUE
        selectedOrgUnitIds:
        - 11089
        - 11090
      properties:
        propertyId:
          description: The property id.
          format: int32
          type: integer
        propertyName:
          description: The property name.
          type: string
        orgUnitId:
          description: The ID of the 'Home' organization unit at which the custom
            property was created.
          format: int32
          type: integer
        level:
          description: The property level (ORGANIZATION_UNIT/DEVICE).
          enum:
          - DEVICE
          - ORGANIZATION_UNIT
          - ORGANIZATION_UNIT
          - DEVICE
          type: string
        propertyType:
          description: The property type.
          enum:
          - HTML_LINK
          - TEXT
          - DATE
          - ENUMERATED
          - PASSWORD
          - HTML_LINK
          - TEXT
          - DATE
          - ENUMERATED
          - PASSWORD
          type: string
        propagationType:
          description: The way how the property value changes are propagated down
            the organization unit hierarchy.
          enum:
          - NO_PROPAGATION
          - SERVICE_ORGANIZATION_ONLY
          - SERVICE_ORGANIZATION_AND_CUSTOMER_AND_SITE
          - SERVICE_ORGANIZATION_AND_CUSTOMER
          - SERVICE_ORGANIZATION_AND_SITE
          - CUSTOMER_AND_SITE
          - CUSTOMER_ONLY
          - SITE_ONLY
          - NO_PROPAGATION
          - SERVICE_ORGANIZATION_ONLY
          - SERVICE_AND_ORGANIZATION
          - SERVICE_AND_ORGANIZATION_AND_DEVICE
          - SERVICE_AND_DEVICE
          - ORGANIZATION_AND_DEVICE
          - ORGANIZATION_ONLY
          - DEVICE_ONLY
          type: string
        defaultValue:
          description: The default value of the property.
          type: string
        selectedOrgUnitIds:
          description: The entire list of organization unit IDs to which the custom
            property is applicable. The list includes the 'Home' organization unit
            and all its child organization units.
          items:
            description: The entire list of organization unit IDs to which the custom
              property is applicable. The list includes the 'Home' organization unit
              and all its child organization units.
            format: int32
            type: integer
          type: array
        enumeratedValueList:
          description: "The list of allowed values for the property, if the property\
            \ type is ENUMERATED."
          items:
            description: "The list of allowed values for the property, if the property\
              \ type is ENUMERATED."
            type: string
          type: array
      type: object
    ListResponse:
      example:
        totalItems: 0
        data:
        - "{}"
        - "{}"
      properties:
        data:
          items:
            type: object
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    Device:
      description: Response for list of devices.
      example:
        deviceId: 1299930810
        uri: 52.141.77.215
        remoteControlUri: ""
        sourceUri: ""
        longName: WS_01-12091-001001
        deviceClass: Workstations - Windows
        description: Network device discovered using Asset Discovery - 1299930810
        isProbe: false
        osId: winnt
        supportedOs: Microsoft Windows 7 Ultimate x64 Edition
        discoveredName: WS_01-12091-001001
        deviceClassLabel: Workstations - Windows
        supportedOsLabel: Microsoft Windows 7 Ultimate x64 Edition
        lastLoggedInUser: "-"
        stillLoggedIn: ""
        licenseMode: Professional
        orgUnitId: 12091
        soId: 12091
        soName: Service_Organization
        customerId: 12091
        customerName: PERF_ALL_DEVICES_CUST_01
        siteId: 12091
        siteName: PERF_ALL_DEVICES_SITE_0001
        lastApplianceCheckinTime: Field not present OR 2024-10-15T08:47:50.823Z
      properties:
        deviceId:
          format: int32
          type: integer
        uri:
          type: string
        remoteControlUri:
          type: string
        sourceUri:
          type: string
        longName:
          type: string
        deviceClass:
          type: string
        description:
          type: string
        isProbe:
          type: boolean
        osId:
          type: string
        supportedOs:
          type: string
        discoveredName:
          type: string
        deviceClassLabel:
          type: string
        supportedOsLabel:
          type: string
        lastLoggedInUser:
          type: string
        stillLoggedIn:
          type: string
        licenseMode:
          type: string
        orgUnitId:
          format: int32
          type: integer
        soId:
          format: int32
          type: integer
        soName:
          type: string
        customerId:
          format: int32
          type: integer
        customerName:
          type: string
        siteId:
          format: int32
          type: integer
        siteName:
          type: string
        lastApplianceCheckinTime:
          description: Last check-in time of the agent. This field is optional and
            will only be included if the value is non-null.
          example: 2024-10-15T08:47:50.823Z
          type: string
      type: object
    QueryResponseDevice:
      example:
        totalItems: 5
        pageNumber: 0
        data:
        - deviceId: 1299930810
          uri: 52.141.77.215
          remoteControlUri: ""
          sourceUri: ""
          longName: WS_01-12091-001001
          deviceClass: Workstations - Windows
          description: Network device discovered using Asset Discovery - 1299930810
          isProbe: false
          osId: winnt
          supportedOs: Microsoft Windows 7 Ultimate x64 Edition
          discoveredName: WS_01-12091-001001
          deviceClassLabel: Workstations - Windows
          supportedOsLabel: Microsoft Windows 7 Ultimate x64 Edition
          lastLoggedInUser: "-"
          stillLoggedIn: ""
          licenseMode: Professional
          orgUnitId: 12091
          soId: 12091
          soName: Service_Organization
          customerId: 12091
          customerName: PERF_ALL_DEVICES_CUST_01
          siteId: 12091
          siteName: PERF_ALL_DEVICES_SITE_0001
          lastApplianceCheckinTime: Field not present OR 2024-10-15T08:47:50.823Z
        - deviceId: 1299930810
          uri: 52.141.77.215
          remoteControlUri: ""
          sourceUri: ""
          longName: WS_01-12091-001001
          deviceClass: Workstations - Windows
          description: Network device discovered using Asset Discovery - 1299930810
          isProbe: false
          osId: winnt
          supportedOs: Microsoft Windows 7 Ultimate x64 Edition
          discoveredName: WS_01-12091-001001
          deviceClassLabel: Workstations - Windows
          supportedOsLabel: Microsoft Windows 7 Ultimate x64 Edition
          lastLoggedInUser: "-"
          stillLoggedIn: ""
          licenseMode: Professional
          orgUnitId: 12091
          soId: 12091
          soName: Service_Organization
          customerId: 12091
          customerName: PERF_ALL_DEVICES_CUST_01
          siteId: 12091
          siteName: PERF_ALL_DEVICES_SITE_0001
          lastApplianceCheckinTime: Field not present OR 2024-10-15T08:47:50.823Z
        _links:
          previousPage: previousPage
          firstPage: firstPage
          lastPage: lastPage
          nextPage: nextPage
        totalPages: 5
        _warning: _warning
        pageSize: 6
        itemCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/Device'
          type: array
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        itemCount:
          format: int32
          type: integer
        totalItems:
          format: int32
          type: integer
        totalPages:
          format: int32
          type: integer
        _links:
          $ref: '#/components/schemas/Links'
        _warning:
          type: string
      required:
      - _links
      type: object
    ListResponseOrganizationCustomProperty:
      example:
        totalItems: 0
        data:
        - propertyId: 1624300373
          propertyName: ORG_01-0620
          propertyType: TEXT
          value: ORG_01-0620 VALUE
        - propertyId: 1624300373
          propertyName: ORG_01-0620
          propertyType: TEXT
          value: ORG_01-0620 VALUE
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrganizationCustomProperty'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    OrganizationCustomProperty:
      description: The custom property (DEVICE/ORGANIZATION_UNIT).
      example:
        propertyId: 1624300373
        propertyName: ORG_01-0620
        propertyType: TEXT
        value: ORG_01-0620 VALUE
      properties:
        propertyId:
          description: The property id.
          format: int32
          readOnly: true
          type: integer
        propertyName:
          description: The property name.
          readOnly: true
          type: string
        propertyType:
          description: The property type.
          enum:
          - HTML_LINK
          - TEXT
          - DATE
          - ENUMERATED
          - PASSWORD
          - HTML_LINK
          - TEXT
          - DATE
          - ENUMERATED
          - PASSWORD
          readOnly: true
          type: string
        value:
          description: The property value.
          type: string
        enumeratedValueList:
          description: The possible values of the property.
          items:
            description: The possible values of the property.
            readOnly: true
            type: string
          readOnly: true
          type: array
      type: object
    DefaultDeviceCustomProperty:
      description: Response for default custom property.
      example: |2
            {
                "propertyId": 1815170007,
                "customerId": 100,
                "propertyName": "customer1-NCC-4407-dateProperty1",
                "propertyLevel": "DEVICE",
                "propertyType": "DATE",
                "defaultValue": "1707886800000",
                "deviceClasses": [
                    "Laptop - Windows",
                 ],
                "supportedOs": [
                    "Windows 10",
                    "Windows 7",
                ]
            }
      properties:
        propertyId:
          format: int32
          type: integer
        customerId:
          format: int32
          type: integer
        propertyName:
          type: string
        propertyLevel:
          type: string
        propertyType:
          enum:
          - HTML_LINK
          - TEXT
          - DATE
          - ENUMERATED
          - PASSWORD
          type: string
        value:
          type: string
        enumeratedValues:
          items:
            $ref: '#/components/schemas/DeviceCustomPropertyEnumeratedValue'
          type: array
        deviceClasses:
          items:
            type: string
          type: array
        supportedOs:
          items:
            type: string
          type: array
      type: object
    DeviceCustomPropertyEnumeratedValue:
      properties:
        customerId:
          format: int32
          type: integer
        customerName:
          type: string
        customerType:
          format: int32
          type: integer
        propertyId:
          format: int32
          type: integer
        propertyValue:
          type: string
      type: object
    DeviceCustomPropertyResponse:
      description: Response for device custom property information.
      example: |2
            {
                data: {
                    "propertyId": 1815170007,
                    "customerId": 100,
                    "propertyName": "customer1-NCC-4407-dateProperty1",
                    "propertyLevel": "DEVICE",
                    "propertyType": "DATE",
                    "defaultValue": "1707886800000",
                    "deviceClasses": [
                        "Laptop - Windows",
                     ],
                    "supportedOs": [
                        "Windows 10",
                        "Windows 7"
                    ]
                }
            }
      properties:
        data:
          $ref: '#/components/schemas/DefaultDeviceCustomProperty'
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    ActiveIssue:
      description: Represents a response containing an active issue.
      example:
        orgUnitId: 102
        deviceId: 576589254
        notificationState: 5
        serviceId: 496
        serviceName: Windows UAC Status
        serviceType: AMP
        taskId: 2096172314
        serviceItemId: 36893
        _extra:
          numberOfAcknowledgedNotification: null
          avdUpdateServerEnabled: false
          licenseMode: Professional
          psaIntegrationDisabled: false
          avdProtectionEnabled: true
          remoteControllable: true
          reactiveSupported: true
          partOfNotification: false
          remoteControlState: disconnected
          acknowledgedBy: ""
          avdVersion: ""
          deviceName: NCC-9996
          ticketCreationInProgress: null
          transitionTime: 2024-04-02T16:15:33.432Z
          integrationStatuses: []
          lwtEdrStatus: ""
          patchManagementEnabled: false
          backupManagerProfile: ""
          mspBackupProfile: ""
          securityManagerProfile: ""
          notificationAcknowledgmentInProgress: false
          taskIdent: ""
          microsoftPatchManagementEnabled: false
          deviceClassValue: null
          backupManagerVersion: ""
          securityManagerVersion: ""
          remoteControlConnected: null
          monitoringDisabled: false
          numberOfActiveNotification: 0
          psaIntegrationExists: false
          lwtEdrEnabled: false
          mspBackupVersion: ""
          thirdPartyPatchManagementEnabled: false
          probe: false
          reactiveEnabled: true
          netPathEnabled: false
          deviceClassLabel: null
          mspBackupEnabled: false
          port: ""
          diskEncryptionEnabled: false
          customerTree:
          - System
          - Service_Organization
          - Customer 2
          securityManagerEnabled: false
          psaTicketDetails: ""
          soCustomerID: 50
          maintenanceWindowEnabled: false
          backupManagerEnabled: false
          patchManagementProfile: ""
      properties:
        orgUnitId:
          description: The organization unit id.
          example: 100
          format: int32
          type: integer
        deviceId:
          description: The device id.
          example: 576589254
          format: int32
          type: integer
        notificationState:
          description: The notification state.
          example: 1
          format: int32
          type: integer
        serviceId:
          description: The service id.
          example: 496
          format: int32
          type: integer
        serviceName:
          description: The service name.
          example: Windows UAC Status
          type: string
        serviceType:
          description: The service type.
          example: AMP
          type: string
        taskId:
          description: The task id.
          example: 2096172314
          format: int32
          type: integer
        serviceItemId:
          description: The service item id.
          example: 36893
          format: int32
          type: integer
        _extra:
          additionalProperties:
            description: The _extra information.
            example: |2
                  {
                  "soCustomerID": 50,
                  "deviceName": "NCC-9992",
                  ...
                  }
            type: object
          description: The _extra information.
          example: |2
                {
                "soCustomerID": 50,
                "deviceName": "NCC-9992",
                ...
                }
          type: object
      type: object
    QueryResponseActiveIssue:
      example:
        totalItems: 5
        pageNumber: 0
        data:
        - orgUnitId: 102
          deviceId: 576589254
          notificationState: 5
          serviceId: 496
          serviceName: Windows UAC Status
          serviceType: AMP
          taskId: 2096172314
          serviceItemId: 36893
          _extra:
            numberOfAcknowledgedNotification: null
            avdUpdateServerEnabled: false
            licenseMode: Professional
            psaIntegrationDisabled: false
            avdProtectionEnabled: true
            remoteControllable: true
            reactiveSupported: true
            partOfNotification: false
            remoteControlState: disconnected
            acknowledgedBy: ""
            avdVersion: ""
            deviceName: NCC-9996
            ticketCreationInProgress: null
            transitionTime: 2024-04-02T16:15:33.432Z
            integrationStatuses: []
            lwtEdrStatus: ""
            patchManagementEnabled: false
            backupManagerProfile: ""
            mspBackupProfile: ""
            securityManagerProfile: ""
            notificationAcknowledgmentInProgress: false
            taskIdent: ""
            microsoftPatchManagementEnabled: false
            deviceClassValue: null
            backupManagerVersion: ""
            securityManagerVersion: ""
            remoteControlConnected: null
            monitoringDisabled: false
            numberOfActiveNotification: 0
            psaIntegrationExists: false
            lwtEdrEnabled: false
            mspBackupVersion: ""
            thirdPartyPatchManagementEnabled: false
            probe: false
            reactiveEnabled: true
            netPathEnabled: false
            deviceClassLabel: null
            mspBackupEnabled: false
            port: ""
            diskEncryptionEnabled: false
            customerTree:
            - System
            - Service_Organization
            - Customer 2
            securityManagerEnabled: false
            psaTicketDetails: ""
            soCustomerID: 50
            maintenanceWindowEnabled: false
            backupManagerEnabled: false
            patchManagementProfile: ""
        - orgUnitId: 102
          deviceId: 576589254
          notificationState: 5
          serviceId: 496
          serviceName: Windows UAC Status
          serviceType: AMP
          taskId: 2096172314
          serviceItemId: 36893
          _extra:
            numberOfAcknowledgedNotification: null
            avdUpdateServerEnabled: false
            licenseMode: Professional
            psaIntegrationDisabled: false
            avdProtectionEnabled: true
            remoteControllable: true
            reactiveSupported: true
            partOfNotification: false
            remoteControlState: disconnected
            acknowledgedBy: ""
            avdVersion: ""
            deviceName: NCC-9996
            ticketCreationInProgress: null
            transitionTime: 2024-04-02T16:15:33.432Z
            integrationStatuses: []
            lwtEdrStatus: ""
            patchManagementEnabled: false
            backupManagerProfile: ""
            mspBackupProfile: ""
            securityManagerProfile: ""
            notificationAcknowledgmentInProgress: false
            taskIdent: ""
            microsoftPatchManagementEnabled: false
            deviceClassValue: null
            backupManagerVersion: ""
            securityManagerVersion: ""
            remoteControlConnected: null
            monitoringDisabled: false
            numberOfActiveNotification: 0
            psaIntegrationExists: false
            lwtEdrEnabled: false
            mspBackupVersion: ""
            thirdPartyPatchManagementEnabled: false
            probe: false
            reactiveEnabled: true
            netPathEnabled: false
            deviceClassLabel: null
            mspBackupEnabled: false
            port: ""
            diskEncryptionEnabled: false
            customerTree:
            - System
            - Service_Organization
            - Customer 2
            securityManagerEnabled: false
            psaTicketDetails: ""
            soCustomerID: 50
            maintenanceWindowEnabled: false
            backupManagerEnabled: false
            patchManagementProfile: ""
        _links:
          previousPage: previousPage
          firstPage: firstPage
          lastPage: lastPage
          nextPage: nextPage
        totalPages: 5
        _warning: _warning
        pageSize: 6
        itemCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/ActiveIssue'
          type: array
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        itemCount:
          format: int32
          type: integer
        totalItems:
          format: int32
          type: integer
        totalPages:
          format: int32
          type: integer
        _links:
          $ref: '#/components/schemas/Links'
        _warning:
          type: string
      required:
      - _links
      type: object
    QueryResponse:
      example:
        totalItems: 5
        pageNumber: 0
        data:
        - "{}"
        - "{}"
        _links:
          previousPage: previousPage
          firstPage: firstPage
          lastPage: lastPage
          nextPage: nextPage
        totalPages: 5
        _warning: _warning
        pageSize: 6
        itemCount: 1
      properties:
        data:
          items:
            type: object
          type: array
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        itemCount:
          format: int32
          type: integer
        totalItems:
          format: int32
          type: integer
        totalPages:
          format: int32
          type: integer
        _links:
          $ref: '#/components/schemas/Links'
        _warning:
          type: string
      required:
      - _links
      type: object
    Health:
      description: Response for the server health.
      example:
        currentTime: 2023-09-27T15:43:16.793Z
      properties:
        currentTime:
          format: date-time
          type: string
      type: object
    DeviceResponse:
      example:
        data:
          deviceId: 1299930810
          uri: 52.141.77.215
          remoteControlUri: ""
          sourceUri: ""
          longName: WS_01-12091-001001
          deviceClass: Workstations - Windows
          description: Network device discovered using Asset Discovery - 1299930810
          isProbe: false
          osId: winnt
          supportedOs: Microsoft Windows 7 Ultimate x64 Edition
          discoveredName: WS_01-12091-001001
          deviceClassLabel: Workstations - Windows
          supportedOsLabel: Microsoft Windows 7 Ultimate x64 Edition
          lastLoggedInUser: "-"
          stillLoggedIn: ""
          licenseMode: Professional
          orgUnitId: 12091
          soId: 12091
          soName: Service_Organization
          customerId: 12091
          customerName: PERF_ALL_DEVICES_CUST_01
          siteId: 12091
          siteName: PERF_ALL_DEVICES_SITE_0001
          lastApplianceCheckinTime: Field not present OR 2024-10-15T08:47:50.823Z
        _links:
          key: _links
      properties:
        data:
          $ref: '#/components/schemas/Device'
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    DeviceServiceMonitoringStatus:
      description: Response for Device Service Monitoring Status information.
      example:
      - taskId: 27446324
        serviceId: 496
        timeToStale: 195
        taskNote: "Added by service template [ Workstations - Windows ]"
        taskIdent: ""
        stateStatus: Disconnected
        lastUpdate: null
        lastDataId: null
        createdOn: null
        moduleName: Windows UAC Status
        serviceItemId: 31109
        lastScanTime: 2024-02-28 15:25:05.939 -0500
        isManagedTask: true
        transitionTime: 2024-02-28 15:40:42.407
      - taskId: 27446329
        serviceId: 486
        timeToStale: 105
        taskNote: "Added by service template [ Workstations - Windows ]"
        taskIdent: ""
        stateStatus: Connected
        lastUpdate: null
        lastDataId: null
        createdOn: null
        moduleName: Windows UAC Status
        serviceItemId: 31119
        lastScanTime: 2024-02-28 15:25:05.939 -0500
        isManagedTask: true
        transitionTime: 2024-02-28 15:40:42.407
      properties:
        taskId:
          format: int32
          type: integer
        serviceId:
          format: int32
          type: integer
        timeToStale:
          format: int32
          type: integer
        taskNote:
          type: string
        taskIdent:
          type: string
        stateStatus:
          type: string
        lastUpdate:
          type: string
        lastDataId:
          format: int32
          type: integer
        createdOn:
          type: string
        moduleName:
          type: string
        serviceItemId:
          format: int32
          type: integer
        lastScanTime:
          type: string
        isManagedTask:
          type: boolean
        transitionTime:
          type: string
        applianceId:
          format: int32
          type: integer
        applianceName:
          type: string
      type: object
    ListResponseDeviceServiceMonitoringStatus:
      example:
        totalItems: 0
        data:
        - - taskId: 27446324
            serviceId: 496
            timeToStale: 195
            taskNote: "Added by service template [ Workstations - Windows ]"
            taskIdent: ""
            stateStatus: Disconnected
            lastUpdate: null
            lastDataId: null
            createdOn: null
            moduleName: Windows UAC Status
            serviceItemId: 31109
            lastScanTime: 2024-02-28 15:25:05.939 -0500
            isManagedTask: true
            transitionTime: 2024-02-28 15:40:42.407
          - taskId: 27446329
            serviceId: 486
            timeToStale: 105
            taskNote: "Added by service template [ Workstations - Windows ]"
            taskIdent: ""
            stateStatus: Connected
            lastUpdate: null
            lastDataId: null
            createdOn: null
            moduleName: Windows UAC Status
            serviceItemId: 31119
            lastScanTime: 2024-02-28 15:25:05.939 -0500
            isManagedTask: true
            transitionTime: 2024-02-28 15:40:42.407
        - - taskId: 27446324
            serviceId: 496
            timeToStale: 195
            taskNote: "Added by service template [ Workstations - Windows ]"
            taskIdent: ""
            stateStatus: Disconnected
            lastUpdate: null
            lastDataId: null
            createdOn: null
            moduleName: Windows UAC Status
            serviceItemId: 31109
            lastScanTime: 2024-02-28 15:25:05.939 -0500
            isManagedTask: true
            transitionTime: 2024-02-28 15:40:42.407
          - taskId: 27446329
            serviceId: 486
            timeToStale: 105
            taskNote: "Added by service template [ Workstations - Windows ]"
            taskIdent: ""
            stateStatus: Connected
            lastUpdate: null
            lastDataId: null
            createdOn: null
            moduleName: Windows UAC Status
            serviceItemId: 31119
            lastScanTime: 2024-02-28 15:25:05.939 -0500
            isManagedTask: true
            transitionTime: 2024-02-28 15:40:42.407
      properties:
        data:
          items:
            $ref: '#/components/schemas/DeviceServiceMonitoringStatus'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    ListResponseTaskStatusResponse:
      example:
        totalItems: 6
        data:
        - taskName: taskName
          taskId: 0
          status: status
        - taskName: taskName
          taskId: 0
          status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/TaskStatusResponse'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    TaskStatusResponse:
      example:
        taskName: taskName
        taskId: 0
        status: status
      properties:
        taskId:
          format: int32
          type: integer
        taskName:
          type: string
        status:
          type: string
      type: object
    ListResponseMaintenanceWindowGetResponse:
      example:
        totalItems: 0
        data:
        - scheduleID: 123456789
          userName: admin
          lastUpdated: 2021-09-01T00:00:00Z
          applicableAction:
          - type: Patch
            actions:
            - Key: reboot
              Value: null
          name: Test Maintenance Window
          type: action
          cron: "0 0 0 ? 2 1,4 *"
          duration: 60
          enabled: "true"
          maxDowntime: "0"
          rebootMethod: ""
          rebootDelay: 0
          downTimeOnAction: false
          userMessageEnabled: false
          userMessage: null
          messageSenderEnabled: false
          messageSender: null
          preserveStateEnabled: false
          ruleID: 123456789
          ruleName: Test Rule
        - scheduleID: 123456789
          userName: admin
          lastUpdated: 2021-09-01T00:00:00Z
          applicableAction:
          - type: Patch
            actions:
            - Key: reboot
              Value: null
          name: Test Maintenance Window
          type: action
          cron: "0 0 0 ? 2 1,4 *"
          duration: 60
          enabled: "true"
          maxDowntime: "0"
          rebootMethod: ""
          rebootDelay: 0
          downTimeOnAction: false
          userMessageEnabled: false
          userMessage: null
          messageSenderEnabled: false
          messageSender: null
          preserveStateEnabled: false
          ruleID: 123456789
          ruleName: Test Rule
      properties:
        data:
          items:
            $ref: '#/components/schemas/MaintenanceWindowGetResponse'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    MaintenanceWindowGetResponse:
      description: Response for list of Maintenance Windows.
      example:
        scheduleID: 123456789
        userName: admin
        lastUpdated: 2021-09-01T00:00:00Z
        applicableAction:
        - type: Patch
          actions:
          - Key: reboot
            Value: null
        name: Test Maintenance Window
        type: action
        cron: "0 0 0 ? 2 1,4 *"
        duration: 60
        enabled: "true"
        maxDowntime: "0"
        rebootMethod: ""
        rebootDelay: 0
        downTimeOnAction: false
        userMessageEnabled: false
        userMessage: null
        messageSenderEnabled: false
        messageSender: null
        preserveStateEnabled: false
        ruleID: 123456789
        ruleName: Test Rule
      properties:
        scheduleID:
          format: int32
          type: integer
        userName:
          type: string
        lastUpdated:
          type: string
        applicableAction:
          items:
            $ref: '#/components/schemas/ApplicableAction'
          type: array
        name:
          type: string
        type:
          type: string
        cron:
          type: string
        duration:
          format: int32
          type: integer
        enabled:
          type: boolean
        maxDowntime:
          format: int32
          type: integer
        rebootMethod:
          type: string
        rebootDelay:
          format: int32
          type: integer
        downtimeOnAction:
          type: boolean
        userMessageEnabled:
          type: boolean
        userMessage:
          type: string
        messageSenderEnabled:
          type: boolean
        messageSender:
          type: string
        preserveStateEnabled:
          type: boolean
        ruleID:
          format: int32
          type: integer
        ruleName:
          type: string
      type: object
    DeviceCustomProperty:
      description: The custom property (DEVICE/ORGANIZATION_UNIT).
      example:
        propertyId: 1624300373
        propertyName: ORG_01-0620
        propertyType: TEXT
        value: ORG_01-0620 VALUE
      properties:
        propertyId:
          description: The property id.
          format: int32
          readOnly: true
          type: integer
        propertyName:
          description: The property name.
          readOnly: true
          type: string
        propertyType:
          description: The property type.
          enum:
          - HTML_LINK
          - TEXT
          - DATE
          - ENUMERATED
          - PASSWORD
          - HTML_LINK
          - TEXT
          - DATE
          - ENUMERATED
          - PASSWORD
          readOnly: true
          type: string
        value:
          description: The property value.
          type: string
        enumeratedValueList:
          description: The possible value of the property.
          items:
            description: The possible value of the property.
            readOnly: true
            type: string
          readOnly: true
          type: array
      type: object
    ListResponseDeviceCustomProperty:
      example:
        totalItems: 0
        data:
        - propertyId: 1624300373
          propertyName: ORG_01-0620
          propertyType: TEXT
          value: ORG_01-0620 VALUE
        - propertyId: 1624300373
          propertyName: ORG_01-0620
          propertyType: TEXT
          value: ORG_01-0620 VALUE
      properties:
        data:
          items:
            $ref: '#/components/schemas/DeviceCustomProperty'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    DeviceAssetInfoResponse:
      description: |
        Represents a device asset info response.
        It contains the asset information about the device in the form of following categories :
        1. os
        2. application
        3. computersystem
        4. networkadapter
        5. device
        6. processor

        The above categories are classified as "default" categories and the fields under these categories are considered
          as "default" fields.

        The default fields are considered definitive and are expected to be present at all times.
        If a default field is missing,
          it indicates that information about that specific field for the device is unavailable.

        The "_extra" part of the response contains all available asset categories and fields.

        The extra categories and fields provide supplementary information about the device asset.
        These details are optional and may or may not be available in the future.
        Additionally, certain fields from the "_extra" categories or fields might transition to become default categories
        or fields in the future.
      example:
        os:
          reportedos: Microsoft Windows 10 Enterprise
          osarchitecture: 64-bit
          version: 10.0.19045
        application:
          list:
          - _index: 0
            displayname: Microsoft Visual C++ 2022 X64 Additional Runtime - 14.36.32532
        computersystem:
          serialnumber: None
          netbiosname: NCC-0625
          model: "VMware7,1"
          totalphysicalmemory: "2147483648"
          manufacturer: "VMware, Inc."
        networkadapter:
          list:
          - ipaddress: 10.120.207.82
            _index: 0
            dnsserver: "10.120.0.10, 10.220.0.10, 10.100.0.10"
            description: vmxnet3 Ethernet Adapter
            dhcpserver: null
            macaddress: 00:50:56:87:23:5f
            gateway: 10.120.207.1
        device:
          longname: NCC-0625
          deleted: "false"
          lastlogin: 2024-01-11 12:07:47.908 -0500
          deviceclass: Workstations - Windows
          deviceid: "1065910111"
          uri: 10.120.207.82
        processor:
          name: Intel(R) Xeon(R) Gold 6252 CPU @ 2.10GHz
          numberofcores: "1"
          numberofcpus: "1"
        _extra:
          osfeatures:
            list:
            - _index: 0
              pvalue: 5.1.19041.1
              pkey: PowerShellVersion
            - _index: 1
              pvalue: Microsoft.PowerShell.Diagnostics
              pkey: PowerShell-SnapIn-0
          motherboard:
            product: 440BX Desktop Reference Platform
            serialnumber: None
            biosversion: VMW71.00V.21100432.B64.2301110304
            version: None
            manufacturer: Intel Corporation
      properties:
        data:
          additionalProperties:
            additionalProperties:
              description: Asset Information about the device.
              type: object
            description: Asset Information about the device.
            type: object
          description: Asset Information about the device.
          type: object
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    AssetLifecycleDetails:
      description: Asset Lifecycle details
      example:
        warrantyExpiryDate: 2022-12-31
        leaseExpiryDate: 2022-12-31
        expectedReplacementDate: 2022-12-31
        purchaseDate: 2022-12-31
        cost: 0
        location: location
        assetTag: assetTag
        description: description
        updateWarrantyError: updateWarrantyError
      properties:
        warrantyExpiryDate:
          type: string
        leaseExpiryDate:
          type: string
        expectedReplacementDate:
          type: string
        purchaseDate:
          type: string
        cost:
          type: number
        location:
          type: string
        assetTag:
          type: string
        description:
          type: string
        updateWarrantyError:
          type: string
      type: object
    Filter:
      description: Response for list of device filters.
      example:
        filterId: 75
        filterName: Laptops - Windows
        description: Laptop devices running Windows.
      properties:
        filterId:
          type: string
        filterName:
          type: string
        description:
          type: string
      type: object
    ListResponseFilter:
      example:
        totalItems: 0
        data:
        - filterId: 75
          filterName: Laptops - Windows
          description: Laptop devices running Windows.
        - filterId: 75
          filterName: Laptops - Windows
          description: Laptop devices running Windows.
      properties:
        data:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        totalItems:
          format: int32
          type: integer
      type: object
    ApplianceTaskInformation:
      description: The appliance task information
      example:
        scanTime: 2024-05-23 11:28:09.55
        state: NORMAL
        errorMessage: ""
        serviceDetails:
        - scanDetailId: 3262200
          detailName: agent_chkinintvl
          description: Agent check-in interval (sec)
          detailValue: "32"
          state: NORMAL
          monitoringType: Normal
          thresholds:
          - state: NORMAL
            lowValue: 0
            highValue: 300
          - state: WARNING
            lowValue: 300
            highValue: 600
          - state: FAILED
            lowValue: 600
            highValue: 4294967295
      properties:
        scanTime:
          type: string
        state:
          enum:
          - NO_STATE
          - NO_DATA
          - STALE
          - NORMAL
          - WARNING
          - FAILED
          - MISCONFIGURED
          - DISCONNECTED
          - DISABLED
          type: string
        errorMessage:
          type: string
        serviceDetails:
          items:
            $ref: '#/components/schemas/ApplianceTaskStatusDetail'
          type: array
      type: object
    ApplianceTaskStatusDetail:
      properties:
        scanDetailId:
          format: int32
          type: integer
        detailName:
          type: string
        description:
          type: string
        detailValue:
          type: string
        state:
          enum:
          - NO_STATE
          - NO_DATA
          - STALE
          - NORMAL
          - WARNING
          - FAILED
          - MISCONFIGURED
          - DISCONNECTED
          - DISABLED
          type: string
        monitoringType:
          type: string
        thresholds:
          items:
            $ref: '#/components/schemas/ApplianceTaskThresholdBasic'
          type: array
      type: object
    ApplianceTaskThresholdBasic:
      properties:
        state:
          enum:
          - NO_STATE
          - NO_DATA
          - STALE
          - NORMAL
          - WARNING
          - FAILED
          - MISCONFIGURED
          - DISCONNECTED
          - DISABLED
          type: string
        lowValue:
          type: integer
        highValue:
          type: integer
      type: object
    AccessGroupDetails:
      description: |
        Represents the response for fetching details of a specific access group.
        Contains information about the access group, including its name, type, associated devices and users,
        description. Properties such as whether it's read-only or cloneable, are encapsulated under the "_extra" field.
      example:
        groupId: 1549311915
        orgUnitId: 1
        groupName: group name
        groupDescription: description
        orgUnitIds:
        - 1
        - 50
        - 102
        - 100
        - 101
        - 103
        deviceIds: []
        userIds: []
        autoIncludeNewOrgUnits: false
        _extra:
          accessgroupapplication: null
          grouptype: ORG_UNIT
          readonly: "false"
          customerid: "1"
          customers: "[1, 50, 102, 100, 101, 103]"
          cloneable: null
          users: "[]"
      properties:
        groupId:
          description: The id of the access group.
          format: int32
          type: integer
        orgUnitId:
          description: The id of the organizational unit where the access group is
            created.
          format: int32
          type: integer
        groupName:
          description: The name of the access group.
          type: string
        groupDescription:
          description: The description of the access group.
          type: string
        orgUnitIds:
          description: List of organizational unit ids where this access group is
            applied. It is populated when the group type is by organization unit.
          items:
            description: List of organizational unit ids where this access group is
              applied. It is populated when the group type is by organization unit.
            format: int32
            type: integer
          type: array
        deviceIds:
          description: List of device ids associated with the access group. It is
            populated when the group type is by device.
          items:
            description: List of device ids associated with the access group. It is
              populated when the group type is by device.
            format: int32
            type: integer
          type: array
        userIds:
          description: List of user ids associated with the access group.
          items:
            description: List of user ids associated with the access group.
            format: int32
            type: integer
          type: array
        autoIncludeNewOrgUnits:
          description: Indicates whether new organization units will be automatically
            associated to the access group.
          type: boolean
        _extra:
          additionalProperties:
            description: Contains all the details about the access group under the
              '_extra' field.
            type: object
          description: Contains all the details about the access group under the '_extra'
            field.
          type: object
      type: object
    AccessGroupGetResponse:
      example:
        data:
          groupId: 1549311915
          orgUnitId: 1
          groupName: group name
          groupDescription: description
          orgUnitIds:
          - 1
          - 50
          - 102
          - 100
          - 101
          - 103
          deviceIds: []
          userIds: []
          autoIncludeNewOrgUnits: false
          _extra:
            accessgroupapplication: null
            grouptype: ORG_UNIT
            readonly: "false"
            customerid: "1"
            customers: "[1, 50, 102, 100, 101, 103]"
            cloneable: null
            users: "[]"
        _links:
          key: _links
      properties:
        data:
          $ref: '#/components/schemas/AccessGroupDetails'
        _links:
          additionalProperties:
            description: Links to related endpoints.
            type: string
          description: Links to related endpoints.
          type: object
      type: object
    MaintenanceWindowsDeleteRequest:
      description: Represents a request to delete Maintenance Windows.
      example:
        scheduleIds:
        - 123456789
        - 987654321
        - 250124567
      properties:
        scheduleIds:
          description: Schedule Ids for windows which are to be deleted
          items:
            description: Schedule Ids for windows which are to be deleted
            format: int32
            type: integer
          type: array
      required:
      - scheduleIds
      type: object
  securitySchemes:
    API-Access Token:
      bearerFormat: JWT
      description: Access token for API. You can get the token by authenticating.
        See "POST - /api/auth/authenticate".
      scheme: bearer
      type: http
    N-central User-API Token (JWT):
      bearerFormat: JWT
      description: N-central User-API Token (JWT). You can get this token from the
        N-central UI.
      scheme: bearer
      type: http
