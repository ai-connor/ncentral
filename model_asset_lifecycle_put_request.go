/*
N-central API-Service

<h3>API Access</h3> <p>In order to use the API-Service endpoints, ensure the following prerequisites are met:</p> <ol>     <li>User is created in N-central with appropriate permissions and configuration         (roles, access groups, MFA disabled, 2FA disabled).</li>     <li>API access is set up in N-central by having a JWT         (Json Web Token, referred to as \"N-central User-API Token\") generated,         acting as the permanent secret solely used for fetching access and refresh tokens.</li> </ol> <p>To access the API-Service endpoints, the JWT must first be exchanged with access and refresh tokens:</p> <ul>     <li>         <p><b>Using Swagger UI:</b></p>         <ol>             <li>Click on the <b>\"Authorize\"</b> button and enter the JWT into the value field                 under <b>\"N-central User-API Token (JWT)\"</b>, then navigate to                 the <code>/api/auth/authenticate</code> endpoint, click <b>\"Try it out\"</b>                 and then <b>\"Execute\"</b>.                 <br/>The new “Access Token” and “Refresh Token” fields will be available in the “Server Response”                 section below. Note that the expiry is 3600s ( 1h ). Copy the value of the access token.</li>             <li>Click on the <b>lock icon</b> to the right of any endpoint                 (or the <b>\"Authorize\"</b> button at the top), enter the access token in the                 <b>\"API-Access Token\"</b> field and click <b>\"Authorize\"</b>.</li>             <li>To call an API-Service endpoint, navigate to it, click <b>\"Try it out\"</b> button and             then <b>\"Execute\"</b>. If the steps above were successful, the access token is included in requests             automatically.</li>         </ol>     </li>     <li>         <p><b>Using a different HTTP client:</b></p>         <ol>             <li>Call the <code>/api/auth/authenticate</code> endpoint.                 The JWT token must be specified under the <code>Authorization</code> header,                 in the form <code>Bearer &lt;YOUR_JWT&gt;\"</code>.                 <br/>The access and refresh tokens are present in the response.</li>             <li>When calling API-Service endpoints, make sure to specify the <b>access token</b> in             the <code>Authorization</code> header as <code>Bearer &lt;ACCESS_TOKEN&gt;</code>.</li>         </ol>     </li> </ul> <h3>API Pagination & Sorting</h3> <p>Certain API-Service query endpoints support pagination and sorting through the use of query parameters.</p> <p><b>Pagination query parameters:</b></p> <ul>     <li>pageSize: number between 1 and 1000 specifying how many items to return for each page (if available).         If unspecified, the default is 50.</li>     <li>pageNumber: number specifying what page of data to retrieve, starting from 1 as the first page.         If unspecified, the default is 1.</li> </ul> <p>A paginated response contains several related fields, such as pageSize, pageNumber, itemCount, totalItems,     totalPages, _links (first, last, previous and next pages) and _warning (containing any warning messages,     if present).</p> <p><b>Sorting query parameters:</b></p> <ul>     <li>sortBy: the name of the field to sort the results by. If unspecified, no sorting is applied.</li>     <li>sortOrder: the case insensitive sorting direction supporting ASC/ASCENDING/NATURAL and         DESC/DESCENDING/REVERSE. If unspecified, the default is ASC.</li> </ul> <h3>API Rate Limiting</h3> <p>The API-Service endpoints are rate limited to ensure the stability, availability and performance of     the overall system.</p> <p>Upon reaching such a rate limit, the endpoints return HTTP Status 429 - Too Many Requests.</p> <p>The system will accept further requests once existing in-flight requests are completed.</p> 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncentral

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AssetLifecyclePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetLifecyclePutRequest{}

// AssetLifecyclePutRequest Asset Lifecycle details
type AssetLifecyclePutRequest struct {
	WarrantyExpiryDate string `json:"warrantyExpiryDate" validate:"regexp=(\\\\d{4}-\\\\d{2}-\\\\d{2}( \\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d{1,9})?)?)?"`
	LeaseExpiryDate string `json:"leaseExpiryDate" validate:"regexp=(\\\\d{4}-\\\\d{2}-\\\\d{2}( \\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d{1,9})?)?)?"`
	ExpectedReplacementDate string `json:"expectedReplacementDate" validate:"regexp=(\\\\d{4}-\\\\d{2}-\\\\d{2}( \\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d{1,9})?)?)?"`
	PurchaseDate string `json:"purchaseDate" validate:"regexp=(\\\\d{4}-\\\\d{2}-\\\\d{2}( \\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d{1,9})?)?)?"`
	Cost float32 `json:"cost"`
	Location string `json:"location"`
	AssetTag string `json:"assetTag"`
	Description string `json:"description"`
	// This field is Read Only
	UpdateWarrantyError *string `json:"updateWarrantyError,omitempty"`
	AllNull *bool `json:"allNull,omitempty"`
}

type _AssetLifecyclePutRequest AssetLifecyclePutRequest

// NewAssetLifecyclePutRequest instantiates a new AssetLifecyclePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetLifecyclePutRequest(warrantyExpiryDate string, leaseExpiryDate string, expectedReplacementDate string, purchaseDate string, cost float32, location string, assetTag string, description string) *AssetLifecyclePutRequest {
	this := AssetLifecyclePutRequest{}
	this.WarrantyExpiryDate = warrantyExpiryDate
	this.LeaseExpiryDate = leaseExpiryDate
	this.ExpectedReplacementDate = expectedReplacementDate
	this.PurchaseDate = purchaseDate
	this.Cost = cost
	this.Location = location
	this.AssetTag = assetTag
	this.Description = description
	return &this
}

// NewAssetLifecyclePutRequestWithDefaults instantiates a new AssetLifecyclePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetLifecyclePutRequestWithDefaults() *AssetLifecyclePutRequest {
	this := AssetLifecyclePutRequest{}
	return &this
}

// GetWarrantyExpiryDate returns the WarrantyExpiryDate field value
func (o *AssetLifecyclePutRequest) GetWarrantyExpiryDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WarrantyExpiryDate
}

// GetWarrantyExpiryDateOk returns a tuple with the WarrantyExpiryDate field value
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetWarrantyExpiryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarrantyExpiryDate, true
}

// SetWarrantyExpiryDate sets field value
func (o *AssetLifecyclePutRequest) SetWarrantyExpiryDate(v string) {
	o.WarrantyExpiryDate = v
}

// GetLeaseExpiryDate returns the LeaseExpiryDate field value
func (o *AssetLifecyclePutRequest) GetLeaseExpiryDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LeaseExpiryDate
}

// GetLeaseExpiryDateOk returns a tuple with the LeaseExpiryDate field value
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetLeaseExpiryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LeaseExpiryDate, true
}

// SetLeaseExpiryDate sets field value
func (o *AssetLifecyclePutRequest) SetLeaseExpiryDate(v string) {
	o.LeaseExpiryDate = v
}

// GetExpectedReplacementDate returns the ExpectedReplacementDate field value
func (o *AssetLifecyclePutRequest) GetExpectedReplacementDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpectedReplacementDate
}

// GetExpectedReplacementDateOk returns a tuple with the ExpectedReplacementDate field value
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetExpectedReplacementDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpectedReplacementDate, true
}

// SetExpectedReplacementDate sets field value
func (o *AssetLifecyclePutRequest) SetExpectedReplacementDate(v string) {
	o.ExpectedReplacementDate = v
}

// GetPurchaseDate returns the PurchaseDate field value
func (o *AssetLifecyclePutRequest) GetPurchaseDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PurchaseDate
}

// GetPurchaseDateOk returns a tuple with the PurchaseDate field value
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetPurchaseDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchaseDate, true
}

// SetPurchaseDate sets field value
func (o *AssetLifecyclePutRequest) SetPurchaseDate(v string) {
	o.PurchaseDate = v
}

// GetCost returns the Cost field value
func (o *AssetLifecyclePutRequest) GetCost() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Cost
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetCostOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cost, true
}

// SetCost sets field value
func (o *AssetLifecyclePutRequest) SetCost(v float32) {
	o.Cost = v
}

// GetLocation returns the Location field value
func (o *AssetLifecyclePutRequest) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *AssetLifecyclePutRequest) SetLocation(v string) {
	o.Location = v
}

// GetAssetTag returns the AssetTag field value
func (o *AssetLifecyclePutRequest) GetAssetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetTag
}

// GetAssetTagOk returns a tuple with the AssetTag field value
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetAssetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetTag, true
}

// SetAssetTag sets field value
func (o *AssetLifecyclePutRequest) SetAssetTag(v string) {
	o.AssetTag = v
}

// GetDescription returns the Description field value
func (o *AssetLifecyclePutRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AssetLifecyclePutRequest) SetDescription(v string) {
	o.Description = v
}

// GetUpdateWarrantyError returns the UpdateWarrantyError field value if set, zero value otherwise.
func (o *AssetLifecyclePutRequest) GetUpdateWarrantyError() string {
	if o == nil || IsNil(o.UpdateWarrantyError) {
		var ret string
		return ret
	}
	return *o.UpdateWarrantyError
}

// GetUpdateWarrantyErrorOk returns a tuple with the UpdateWarrantyError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetUpdateWarrantyErrorOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateWarrantyError) {
		return nil, false
	}
	return o.UpdateWarrantyError, true
}

// HasUpdateWarrantyError returns a boolean if a field has been set.
func (o *AssetLifecyclePutRequest) HasUpdateWarrantyError() bool {
	if o != nil && !IsNil(o.UpdateWarrantyError) {
		return true
	}

	return false
}

// SetUpdateWarrantyError gets a reference to the given string and assigns it to the UpdateWarrantyError field.
func (o *AssetLifecyclePutRequest) SetUpdateWarrantyError(v string) {
	o.UpdateWarrantyError = &v
}

// GetAllNull returns the AllNull field value if set, zero value otherwise.
func (o *AssetLifecyclePutRequest) GetAllNull() bool {
	if o == nil || IsNil(o.AllNull) {
		var ret bool
		return ret
	}
	return *o.AllNull
}

// GetAllNullOk returns a tuple with the AllNull field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetLifecyclePutRequest) GetAllNullOk() (*bool, bool) {
	if o == nil || IsNil(o.AllNull) {
		return nil, false
	}
	return o.AllNull, true
}

// HasAllNull returns a boolean if a field has been set.
func (o *AssetLifecyclePutRequest) HasAllNull() bool {
	if o != nil && !IsNil(o.AllNull) {
		return true
	}

	return false
}

// SetAllNull gets a reference to the given bool and assigns it to the AllNull field.
func (o *AssetLifecyclePutRequest) SetAllNull(v bool) {
	o.AllNull = &v
}

func (o AssetLifecyclePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetLifecyclePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["warrantyExpiryDate"] = o.WarrantyExpiryDate
	toSerialize["leaseExpiryDate"] = o.LeaseExpiryDate
	toSerialize["expectedReplacementDate"] = o.ExpectedReplacementDate
	toSerialize["purchaseDate"] = o.PurchaseDate
	toSerialize["cost"] = o.Cost
	toSerialize["location"] = o.Location
	toSerialize["assetTag"] = o.AssetTag
	toSerialize["description"] = o.Description
	if !IsNil(o.UpdateWarrantyError) {
		toSerialize["updateWarrantyError"] = o.UpdateWarrantyError
	}
	if !IsNil(o.AllNull) {
		toSerialize["allNull"] = o.AllNull
	}
	return toSerialize, nil
}

func (o *AssetLifecyclePutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"warrantyExpiryDate",
		"leaseExpiryDate",
		"expectedReplacementDate",
		"purchaseDate",
		"cost",
		"location",
		"assetTag",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssetLifecyclePutRequest := _AssetLifecyclePutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAssetLifecyclePutRequest)

	if err != nil {
		return err
	}

	*o = AssetLifecyclePutRequest(varAssetLifecyclePutRequest)

	return err
}

type NullableAssetLifecyclePutRequest struct {
	value *AssetLifecyclePutRequest
	isSet bool
}

func (v NullableAssetLifecyclePutRequest) Get() *AssetLifecyclePutRequest {
	return v.value
}

func (v *NullableAssetLifecyclePutRequest) Set(val *AssetLifecyclePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetLifecyclePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetLifecyclePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetLifecyclePutRequest(val *AssetLifecyclePutRequest) *NullableAssetLifecyclePutRequest {
	return &NullableAssetLifecyclePutRequest{value: val, isSet: true}
}

func (v NullableAssetLifecyclePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetLifecyclePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


