/*
N-central API-Service

<h3>API Access</h3> <p>In order to use the API-Service endpoints, ensure the following prerequisites are met:</p> <ol>     <li>User is created in N-central with appropriate permissions and configuration         (roles, access groups, MFA disabled, 2FA disabled).</li>     <li>API access is set up in N-central by having a JWT         (Json Web Token, referred to as \"N-central User-API Token\") generated,         acting as the permanent secret solely used for fetching access and refresh tokens.</li> </ol> <p>To access the API-Service endpoints, the JWT must first be exchanged with access and refresh tokens:</p> <ul>     <li>         <p><b>Using Swagger UI:</b></p>         <ol>             <li>Click on the <b>\"Authorize\"</b> button and enter the JWT into the value field                 under <b>\"N-central User-API Token (JWT)\"</b>, then navigate to                 the <code>/api/auth/authenticate</code> endpoint, click <b>\"Try it out\"</b>                 and then <b>\"Execute\"</b>.                 <br/>The new “Access Token” and “Refresh Token” fields will be available in the “Server Response”                 section below. Note that the expiry is 3600s ( 1h ). Copy the value of the access token.</li>             <li>Click on the <b>lock icon</b> to the right of any endpoint                 (or the <b>\"Authorize\"</b> button at the top), enter the access token in the                 <b>\"API-Access Token\"</b> field and click <b>\"Authorize\"</b>.</li>             <li>To call an API-Service endpoint, navigate to it, click <b>\"Try it out\"</b> button and             then <b>\"Execute\"</b>. If the steps above were successful, the access token is included in requests             automatically.</li>         </ol>     </li>     <li>         <p><b>Using a different HTTP client:</b></p>         <ol>             <li>Call the <code>/api/auth/authenticate</code> endpoint.                 The JWT token must be specified under the <code>Authorization</code> header,                 in the form <code>Bearer &lt;YOUR_JWT&gt;\"</code>.                 <br/>The access and refresh tokens are present in the response.</li>             <li>When calling API-Service endpoints, make sure to specify the <b>access token</b> in             the <code>Authorization</code> header as <code>Bearer &lt;ACCESS_TOKEN&gt;</code>.</li>         </ol>     </li> </ul> <h3>API Pagination & Sorting</h3> <p>Certain API-Service query endpoints support pagination and sorting through the use of query parameters.</p> <p><b>Pagination query parameters:</b></p> <ul>     <li>pageSize: number between 1 and 1000 specifying how many items to return for each page (if available).         If unspecified, the default is 50.</li>     <li>pageNumber: number specifying what page of data to retrieve, starting from 1 as the first page.         If unspecified, the default is 1.</li> </ul> <p>A paginated response contains several related fields, such as pageSize, pageNumber, itemCount, totalItems,     totalPages, _links (first, last, previous and next pages) and _warning (containing any warning messages,     if present).</p> <p><b>Sorting query parameters:</b></p> <ul>     <li>sortBy: the name of the field to sort the results by. If unspecified, no sorting is applied.</li>     <li>sortOrder: the case insensitive sorting direction supporting ASC/ASCENDING/NATURAL and         DESC/DESCENDING/REVERSE. If unspecified, the default is ASC.</li> </ul> <h3>API Rate Limiting</h3> <p>The API-Service endpoints are rate limited to ensure the stability, availability and performance of     the overall system.</p> <p>Upon reaching such a rate limit, the endpoints return HTTP Status 429 - Too Many Requests.</p> <p>The system will accept further requests once existing in-flight requests are completed.</p> 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncentral

import (
	"encoding/json"
)

// checks if the DeviceCustomPropertyEnumeratedValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceCustomPropertyEnumeratedValue{}

// DeviceCustomPropertyEnumeratedValue struct for DeviceCustomPropertyEnumeratedValue
type DeviceCustomPropertyEnumeratedValue struct {
	CustomerId *int32 `json:"customerId,omitempty"`
	CustomerName *string `json:"customerName,omitempty"`
	CustomerType *int32 `json:"customerType,omitempty"`
	PropertyId *int32 `json:"propertyId,omitempty"`
	PropertyValue *string `json:"propertyValue,omitempty"`
}

// NewDeviceCustomPropertyEnumeratedValue instantiates a new DeviceCustomPropertyEnumeratedValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceCustomPropertyEnumeratedValue() *DeviceCustomPropertyEnumeratedValue {
	this := DeviceCustomPropertyEnumeratedValue{}
	return &this
}

// NewDeviceCustomPropertyEnumeratedValueWithDefaults instantiates a new DeviceCustomPropertyEnumeratedValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceCustomPropertyEnumeratedValueWithDefaults() *DeviceCustomPropertyEnumeratedValue {
	this := DeviceCustomPropertyEnumeratedValue{}
	return &this
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *DeviceCustomPropertyEnumeratedValue) GetCustomerId() int32 {
	if o == nil || IsNil(o.CustomerId) {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCustomPropertyEnumeratedValue) GetCustomerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *DeviceCustomPropertyEnumeratedValue) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *DeviceCustomPropertyEnumeratedValue) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetCustomerName returns the CustomerName field value if set, zero value otherwise.
func (o *DeviceCustomPropertyEnumeratedValue) GetCustomerName() string {
	if o == nil || IsNil(o.CustomerName) {
		var ret string
		return ret
	}
	return *o.CustomerName
}

// GetCustomerNameOk returns a tuple with the CustomerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCustomPropertyEnumeratedValue) GetCustomerNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerName) {
		return nil, false
	}
	return o.CustomerName, true
}

// HasCustomerName returns a boolean if a field has been set.
func (o *DeviceCustomPropertyEnumeratedValue) HasCustomerName() bool {
	if o != nil && !IsNil(o.CustomerName) {
		return true
	}

	return false
}

// SetCustomerName gets a reference to the given string and assigns it to the CustomerName field.
func (o *DeviceCustomPropertyEnumeratedValue) SetCustomerName(v string) {
	o.CustomerName = &v
}

// GetCustomerType returns the CustomerType field value if set, zero value otherwise.
func (o *DeviceCustomPropertyEnumeratedValue) GetCustomerType() int32 {
	if o == nil || IsNil(o.CustomerType) {
		var ret int32
		return ret
	}
	return *o.CustomerType
}

// GetCustomerTypeOk returns a tuple with the CustomerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCustomPropertyEnumeratedValue) GetCustomerTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerType) {
		return nil, false
	}
	return o.CustomerType, true
}

// HasCustomerType returns a boolean if a field has been set.
func (o *DeviceCustomPropertyEnumeratedValue) HasCustomerType() bool {
	if o != nil && !IsNil(o.CustomerType) {
		return true
	}

	return false
}

// SetCustomerType gets a reference to the given int32 and assigns it to the CustomerType field.
func (o *DeviceCustomPropertyEnumeratedValue) SetCustomerType(v int32) {
	o.CustomerType = &v
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *DeviceCustomPropertyEnumeratedValue) GetPropertyId() int32 {
	if o == nil || IsNil(o.PropertyId) {
		var ret int32
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCustomPropertyEnumeratedValue) GetPropertyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PropertyId) {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *DeviceCustomPropertyEnumeratedValue) HasPropertyId() bool {
	if o != nil && !IsNil(o.PropertyId) {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given int32 and assigns it to the PropertyId field.
func (o *DeviceCustomPropertyEnumeratedValue) SetPropertyId(v int32) {
	o.PropertyId = &v
}

// GetPropertyValue returns the PropertyValue field value if set, zero value otherwise.
func (o *DeviceCustomPropertyEnumeratedValue) GetPropertyValue() string {
	if o == nil || IsNil(o.PropertyValue) {
		var ret string
		return ret
	}
	return *o.PropertyValue
}

// GetPropertyValueOk returns a tuple with the PropertyValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCustomPropertyEnumeratedValue) GetPropertyValueOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyValue) {
		return nil, false
	}
	return o.PropertyValue, true
}

// HasPropertyValue returns a boolean if a field has been set.
func (o *DeviceCustomPropertyEnumeratedValue) HasPropertyValue() bool {
	if o != nil && !IsNil(o.PropertyValue) {
		return true
	}

	return false
}

// SetPropertyValue gets a reference to the given string and assigns it to the PropertyValue field.
func (o *DeviceCustomPropertyEnumeratedValue) SetPropertyValue(v string) {
	o.PropertyValue = &v
}

func (o DeviceCustomPropertyEnumeratedValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceCustomPropertyEnumeratedValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.CustomerName) {
		toSerialize["customerName"] = o.CustomerName
	}
	if !IsNil(o.CustomerType) {
		toSerialize["customerType"] = o.CustomerType
	}
	if !IsNil(o.PropertyId) {
		toSerialize["propertyId"] = o.PropertyId
	}
	if !IsNil(o.PropertyValue) {
		toSerialize["propertyValue"] = o.PropertyValue
	}
	return toSerialize, nil
}

type NullableDeviceCustomPropertyEnumeratedValue struct {
	value *DeviceCustomPropertyEnumeratedValue
	isSet bool
}

func (v NullableDeviceCustomPropertyEnumeratedValue) Get() *DeviceCustomPropertyEnumeratedValue {
	return v.value
}

func (v *NullableDeviceCustomPropertyEnumeratedValue) Set(val *DeviceCustomPropertyEnumeratedValue) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceCustomPropertyEnumeratedValue) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceCustomPropertyEnumeratedValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceCustomPropertyEnumeratedValue(val *DeviceCustomPropertyEnumeratedValue) *NullableDeviceCustomPropertyEnumeratedValue {
	return &NullableDeviceCustomPropertyEnumeratedValue{value: val, isSet: true}
}

func (v NullableDeviceCustomPropertyEnumeratedValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceCustomPropertyEnumeratedValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


