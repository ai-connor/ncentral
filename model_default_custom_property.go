/*
N-central API-Service

<h3>API Access</h3> <p>In order to use the API-Service endpoints, ensure the following prerequisites are met:</p> <ol>     <li>User is created in N-central with appropriate permissions and configuration         (roles, access groups, MFA disabled, 2FA disabled).</li>     <li>API access is set up in N-central by having a JWT         (Json Web Token, referred to as \"N-central User-API Token\") generated,         acting as the permanent secret solely used for fetching access and refresh tokens.</li> </ol> <p>To access the API-Service endpoints, the JWT must first be exchanged with access and refresh tokens:</p> <ul>     <li>         <p><b>Using Swagger UI:</b></p>         <ol>             <li>Click on the <b>\"Authorize\"</b> button and enter the JWT into the value field                 under <b>\"N-central User-API Token (JWT)\"</b>, then navigate to                 the <code>/api/auth/authenticate</code> endpoint, click <b>\"Try it out\"</b>                 and then <b>\"Execute\"</b>.                 <br/>The new “Access Token” and “Refresh Token” fields will be available in the “Server Response”                 section below. Note that the expiry is 3600s ( 1h ). Copy the value of the access token.</li>             <li>Click on the <b>lock icon</b> to the right of any endpoint                 (or the <b>\"Authorize\"</b> button at the top), enter the access token in the                 <b>\"API-Access Token\"</b> field and click <b>\"Authorize\"</b>.</li>             <li>To call an API-Service endpoint, navigate to it, click <b>\"Try it out\"</b> button and             then <b>\"Execute\"</b>. If the steps above were successful, the access token is included in requests             automatically.</li>         </ol>     </li>     <li>         <p><b>Using a different HTTP client:</b></p>         <ol>             <li>Call the <code>/api/auth/authenticate</code> endpoint.                 The JWT token must be specified under the <code>Authorization</code> header,                 in the form <code>Bearer &lt;YOUR_JWT&gt;\"</code>.                 <br/>The access and refresh tokens are present in the response.</li>             <li>When calling API-Service endpoints, make sure to specify the <b>access token</b> in             the <code>Authorization</code> header as <code>Bearer &lt;ACCESS_TOKEN&gt;</code>.</li>         </ol>     </li> </ul> <h3>API Pagination & Sorting</h3> <p>Certain API-Service query endpoints support pagination and sorting through the use of query parameters.</p> <p><b>Pagination query parameters:</b></p> <ul>     <li>pageSize: number between 1 and 1000 specifying how many items to return for each page (if available).         If unspecified, the default is 50.</li>     <li>pageNumber: number specifying what page of data to retrieve, starting from 1 as the first page.         If unspecified, the default is 1.</li> </ul> <p>A paginated response contains several related fields, such as pageSize, pageNumber, itemCount, totalItems,     totalPages, _links (first, last, previous and next pages) and _warning (containing any warning messages,     if present).</p> <p><b>Sorting query parameters:</b></p> <ul>     <li>sortBy: the name of the field to sort the results by. If unspecified, no sorting is applied.</li>     <li>sortOrder: the case insensitive sorting direction supporting ASC/ASCENDING/NATURAL and         DESC/DESCENDING/REVERSE. If unspecified, the default is ASC.</li> </ul> <h3>API Rate Limiting</h3> <p>The API-Service endpoints are rate limited to ensure the stability, availability and performance of     the overall system.</p> <p>Upon reaching such a rate limit, the endpoints return HTTP Status 429 - Too Many Requests.</p> <p>The system will accept further requests once existing in-flight requests are completed.</p> 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncentral

import (
	"encoding/json"
)

// checks if the DefaultCustomProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultCustomProperty{}

// DefaultCustomProperty The default custom property (DEVICE/ORGANIZATION_UNIT).
type DefaultCustomProperty struct {
	// The property id.
	PropertyId *int32 `json:"propertyId,omitempty"`
	// The property name.
	PropertyName *string `json:"propertyName,omitempty"`
	// The ID of the 'Home' organization unit at which the custom property was created.
	OrgUnitId *int32 `json:"orgUnitId,omitempty"`
	// The property level (ORGANIZATION_UNIT/DEVICE).
	Level *string `json:"level,omitempty"`
	// The property type.
	PropertyType *string `json:"propertyType,omitempty"`
	// The way how the property value changes are propagated down the organization unit hierarchy.
	PropagationType *string `json:"propagationType,omitempty"`
	// The default value of the property.
	DefaultValue *string `json:"defaultValue,omitempty"`
	// The entire list of organization unit IDs to which the custom property is applicable. The list includes the 'Home' organization unit and all its child organization units.
	SelectedOrgUnitIds []int32 `json:"selectedOrgUnitIds,omitempty"`
	// The list of allowed values for the property, if the property type is ENUMERATED.
	EnumeratedValueList []string `json:"enumeratedValueList,omitempty"`
}

// NewDefaultCustomProperty instantiates a new DefaultCustomProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultCustomProperty() *DefaultCustomProperty {
	this := DefaultCustomProperty{}
	return &this
}

// NewDefaultCustomPropertyWithDefaults instantiates a new DefaultCustomProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultCustomPropertyWithDefaults() *DefaultCustomProperty {
	this := DefaultCustomProperty{}
	return &this
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *DefaultCustomProperty) GetPropertyId() int32 {
	if o == nil || IsNil(o.PropertyId) {
		var ret int32
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultCustomProperty) GetPropertyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PropertyId) {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *DefaultCustomProperty) HasPropertyId() bool {
	if o != nil && !IsNil(o.PropertyId) {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given int32 and assigns it to the PropertyId field.
func (o *DefaultCustomProperty) SetPropertyId(v int32) {
	o.PropertyId = &v
}

// GetPropertyName returns the PropertyName field value if set, zero value otherwise.
func (o *DefaultCustomProperty) GetPropertyName() string {
	if o == nil || IsNil(o.PropertyName) {
		var ret string
		return ret
	}
	return *o.PropertyName
}

// GetPropertyNameOk returns a tuple with the PropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultCustomProperty) GetPropertyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyName) {
		return nil, false
	}
	return o.PropertyName, true
}

// HasPropertyName returns a boolean if a field has been set.
func (o *DefaultCustomProperty) HasPropertyName() bool {
	if o != nil && !IsNil(o.PropertyName) {
		return true
	}

	return false
}

// SetPropertyName gets a reference to the given string and assigns it to the PropertyName field.
func (o *DefaultCustomProperty) SetPropertyName(v string) {
	o.PropertyName = &v
}

// GetOrgUnitId returns the OrgUnitId field value if set, zero value otherwise.
func (o *DefaultCustomProperty) GetOrgUnitId() int32 {
	if o == nil || IsNil(o.OrgUnitId) {
		var ret int32
		return ret
	}
	return *o.OrgUnitId
}

// GetOrgUnitIdOk returns a tuple with the OrgUnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultCustomProperty) GetOrgUnitIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgUnitId) {
		return nil, false
	}
	return o.OrgUnitId, true
}

// HasOrgUnitId returns a boolean if a field has been set.
func (o *DefaultCustomProperty) HasOrgUnitId() bool {
	if o != nil && !IsNil(o.OrgUnitId) {
		return true
	}

	return false
}

// SetOrgUnitId gets a reference to the given int32 and assigns it to the OrgUnitId field.
func (o *DefaultCustomProperty) SetOrgUnitId(v int32) {
	o.OrgUnitId = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *DefaultCustomProperty) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultCustomProperty) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *DefaultCustomProperty) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *DefaultCustomProperty) SetLevel(v string) {
	o.Level = &v
}

// GetPropertyType returns the PropertyType field value if set, zero value otherwise.
func (o *DefaultCustomProperty) GetPropertyType() string {
	if o == nil || IsNil(o.PropertyType) {
		var ret string
		return ret
	}
	return *o.PropertyType
}

// GetPropertyTypeOk returns a tuple with the PropertyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultCustomProperty) GetPropertyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyType) {
		return nil, false
	}
	return o.PropertyType, true
}

// HasPropertyType returns a boolean if a field has been set.
func (o *DefaultCustomProperty) HasPropertyType() bool {
	if o != nil && !IsNil(o.PropertyType) {
		return true
	}

	return false
}

// SetPropertyType gets a reference to the given string and assigns it to the PropertyType field.
func (o *DefaultCustomProperty) SetPropertyType(v string) {
	o.PropertyType = &v
}

// GetPropagationType returns the PropagationType field value if set, zero value otherwise.
func (o *DefaultCustomProperty) GetPropagationType() string {
	if o == nil || IsNil(o.PropagationType) {
		var ret string
		return ret
	}
	return *o.PropagationType
}

// GetPropagationTypeOk returns a tuple with the PropagationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultCustomProperty) GetPropagationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PropagationType) {
		return nil, false
	}
	return o.PropagationType, true
}

// HasPropagationType returns a boolean if a field has been set.
func (o *DefaultCustomProperty) HasPropagationType() bool {
	if o != nil && !IsNil(o.PropagationType) {
		return true
	}

	return false
}

// SetPropagationType gets a reference to the given string and assigns it to the PropagationType field.
func (o *DefaultCustomProperty) SetPropagationType(v string) {
	o.PropagationType = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *DefaultCustomProperty) GetDefaultValue() string {
	if o == nil || IsNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultCustomProperty) GetDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *DefaultCustomProperty) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *DefaultCustomProperty) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetSelectedOrgUnitIds returns the SelectedOrgUnitIds field value if set, zero value otherwise.
func (o *DefaultCustomProperty) GetSelectedOrgUnitIds() []int32 {
	if o == nil || IsNil(o.SelectedOrgUnitIds) {
		var ret []int32
		return ret
	}
	return o.SelectedOrgUnitIds
}

// GetSelectedOrgUnitIdsOk returns a tuple with the SelectedOrgUnitIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultCustomProperty) GetSelectedOrgUnitIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.SelectedOrgUnitIds) {
		return nil, false
	}
	return o.SelectedOrgUnitIds, true
}

// HasSelectedOrgUnitIds returns a boolean if a field has been set.
func (o *DefaultCustomProperty) HasSelectedOrgUnitIds() bool {
	if o != nil && !IsNil(o.SelectedOrgUnitIds) {
		return true
	}

	return false
}

// SetSelectedOrgUnitIds gets a reference to the given []int32 and assigns it to the SelectedOrgUnitIds field.
func (o *DefaultCustomProperty) SetSelectedOrgUnitIds(v []int32) {
	o.SelectedOrgUnitIds = v
}

// GetEnumeratedValueList returns the EnumeratedValueList field value if set, zero value otherwise.
func (o *DefaultCustomProperty) GetEnumeratedValueList() []string {
	if o == nil || IsNil(o.EnumeratedValueList) {
		var ret []string
		return ret
	}
	return o.EnumeratedValueList
}

// GetEnumeratedValueListOk returns a tuple with the EnumeratedValueList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultCustomProperty) GetEnumeratedValueListOk() ([]string, bool) {
	if o == nil || IsNil(o.EnumeratedValueList) {
		return nil, false
	}
	return o.EnumeratedValueList, true
}

// HasEnumeratedValueList returns a boolean if a field has been set.
func (o *DefaultCustomProperty) HasEnumeratedValueList() bool {
	if o != nil && !IsNil(o.EnumeratedValueList) {
		return true
	}

	return false
}

// SetEnumeratedValueList gets a reference to the given []string and assigns it to the EnumeratedValueList field.
func (o *DefaultCustomProperty) SetEnumeratedValueList(v []string) {
	o.EnumeratedValueList = v
}

func (o DefaultCustomProperty) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultCustomProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PropertyId) {
		toSerialize["propertyId"] = o.PropertyId
	}
	if !IsNil(o.PropertyName) {
		toSerialize["propertyName"] = o.PropertyName
	}
	if !IsNil(o.OrgUnitId) {
		toSerialize["orgUnitId"] = o.OrgUnitId
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.PropertyType) {
		toSerialize["propertyType"] = o.PropertyType
	}
	if !IsNil(o.PropagationType) {
		toSerialize["propagationType"] = o.PropagationType
	}
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if !IsNil(o.SelectedOrgUnitIds) {
		toSerialize["selectedOrgUnitIds"] = o.SelectedOrgUnitIds
	}
	if !IsNil(o.EnumeratedValueList) {
		toSerialize["enumeratedValueList"] = o.EnumeratedValueList
	}
	return toSerialize, nil
}

type NullableDefaultCustomProperty struct {
	value *DefaultCustomProperty
	isSet bool
}

func (v NullableDefaultCustomProperty) Get() *DefaultCustomProperty {
	return v.value
}

func (v *NullableDefaultCustomProperty) Set(val *DefaultCustomProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultCustomProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultCustomProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultCustomProperty(val *DefaultCustomProperty) *NullableDefaultCustomProperty {
	return &NullableDefaultCustomProperty{value: val, isSet: true}
}

func (v NullableDefaultCustomProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultCustomProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


