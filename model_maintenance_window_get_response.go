/*
N-central API-Service

<h3>API Access</h3> <p>In order to use the API-Service endpoints, ensure the following prerequisites are met:</p> <ol>     <li>User is created in N-central with appropriate permissions and configuration         (roles, access groups, MFA disabled, 2FA disabled).</li>     <li>API access is set up in N-central by having a JWT         (Json Web Token, referred to as \"N-central User-API Token\") generated,         acting as the permanent secret solely used for fetching access and refresh tokens.</li> </ol> <p>To access the API-Service endpoints, the JWT must first be exchanged with access and refresh tokens:</p> <ul>     <li>         <p><b>Using Swagger UI:</b></p>         <ol>             <li>Click on the <b>\"Authorize\"</b> button and enter the JWT into the value field                 under <b>\"N-central User-API Token (JWT)\"</b>, then navigate to                 the <code>/api/auth/authenticate</code> endpoint, click <b>\"Try it out\"</b>                 and then <b>\"Execute\"</b>.                 <br/>The new “Access Token” and “Refresh Token” fields will be available in the “Server Response”                 section below. Note that the expiry is 3600s ( 1h ). Copy the value of the access token.</li>             <li>Click on the <b>lock icon</b> to the right of any endpoint                 (or the <b>\"Authorize\"</b> button at the top), enter the access token in the                 <b>\"API-Access Token\"</b> field and click <b>\"Authorize\"</b>.</li>             <li>To call an API-Service endpoint, navigate to it, click <b>\"Try it out\"</b> button and             then <b>\"Execute\"</b>. If the steps above were successful, the access token is included in requests             automatically.</li>         </ol>     </li>     <li>         <p><b>Using a different HTTP client:</b></p>         <ol>             <li>Call the <code>/api/auth/authenticate</code> endpoint.                 The JWT token must be specified under the <code>Authorization</code> header,                 in the form <code>Bearer &lt;YOUR_JWT&gt;\"</code>.                 <br/>The access and refresh tokens are present in the response.</li>             <li>When calling API-Service endpoints, make sure to specify the <b>access token</b> in             the <code>Authorization</code> header as <code>Bearer &lt;ACCESS_TOKEN&gt;</code>.</li>         </ol>     </li> </ul> <h3>API Pagination & Sorting</h3> <p>Certain API-Service query endpoints support pagination and sorting through the use of query parameters.</p> <p><b>Pagination query parameters:</b></p> <ul>     <li>pageSize: number between 1 and 1000 specifying how many items to return for each page (if available).         If unspecified, the default is 50.</li>     <li>pageNumber: number specifying what page of data to retrieve, starting from 1 as the first page.         If unspecified, the default is 1.</li> </ul> <p>A paginated response contains several related fields, such as pageSize, pageNumber, itemCount, totalItems,     totalPages, _links (first, last, previous and next pages) and _warning (containing any warning messages,     if present).</p> <p><b>Sorting query parameters:</b></p> <ul>     <li>sortBy: the name of the field to sort the results by. If unspecified, no sorting is applied.</li>     <li>sortOrder: the case insensitive sorting direction supporting ASC/ASCENDING/NATURAL and         DESC/DESCENDING/REVERSE. If unspecified, the default is ASC.</li> </ul> <h3>API Rate Limiting</h3> <p>The API-Service endpoints are rate limited to ensure the stability, availability and performance of     the overall system.</p> <p>Upon reaching such a rate limit, the endpoints return HTTP Status 429 - Too Many Requests.</p> <p>The system will accept further requests once existing in-flight requests are completed.</p> 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncentral

import (
	"encoding/json"
)

// checks if the MaintenanceWindowGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaintenanceWindowGetResponse{}

// MaintenanceWindowGetResponse Response for list of Maintenance Windows.
type MaintenanceWindowGetResponse struct {
	ScheduleID *int32 `json:"scheduleID,omitempty"`
	UserName *string `json:"userName,omitempty"`
	LastUpdated *string `json:"lastUpdated,omitempty"`
	ApplicableAction []ApplicableAction `json:"applicableAction,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Cron *string `json:"cron,omitempty"`
	Duration *int32 `json:"duration,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	MaxDowntime *int32 `json:"maxDowntime,omitempty"`
	RebootMethod *string `json:"rebootMethod,omitempty"`
	RebootDelay *int32 `json:"rebootDelay,omitempty"`
	DowntimeOnAction *bool `json:"downtimeOnAction,omitempty"`
	UserMessageEnabled *bool `json:"userMessageEnabled,omitempty"`
	UserMessage *string `json:"userMessage,omitempty"`
	MessageSenderEnabled *bool `json:"messageSenderEnabled,omitempty"`
	MessageSender *string `json:"messageSender,omitempty"`
	PreserveStateEnabled *bool `json:"preserveStateEnabled,omitempty"`
	RuleID *int32 `json:"ruleID,omitempty"`
	RuleName *string `json:"ruleName,omitempty"`
}

// NewMaintenanceWindowGetResponse instantiates a new MaintenanceWindowGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceWindowGetResponse() *MaintenanceWindowGetResponse {
	this := MaintenanceWindowGetResponse{}
	return &this
}

// NewMaintenanceWindowGetResponseWithDefaults instantiates a new MaintenanceWindowGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceWindowGetResponseWithDefaults() *MaintenanceWindowGetResponse {
	this := MaintenanceWindowGetResponse{}
	return &this
}

// GetScheduleID returns the ScheduleID field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetScheduleID() int32 {
	if o == nil || IsNil(o.ScheduleID) {
		var ret int32
		return ret
	}
	return *o.ScheduleID
}

// GetScheduleIDOk returns a tuple with the ScheduleID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetScheduleIDOk() (*int32, bool) {
	if o == nil || IsNil(o.ScheduleID) {
		return nil, false
	}
	return o.ScheduleID, true
}

// HasScheduleID returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasScheduleID() bool {
	if o != nil && !IsNil(o.ScheduleID) {
		return true
	}

	return false
}

// SetScheduleID gets a reference to the given int32 and assigns it to the ScheduleID field.
func (o *MaintenanceWindowGetResponse) SetScheduleID(v int32) {
	o.ScheduleID = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *MaintenanceWindowGetResponse) SetUserName(v string) {
	o.UserName = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetLastUpdated() string {
	if o == nil || IsNil(o.LastUpdated) {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *MaintenanceWindowGetResponse) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

// GetApplicableAction returns the ApplicableAction field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetApplicableAction() []ApplicableAction {
	if o == nil || IsNil(o.ApplicableAction) {
		var ret []ApplicableAction
		return ret
	}
	return o.ApplicableAction
}

// GetApplicableActionOk returns a tuple with the ApplicableAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetApplicableActionOk() ([]ApplicableAction, bool) {
	if o == nil || IsNil(o.ApplicableAction) {
		return nil, false
	}
	return o.ApplicableAction, true
}

// HasApplicableAction returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasApplicableAction() bool {
	if o != nil && !IsNil(o.ApplicableAction) {
		return true
	}

	return false
}

// SetApplicableAction gets a reference to the given []ApplicableAction and assigns it to the ApplicableAction field.
func (o *MaintenanceWindowGetResponse) SetApplicableAction(v []ApplicableAction) {
	o.ApplicableAction = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MaintenanceWindowGetResponse) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MaintenanceWindowGetResponse) SetType(v string) {
	o.Type = &v
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *MaintenanceWindowGetResponse) SetCron(v string) {
	o.Cron = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *MaintenanceWindowGetResponse) SetDuration(v int32) {
	o.Duration = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MaintenanceWindowGetResponse) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMaxDowntime returns the MaxDowntime field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetMaxDowntime() int32 {
	if o == nil || IsNil(o.MaxDowntime) {
		var ret int32
		return ret
	}
	return *o.MaxDowntime
}

// GetMaxDowntimeOk returns a tuple with the MaxDowntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetMaxDowntimeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDowntime) {
		return nil, false
	}
	return o.MaxDowntime, true
}

// HasMaxDowntime returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasMaxDowntime() bool {
	if o != nil && !IsNil(o.MaxDowntime) {
		return true
	}

	return false
}

// SetMaxDowntime gets a reference to the given int32 and assigns it to the MaxDowntime field.
func (o *MaintenanceWindowGetResponse) SetMaxDowntime(v int32) {
	o.MaxDowntime = &v
}

// GetRebootMethod returns the RebootMethod field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetRebootMethod() string {
	if o == nil || IsNil(o.RebootMethod) {
		var ret string
		return ret
	}
	return *o.RebootMethod
}

// GetRebootMethodOk returns a tuple with the RebootMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetRebootMethodOk() (*string, bool) {
	if o == nil || IsNil(o.RebootMethod) {
		return nil, false
	}
	return o.RebootMethod, true
}

// HasRebootMethod returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasRebootMethod() bool {
	if o != nil && !IsNil(o.RebootMethod) {
		return true
	}

	return false
}

// SetRebootMethod gets a reference to the given string and assigns it to the RebootMethod field.
func (o *MaintenanceWindowGetResponse) SetRebootMethod(v string) {
	o.RebootMethod = &v
}

// GetRebootDelay returns the RebootDelay field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetRebootDelay() int32 {
	if o == nil || IsNil(o.RebootDelay) {
		var ret int32
		return ret
	}
	return *o.RebootDelay
}

// GetRebootDelayOk returns a tuple with the RebootDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetRebootDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.RebootDelay) {
		return nil, false
	}
	return o.RebootDelay, true
}

// HasRebootDelay returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasRebootDelay() bool {
	if o != nil && !IsNil(o.RebootDelay) {
		return true
	}

	return false
}

// SetRebootDelay gets a reference to the given int32 and assigns it to the RebootDelay field.
func (o *MaintenanceWindowGetResponse) SetRebootDelay(v int32) {
	o.RebootDelay = &v
}

// GetDowntimeOnAction returns the DowntimeOnAction field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetDowntimeOnAction() bool {
	if o == nil || IsNil(o.DowntimeOnAction) {
		var ret bool
		return ret
	}
	return *o.DowntimeOnAction
}

// GetDowntimeOnActionOk returns a tuple with the DowntimeOnAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetDowntimeOnActionOk() (*bool, bool) {
	if o == nil || IsNil(o.DowntimeOnAction) {
		return nil, false
	}
	return o.DowntimeOnAction, true
}

// HasDowntimeOnAction returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasDowntimeOnAction() bool {
	if o != nil && !IsNil(o.DowntimeOnAction) {
		return true
	}

	return false
}

// SetDowntimeOnAction gets a reference to the given bool and assigns it to the DowntimeOnAction field.
func (o *MaintenanceWindowGetResponse) SetDowntimeOnAction(v bool) {
	o.DowntimeOnAction = &v
}

// GetUserMessageEnabled returns the UserMessageEnabled field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetUserMessageEnabled() bool {
	if o == nil || IsNil(o.UserMessageEnabled) {
		var ret bool
		return ret
	}
	return *o.UserMessageEnabled
}

// GetUserMessageEnabledOk returns a tuple with the UserMessageEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetUserMessageEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.UserMessageEnabled) {
		return nil, false
	}
	return o.UserMessageEnabled, true
}

// HasUserMessageEnabled returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasUserMessageEnabled() bool {
	if o != nil && !IsNil(o.UserMessageEnabled) {
		return true
	}

	return false
}

// SetUserMessageEnabled gets a reference to the given bool and assigns it to the UserMessageEnabled field.
func (o *MaintenanceWindowGetResponse) SetUserMessageEnabled(v bool) {
	o.UserMessageEnabled = &v
}

// GetUserMessage returns the UserMessage field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetUserMessage() string {
	if o == nil || IsNil(o.UserMessage) {
		var ret string
		return ret
	}
	return *o.UserMessage
}

// GetUserMessageOk returns a tuple with the UserMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetUserMessageOk() (*string, bool) {
	if o == nil || IsNil(o.UserMessage) {
		return nil, false
	}
	return o.UserMessage, true
}

// HasUserMessage returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasUserMessage() bool {
	if o != nil && !IsNil(o.UserMessage) {
		return true
	}

	return false
}

// SetUserMessage gets a reference to the given string and assigns it to the UserMessage field.
func (o *MaintenanceWindowGetResponse) SetUserMessage(v string) {
	o.UserMessage = &v
}

// GetMessageSenderEnabled returns the MessageSenderEnabled field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetMessageSenderEnabled() bool {
	if o == nil || IsNil(o.MessageSenderEnabled) {
		var ret bool
		return ret
	}
	return *o.MessageSenderEnabled
}

// GetMessageSenderEnabledOk returns a tuple with the MessageSenderEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetMessageSenderEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MessageSenderEnabled) {
		return nil, false
	}
	return o.MessageSenderEnabled, true
}

// HasMessageSenderEnabled returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasMessageSenderEnabled() bool {
	if o != nil && !IsNil(o.MessageSenderEnabled) {
		return true
	}

	return false
}

// SetMessageSenderEnabled gets a reference to the given bool and assigns it to the MessageSenderEnabled field.
func (o *MaintenanceWindowGetResponse) SetMessageSenderEnabled(v bool) {
	o.MessageSenderEnabled = &v
}

// GetMessageSender returns the MessageSender field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetMessageSender() string {
	if o == nil || IsNil(o.MessageSender) {
		var ret string
		return ret
	}
	return *o.MessageSender
}

// GetMessageSenderOk returns a tuple with the MessageSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetMessageSenderOk() (*string, bool) {
	if o == nil || IsNil(o.MessageSender) {
		return nil, false
	}
	return o.MessageSender, true
}

// HasMessageSender returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasMessageSender() bool {
	if o != nil && !IsNil(o.MessageSender) {
		return true
	}

	return false
}

// SetMessageSender gets a reference to the given string and assigns it to the MessageSender field.
func (o *MaintenanceWindowGetResponse) SetMessageSender(v string) {
	o.MessageSender = &v
}

// GetPreserveStateEnabled returns the PreserveStateEnabled field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetPreserveStateEnabled() bool {
	if o == nil || IsNil(o.PreserveStateEnabled) {
		var ret bool
		return ret
	}
	return *o.PreserveStateEnabled
}

// GetPreserveStateEnabledOk returns a tuple with the PreserveStateEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetPreserveStateEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PreserveStateEnabled) {
		return nil, false
	}
	return o.PreserveStateEnabled, true
}

// HasPreserveStateEnabled returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasPreserveStateEnabled() bool {
	if o != nil && !IsNil(o.PreserveStateEnabled) {
		return true
	}

	return false
}

// SetPreserveStateEnabled gets a reference to the given bool and assigns it to the PreserveStateEnabled field.
func (o *MaintenanceWindowGetResponse) SetPreserveStateEnabled(v bool) {
	o.PreserveStateEnabled = &v
}

// GetRuleID returns the RuleID field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetRuleID() int32 {
	if o == nil || IsNil(o.RuleID) {
		var ret int32
		return ret
	}
	return *o.RuleID
}

// GetRuleIDOk returns a tuple with the RuleID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetRuleIDOk() (*int32, bool) {
	if o == nil || IsNil(o.RuleID) {
		return nil, false
	}
	return o.RuleID, true
}

// HasRuleID returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasRuleID() bool {
	if o != nil && !IsNil(o.RuleID) {
		return true
	}

	return false
}

// SetRuleID gets a reference to the given int32 and assigns it to the RuleID field.
func (o *MaintenanceWindowGetResponse) SetRuleID(v int32) {
	o.RuleID = &v
}

// GetRuleName returns the RuleName field value if set, zero value otherwise.
func (o *MaintenanceWindowGetResponse) GetRuleName() string {
	if o == nil || IsNil(o.RuleName) {
		var ret string
		return ret
	}
	return *o.RuleName
}

// GetRuleNameOk returns a tuple with the RuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowGetResponse) GetRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RuleName) {
		return nil, false
	}
	return o.RuleName, true
}

// HasRuleName returns a boolean if a field has been set.
func (o *MaintenanceWindowGetResponse) HasRuleName() bool {
	if o != nil && !IsNil(o.RuleName) {
		return true
	}

	return false
}

// SetRuleName gets a reference to the given string and assigns it to the RuleName field.
func (o *MaintenanceWindowGetResponse) SetRuleName(v string) {
	o.RuleName = &v
}

func (o MaintenanceWindowGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaintenanceWindowGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScheduleID) {
		toSerialize["scheduleID"] = o.ScheduleID
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.ApplicableAction) {
		toSerialize["applicableAction"] = o.ApplicableAction
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.MaxDowntime) {
		toSerialize["maxDowntime"] = o.MaxDowntime
	}
	if !IsNil(o.RebootMethod) {
		toSerialize["rebootMethod"] = o.RebootMethod
	}
	if !IsNil(o.RebootDelay) {
		toSerialize["rebootDelay"] = o.RebootDelay
	}
	if !IsNil(o.DowntimeOnAction) {
		toSerialize["downtimeOnAction"] = o.DowntimeOnAction
	}
	if !IsNil(o.UserMessageEnabled) {
		toSerialize["userMessageEnabled"] = o.UserMessageEnabled
	}
	if !IsNil(o.UserMessage) {
		toSerialize["userMessage"] = o.UserMessage
	}
	if !IsNil(o.MessageSenderEnabled) {
		toSerialize["messageSenderEnabled"] = o.MessageSenderEnabled
	}
	if !IsNil(o.MessageSender) {
		toSerialize["messageSender"] = o.MessageSender
	}
	if !IsNil(o.PreserveStateEnabled) {
		toSerialize["preserveStateEnabled"] = o.PreserveStateEnabled
	}
	if !IsNil(o.RuleID) {
		toSerialize["ruleID"] = o.RuleID
	}
	if !IsNil(o.RuleName) {
		toSerialize["ruleName"] = o.RuleName
	}
	return toSerialize, nil
}

type NullableMaintenanceWindowGetResponse struct {
	value *MaintenanceWindowGetResponse
	isSet bool
}

func (v NullableMaintenanceWindowGetResponse) Get() *MaintenanceWindowGetResponse {
	return v.value
}

func (v *NullableMaintenanceWindowGetResponse) Set(val *MaintenanceWindowGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceWindowGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceWindowGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceWindowGetResponse(val *MaintenanceWindowGetResponse) *NullableMaintenanceWindowGetResponse {
	return &NullableMaintenanceWindowGetResponse{value: val, isSet: true}
}

func (v NullableMaintenanceWindowGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceWindowGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


