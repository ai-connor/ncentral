/*
N-central API-Service

<h3>API Access</h3> <p>In order to use the API-Service endpoints, ensure the following prerequisites are met:</p> <ol>     <li>User is created in N-central with appropriate permissions and configuration         (roles, access groups, MFA disabled, 2FA disabled).</li>     <li>API access is set up in N-central by having a JWT         (Json Web Token, referred to as \"N-central User-API Token\") generated,         acting as the permanent secret solely used for fetching access and refresh tokens.</li> </ol> <p>To access the API-Service endpoints, the JWT must first be exchanged with access and refresh tokens:</p> <ul>     <li>         <p><b>Using Swagger UI:</b></p>         <ol>             <li>Click on the <b>\"Authorize\"</b> button and enter the JWT into the value field                 under <b>\"N-central User-API Token (JWT)\"</b>, then navigate to                 the <code>/api/auth/authenticate</code> endpoint, click <b>\"Try it out\"</b>                 and then <b>\"Execute\"</b>.                 <br/>The new “Access Token” and “Refresh Token” fields will be available in the “Server Response”                 section below. Note that the expiry is 3600s ( 1h ). Copy the value of the access token.</li>             <li>Click on the <b>lock icon</b> to the right of any endpoint                 (or the <b>\"Authorize\"</b> button at the top), enter the access token in the                 <b>\"API-Access Token\"</b> field and click <b>\"Authorize\"</b>.</li>             <li>To call an API-Service endpoint, navigate to it, click <b>\"Try it out\"</b> button and             then <b>\"Execute\"</b>. If the steps above were successful, the access token is included in requests             automatically.</li>         </ol>     </li>     <li>         <p><b>Using a different HTTP client:</b></p>         <ol>             <li>Call the <code>/api/auth/authenticate</code> endpoint.                 The JWT token must be specified under the <code>Authorization</code> header,                 in the form <code>Bearer &lt;YOUR_JWT&gt;\"</code>.                 <br/>The access and refresh tokens are present in the response.</li>             <li>When calling API-Service endpoints, make sure to specify the <b>access token</b> in             the <code>Authorization</code> header as <code>Bearer &lt;ACCESS_TOKEN&gt;</code>.</li>         </ol>     </li> </ul> <h3>API Pagination & Sorting</h3> <p>Certain API-Service query endpoints support pagination and sorting through the use of query parameters.</p> <p><b>Pagination query parameters:</b></p> <ul>     <li>pageSize: number between 1 and 1000 specifying how many items to return for each page (if available).         If unspecified, the default is 50.</li>     <li>pageNumber: number specifying what page of data to retrieve, starting from 1 as the first page.         If unspecified, the default is 1.</li> </ul> <p>A paginated response contains several related fields, such as pageSize, pageNumber, itemCount, totalItems,     totalPages, _links (first, last, previous and next pages) and _warning (containing any warning messages,     if present).</p> <p><b>Sorting query parameters:</b></p> <ul>     <li>sortBy: the name of the field to sort the results by. If unspecified, no sorting is applied.</li>     <li>sortOrder: the case insensitive sorting direction supporting ASC/ASCENDING/NATURAL and         DESC/DESCENDING/REVERSE. If unspecified, the default is ASC.</li> </ul> <h3>API Rate Limiting</h3> <p>The API-Service endpoints are rate limited to ensure the stability, availability and performance of     the overall system.</p> <p>Upon reaching such a rate limit, the endpoints return HTTP Status 429 - Too Many Requests.</p> <p>The system will accept further requests once existing in-flight requests are completed.</p> 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncentral

import (
	"encoding/json"
)

// checks if the DeviceServiceMonitoringStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceServiceMonitoringStatus{}

// DeviceServiceMonitoringStatus Response for Device Service Monitoring Status information.
type DeviceServiceMonitoringStatus struct {
	TaskId *int32 `json:"taskId,omitempty"`
	ServiceId *int32 `json:"serviceId,omitempty"`
	TimeToStale *int32 `json:"timeToStale,omitempty"`
	TaskNote *string `json:"taskNote,omitempty"`
	TaskIdent *string `json:"taskIdent,omitempty"`
	StateStatus *string `json:"stateStatus,omitempty"`
	LastUpdate *string `json:"lastUpdate,omitempty"`
	LastDataId *int32 `json:"lastDataId,omitempty"`
	CreatedOn *string `json:"createdOn,omitempty"`
	ModuleName *string `json:"moduleName,omitempty"`
	ServiceItemId *int32 `json:"serviceItemId,omitempty"`
	LastScanTime *string `json:"lastScanTime,omitempty"`
	IsManagedTask *bool `json:"isManagedTask,omitempty"`
	TransitionTime *string `json:"transitionTime,omitempty"`
	ApplianceId *int32 `json:"applianceId,omitempty"`
	ApplianceName *string `json:"applianceName,omitempty"`
}

// NewDeviceServiceMonitoringStatus instantiates a new DeviceServiceMonitoringStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceServiceMonitoringStatus() *DeviceServiceMonitoringStatus {
	this := DeviceServiceMonitoringStatus{}
	return &this
}

// NewDeviceServiceMonitoringStatusWithDefaults instantiates a new DeviceServiceMonitoringStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceServiceMonitoringStatusWithDefaults() *DeviceServiceMonitoringStatus {
	this := DeviceServiceMonitoringStatus{}
	return &this
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetTaskId() int32 {
	if o == nil || IsNil(o.TaskId) {
		var ret int32
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetTaskIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given int32 and assigns it to the TaskId field.
func (o *DeviceServiceMonitoringStatus) SetTaskId(v int32) {
	o.TaskId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetServiceId() int32 {
	if o == nil || IsNil(o.ServiceId) {
		var ret int32
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetServiceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given int32 and assigns it to the ServiceId field.
func (o *DeviceServiceMonitoringStatus) SetServiceId(v int32) {
	o.ServiceId = &v
}

// GetTimeToStale returns the TimeToStale field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetTimeToStale() int32 {
	if o == nil || IsNil(o.TimeToStale) {
		var ret int32
		return ret
	}
	return *o.TimeToStale
}

// GetTimeToStaleOk returns a tuple with the TimeToStale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetTimeToStaleOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeToStale) {
		return nil, false
	}
	return o.TimeToStale, true
}

// HasTimeToStale returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasTimeToStale() bool {
	if o != nil && !IsNil(o.TimeToStale) {
		return true
	}

	return false
}

// SetTimeToStale gets a reference to the given int32 and assigns it to the TimeToStale field.
func (o *DeviceServiceMonitoringStatus) SetTimeToStale(v int32) {
	o.TimeToStale = &v
}

// GetTaskNote returns the TaskNote field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetTaskNote() string {
	if o == nil || IsNil(o.TaskNote) {
		var ret string
		return ret
	}
	return *o.TaskNote
}

// GetTaskNoteOk returns a tuple with the TaskNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetTaskNoteOk() (*string, bool) {
	if o == nil || IsNil(o.TaskNote) {
		return nil, false
	}
	return o.TaskNote, true
}

// HasTaskNote returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasTaskNote() bool {
	if o != nil && !IsNil(o.TaskNote) {
		return true
	}

	return false
}

// SetTaskNote gets a reference to the given string and assigns it to the TaskNote field.
func (o *DeviceServiceMonitoringStatus) SetTaskNote(v string) {
	o.TaskNote = &v
}

// GetTaskIdent returns the TaskIdent field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetTaskIdent() string {
	if o == nil || IsNil(o.TaskIdent) {
		var ret string
		return ret
	}
	return *o.TaskIdent
}

// GetTaskIdentOk returns a tuple with the TaskIdent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetTaskIdentOk() (*string, bool) {
	if o == nil || IsNil(o.TaskIdent) {
		return nil, false
	}
	return o.TaskIdent, true
}

// HasTaskIdent returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasTaskIdent() bool {
	if o != nil && !IsNil(o.TaskIdent) {
		return true
	}

	return false
}

// SetTaskIdent gets a reference to the given string and assigns it to the TaskIdent field.
func (o *DeviceServiceMonitoringStatus) SetTaskIdent(v string) {
	o.TaskIdent = &v
}

// GetStateStatus returns the StateStatus field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetStateStatus() string {
	if o == nil || IsNil(o.StateStatus) {
		var ret string
		return ret
	}
	return *o.StateStatus
}

// GetStateStatusOk returns a tuple with the StateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetStateStatusOk() (*string, bool) {
	if o == nil || IsNil(o.StateStatus) {
		return nil, false
	}
	return o.StateStatus, true
}

// HasStateStatus returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasStateStatus() bool {
	if o != nil && !IsNil(o.StateStatus) {
		return true
	}

	return false
}

// SetStateStatus gets a reference to the given string and assigns it to the StateStatus field.
func (o *DeviceServiceMonitoringStatus) SetStateStatus(v string) {
	o.StateStatus = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetLastUpdate() string {
	if o == nil || IsNil(o.LastUpdate) {
		var ret string
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetLastUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given string and assigns it to the LastUpdate field.
func (o *DeviceServiceMonitoringStatus) SetLastUpdate(v string) {
	o.LastUpdate = &v
}

// GetLastDataId returns the LastDataId field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetLastDataId() int32 {
	if o == nil || IsNil(o.LastDataId) {
		var ret int32
		return ret
	}
	return *o.LastDataId
}

// GetLastDataIdOk returns a tuple with the LastDataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetLastDataIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LastDataId) {
		return nil, false
	}
	return o.LastDataId, true
}

// HasLastDataId returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasLastDataId() bool {
	if o != nil && !IsNil(o.LastDataId) {
		return true
	}

	return false
}

// SetLastDataId gets a reference to the given int32 and assigns it to the LastDataId field.
func (o *DeviceServiceMonitoringStatus) SetLastDataId(v int32) {
	o.LastDataId = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetCreatedOn() string {
	if o == nil || IsNil(o.CreatedOn) {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetCreatedOnOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *DeviceServiceMonitoringStatus) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetModuleName returns the ModuleName field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetModuleName() string {
	if o == nil || IsNil(o.ModuleName) {
		var ret string
		return ret
	}
	return *o.ModuleName
}

// GetModuleNameOk returns a tuple with the ModuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetModuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModuleName) {
		return nil, false
	}
	return o.ModuleName, true
}

// HasModuleName returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasModuleName() bool {
	if o != nil && !IsNil(o.ModuleName) {
		return true
	}

	return false
}

// SetModuleName gets a reference to the given string and assigns it to the ModuleName field.
func (o *DeviceServiceMonitoringStatus) SetModuleName(v string) {
	o.ModuleName = &v
}

// GetServiceItemId returns the ServiceItemId field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetServiceItemId() int32 {
	if o == nil || IsNil(o.ServiceItemId) {
		var ret int32
		return ret
	}
	return *o.ServiceItemId
}

// GetServiceItemIdOk returns a tuple with the ServiceItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetServiceItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServiceItemId) {
		return nil, false
	}
	return o.ServiceItemId, true
}

// HasServiceItemId returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasServiceItemId() bool {
	if o != nil && !IsNil(o.ServiceItemId) {
		return true
	}

	return false
}

// SetServiceItemId gets a reference to the given int32 and assigns it to the ServiceItemId field.
func (o *DeviceServiceMonitoringStatus) SetServiceItemId(v int32) {
	o.ServiceItemId = &v
}

// GetLastScanTime returns the LastScanTime field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetLastScanTime() string {
	if o == nil || IsNil(o.LastScanTime) {
		var ret string
		return ret
	}
	return *o.LastScanTime
}

// GetLastScanTimeOk returns a tuple with the LastScanTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetLastScanTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastScanTime) {
		return nil, false
	}
	return o.LastScanTime, true
}

// HasLastScanTime returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasLastScanTime() bool {
	if o != nil && !IsNil(o.LastScanTime) {
		return true
	}

	return false
}

// SetLastScanTime gets a reference to the given string and assigns it to the LastScanTime field.
func (o *DeviceServiceMonitoringStatus) SetLastScanTime(v string) {
	o.LastScanTime = &v
}

// GetIsManagedTask returns the IsManagedTask field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetIsManagedTask() bool {
	if o == nil || IsNil(o.IsManagedTask) {
		var ret bool
		return ret
	}
	return *o.IsManagedTask
}

// GetIsManagedTaskOk returns a tuple with the IsManagedTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetIsManagedTaskOk() (*bool, bool) {
	if o == nil || IsNil(o.IsManagedTask) {
		return nil, false
	}
	return o.IsManagedTask, true
}

// HasIsManagedTask returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasIsManagedTask() bool {
	if o != nil && !IsNil(o.IsManagedTask) {
		return true
	}

	return false
}

// SetIsManagedTask gets a reference to the given bool and assigns it to the IsManagedTask field.
func (o *DeviceServiceMonitoringStatus) SetIsManagedTask(v bool) {
	o.IsManagedTask = &v
}

// GetTransitionTime returns the TransitionTime field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetTransitionTime() string {
	if o == nil || IsNil(o.TransitionTime) {
		var ret string
		return ret
	}
	return *o.TransitionTime
}

// GetTransitionTimeOk returns a tuple with the TransitionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetTransitionTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TransitionTime) {
		return nil, false
	}
	return o.TransitionTime, true
}

// HasTransitionTime returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasTransitionTime() bool {
	if o != nil && !IsNil(o.TransitionTime) {
		return true
	}

	return false
}

// SetTransitionTime gets a reference to the given string and assigns it to the TransitionTime field.
func (o *DeviceServiceMonitoringStatus) SetTransitionTime(v string) {
	o.TransitionTime = &v
}

// GetApplianceId returns the ApplianceId field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetApplianceId() int32 {
	if o == nil || IsNil(o.ApplianceId) {
		var ret int32
		return ret
	}
	return *o.ApplianceId
}

// GetApplianceIdOk returns a tuple with the ApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetApplianceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ApplianceId) {
		return nil, false
	}
	return o.ApplianceId, true
}

// HasApplianceId returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasApplianceId() bool {
	if o != nil && !IsNil(o.ApplianceId) {
		return true
	}

	return false
}

// SetApplianceId gets a reference to the given int32 and assigns it to the ApplianceId field.
func (o *DeviceServiceMonitoringStatus) SetApplianceId(v int32) {
	o.ApplianceId = &v
}

// GetApplianceName returns the ApplianceName field value if set, zero value otherwise.
func (o *DeviceServiceMonitoringStatus) GetApplianceName() string {
	if o == nil || IsNil(o.ApplianceName) {
		var ret string
		return ret
	}
	return *o.ApplianceName
}

// GetApplianceNameOk returns a tuple with the ApplianceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceServiceMonitoringStatus) GetApplianceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceName) {
		return nil, false
	}
	return o.ApplianceName, true
}

// HasApplianceName returns a boolean if a field has been set.
func (o *DeviceServiceMonitoringStatus) HasApplianceName() bool {
	if o != nil && !IsNil(o.ApplianceName) {
		return true
	}

	return false
}

// SetApplianceName gets a reference to the given string and assigns it to the ApplianceName field.
func (o *DeviceServiceMonitoringStatus) SetApplianceName(v string) {
	o.ApplianceName = &v
}

func (o DeviceServiceMonitoringStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceServiceMonitoringStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaskId) {
		toSerialize["taskId"] = o.TaskId
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.TimeToStale) {
		toSerialize["timeToStale"] = o.TimeToStale
	}
	if !IsNil(o.TaskNote) {
		toSerialize["taskNote"] = o.TaskNote
	}
	if !IsNil(o.TaskIdent) {
		toSerialize["taskIdent"] = o.TaskIdent
	}
	if !IsNil(o.StateStatus) {
		toSerialize["stateStatus"] = o.StateStatus
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["lastUpdate"] = o.LastUpdate
	}
	if !IsNil(o.LastDataId) {
		toSerialize["lastDataId"] = o.LastDataId
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if !IsNil(o.ModuleName) {
		toSerialize["moduleName"] = o.ModuleName
	}
	if !IsNil(o.ServiceItemId) {
		toSerialize["serviceItemId"] = o.ServiceItemId
	}
	if !IsNil(o.LastScanTime) {
		toSerialize["lastScanTime"] = o.LastScanTime
	}
	if !IsNil(o.IsManagedTask) {
		toSerialize["isManagedTask"] = o.IsManagedTask
	}
	if !IsNil(o.TransitionTime) {
		toSerialize["transitionTime"] = o.TransitionTime
	}
	if !IsNil(o.ApplianceId) {
		toSerialize["applianceId"] = o.ApplianceId
	}
	if !IsNil(o.ApplianceName) {
		toSerialize["applianceName"] = o.ApplianceName
	}
	return toSerialize, nil
}

type NullableDeviceServiceMonitoringStatus struct {
	value *DeviceServiceMonitoringStatus
	isSet bool
}

func (v NullableDeviceServiceMonitoringStatus) Get() *DeviceServiceMonitoringStatus {
	return v.value
}

func (v *NullableDeviceServiceMonitoringStatus) Set(val *DeviceServiceMonitoringStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceServiceMonitoringStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceServiceMonitoringStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceServiceMonitoringStatus(val *DeviceServiceMonitoringStatus) *NullableDeviceServiceMonitoringStatus {
	return &NullableDeviceServiceMonitoringStatus{value: val, isSet: true}
}

func (v NullableDeviceServiceMonitoringStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceServiceMonitoringStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


